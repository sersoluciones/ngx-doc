var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AwsData.html",[0,0.261,1,2.674]],["body/interfaces/AwsData.html",[0,0.466,1,4.767,2,1.523,3,0.179,4,0.179,5,0.157,6,4.736,7,0.295,8,0.762,9,5.157,10,0.248,11,0.013,12,0.211,13,4.351,14,1.062,15,0.01,16,0.012,17,0.01]],["title/modules/AwsModule.html",[18,1.624,19,3.132]],["body/modules/AwsModule.html",[3,0.147,4,0.147,5,0.129,9,3.116,10,0.204,11,0.014,12,0.187,13,3.58,15,0.008,16,0.01,17,0.008,19,5.732,20,2.397,21,4.965,22,1.253,23,4.23,24,3.897,25,6.313,26,5.732,27,0.941,28,4.965,29,1.012,30,0.976,31,0.532,32,6.313,33,1.127,34,5.447,35,0.815,36,4.087,37,0.874,38,4.356,39,4.965,40,1.668,41,3.897,42,1.668,43,4.321,44,2.292,45,2.936,46,2.292,47,4.552,48,3.897,49,2.936,50,4.965,51,3.327,52,3.897,53,2.021,54,4.965,55,2.638,56,3.897,57,3.048,58,2.638,59,0.645,60,3.897,61,1.345]],["title/injectables/AwsService.html",[38,2.505,62,1.081]],["body/injectables/AwsService.html",[1,5.126,3,0.105,4,0.105,5,0.092,7,0.173,8,0.537,9,3.145,10,0.261,11,0.014,12,0.149,13,4.579,14,1.381,15,0.006,16,0.008,17,0.006,22,1.265,27,1.321,29,1.294,30,1.248,31,0.68,33,1.522,35,0.684,37,0.62,38,3.145,40,2.254,42,1.684,44,2.931,45,2.084,46,3.218,47,2.542,59,0.36,61,1.817,62,1.357,63,1.558,64,2.767,65,2.419,66,4.579,67,2.281,68,5.831,69,3.24,70,5.011,71,5.011,72,2.535,73,1.062,74,2.767,75,3.525,76,3.66,77,5.011,78,3.525,79,4.984,80,5.526,81,3.755,82,3.755,83,3.9,84,6.35,85,3.066,86,6.35,87,5.011,88,5.011,89,3.525,90,3.525,91,3.525,92,3.525,93,3.525,94,3.525,95,1.565,96,0.922,97,3.525,98,2.362,99,3.358,100,1.783,101,1.972,102,1.379,103,3.068,104,3.068,105,2.213,106,2.767,107,2.362,108,2.767,109,2.542,110,2.542,111,3.068,112,3.068,113,3.068,114,1.558,115,1.558,116,5.011,117,1.702,118,3.525,119,3.525,120,3.525,121,3.613,122,2.963,123,2.963,124,2.215,125,5.011,126,2.804,127,5.011,128,5.011,129,3.525,130,3.525]],["title/interfaces/BaseValidationModel.html",[0,0.261,131,2.877]],["body/interfaces/BaseValidationModel.html",[0,0.31,2,1.196,3,0.141,4,0.141,5,0.123,7,0.232,8,0.656,10,0.295,11,0.014,12,0.182,14,1.408,15,0.008,16,0.01,17,0.008,31,0.769,35,0.872,61,1.944,95,2.322,100,2.398,101,2.652,123,2.803,131,4.896,132,4.125,133,7.178,134,3.043,135,7.178,136,1.775,137,5.333,138,4.125,139,5.333,140,6.127,141,4.74,142,2.288,143,3.846,144,2.288,145,6.127,146,4.74,147,4.809,148,4.74,149,3.176,150,2.518,151,4.125,152,4.125,153,3.417,154,4.74,155,4.74,156,4.74,157,3.72,158,4.74,159,4.74,160,4.74,161,3.72,162,1.929,163,6.127]],["title/interfaces/BgImage.html",[0,0.261,164,2.877]],["body/interfaces/BgImage.html",[0,0.312,2,1.204,3,0.142,4,0.142,5,0.207,7,0.233,8,0.659,10,0.253,11,0.014,12,0.142,14,1.199,15,0.008,16,0.01,17,0.008,31,0.771,35,0.874,37,0.839,38,3.861,44,2.202,59,0.487,65,2.303,67,2.406,100,2.413,101,2.669,123,4.255,149,3.196,164,5.188,165,3.743,166,3.743,167,1.601,168,4.436,169,2.534,170,3.442,171,3.638,172,3.743,173,4.151,174,3.439,175,4.151,176,1.941,177,2.022,178,1.941,179,2.314,180,2.669,181,2.202,182,4.151,183,5.188,184,4.151,185,4.151,186,3.439,187,4.151,188,3.743,189,4.151,190,4.151,191,3.439,192,4.151,193,4.151,194,5.354,195,5.927,196,4.151,197,4.151,198,4.151,199,4.151]],["title/directives/BgImageDirective.html",[167,0.938,180,2.233]],["body/directives/BgImageDirective.html",[0,0.289,3,0.131,4,0.131,5,0.182,7,0.216,8,0.627,10,0.24,11,0.014,12,0.131,14,0.778,15,0.007,16,0.01,17,0.007,22,1.477,27,1.324,29,0.901,30,0.869,31,0.473,33,1.003,35,0.853,37,0.778,38,4.386,44,2.702,59,0.451,65,2.134,67,2.29,73,1.332,95,1.381,96,1.156,100,2.236,101,2.473,123,2.614,149,2.962,164,5.494,165,5.705,166,3.469,167,1.543,168,4.733,169,2.349,170,3.91,171,4.132,172,3.469,173,3.847,174,3.187,175,3.847,176,1.799,177,1.874,178,1.799,179,2.469,180,3.276,181,2.702,182,3.847,183,5.038,184,5.712,185,5.095,186,4.733,187,5.712,188,5.484,189,3.847,190,3.847,191,3.187,192,3.847,193,3.847,194,5.095,195,5.712,196,3.847,197,3.847,198,3.847,199,3.847,200,1.729,201,1.729,202,3.462,203,3.847,204,5.854,205,4.42,206,4.42,207,1.874]],["title/interfaces/CenterPoint.html",[0,0.261,208,2.505]],["body/interfaces/CenterPoint.html",[0,0.479,2,1.258,3,0.148,4,0.148,5,0.13,7,0.244,8,0.678,10,0.31,11,0.014,12,0.207,15,0.008,16,0.01,17,0.008,31,0.826,40,1.676,42,1.676,53,2.03,82,2.949,85,2.408,124,2.205,136,2.176,208,3.973,209,3.596,210,4.635,211,4.635,212,5.742,213,5.742,214,5.742,215,2.173,216,2.949,217,2.649,218,3.341,219,3.914,220,3.341,221,3.914,222,2.79,223,2.205,224,3.341,225,3.13]],["title/injectables/ClaimsService.html",[62,1.081,66,2.877]],["body/injectables/ClaimsService.html",[3,0.107,4,0.107,5,0.094,7,0.289,8,0.544,10,0.263,11,0.014,12,0.107,14,1.337,15,0.006,16,0.008,17,0.006,22,1.283,27,1.33,29,1.306,30,1.26,31,0.686,33,1.592,35,0.692,37,0.633,40,2.358,42,2.153,44,2.347,45,2.127,46,3.33,59,0.367,61,1.377,62,1.377,63,1.59,65,2.454,66,5.059,67,2.306,69,3.357,72,2.572,81,3.486,85,1.737,95,1.588,96,0.94,104,5.131,105,3.7,106,2.823,107,3.951,108,4.627,109,2.593,110,4.62,111,3.13,112,3.13,113,3.13,114,1.59,115,1.59,117,1.737,121,3.665,124,2.606,126,2.844,134,1.525,215,2.253,226,5.201,227,3.13,228,5.896,229,5.083,230,5.083,231,5.083,232,4.937,233,5.083,234,3.597,235,5.896,236,5.896,237,6.76,238,3.597,239,5.083,240,5.083,241,5.083,242,3.597,243,5.083,244,3.99,245,6.407,246,3.597,247,3.597,248,3.597,249,3.597,250,3.597,251,3.597,252,3.597,253,3.597,254,3.597,255,3.597,256,3.597,257,3.13,258,2.823,259,5.083,260,3.597,261,3.299,262,3.597,263,3.597,264,2.127,265,3.597,266,3.597,267,3.597,268,3.597,269,3.597,270,3.597,271,1.59]],["title/classes/Color.html",[59,0.408,272,2.877]],["body/classes/Color.html",[3,0.088,4,0.088,5,0.077,7,0.145,8,0.474,10,0.32,11,0.014,12,0.131,14,1.102,15,0.005,16,0.007,17,0.005,22,1.116,27,1.456,29,1.194,30,1.151,31,0.627,33,1.199,35,0.519,59,0.303,61,1.198,73,0.895,95,2.124,100,1.502,102,2.067,136,2.151,143,2.776,144,1.434,150,1.578,207,2.883,215,1.651,271,2.589,272,4.223,273,1.578,274,2.584,275,5.285,276,7.142,277,6.216,278,5.285,279,5.285,280,5.285,281,5.285,282,5.285,283,5.285,284,6.565,285,5.285,286,4.423,287,4.423,288,4.423,289,4.423,290,5.856,291,4.423,292,4.596,293,2.969,294,2.969,295,2.969,296,4.423,297,2.969,298,4.423,299,2.969,300,3.471,301,2.969,302,2.969,303,5.285,304,2.969,305,4.423,306,2.969,307,2.969,308,4.423,309,2.969,310,5.856,311,2.969,312,4.423,313,2.969,314,2.969,315,2.776,316,2.969,317,2.584,318,2.584,319,2.969,320,2.969,321,2.969,322,2.33,323,2.969,324,4.423,325,2.969,326,2.584,327,5.285,328,5.856,329,2.969,330,5.285,331,2.969,332,2.969,333,2.969,334,2.969,335,2.969,336,2.969,337,2.969,338,2.969,339,2.969,340,4.423,341,2.969,342,2.969,343,2.969,344,2.969,345,4.423,346,2.969,347,1.537,348,2.969,349,2.969,350,2.969,351,4.423,352,5.856,353,4.423,354,2.969,355,2.969,356,2.969,357,2.969,358,2.969,359,4.423,360,2.969,361,2.969,362,2.969,363,2.969,364,2.969,365,2.33,366,2.969,367,2.969,368,2.584,369,2.969,370,2.969,371,2.969,372,2.969,373,2.969,374,5.285,375,2.969,376,4.6,377,2.969,378,2.969,379,3.471,380,2.969,381,2.969,382,2.33]],["title/injectables/CookiesService.html",[62,1.081,383,3.132]],["body/injectables/CookiesService.html",[3,0.101,4,0.101,5,0.088,7,0.166,10,0.257,11,0.014,12,0.101,14,1.382,15,0.006,16,0.008,17,0.006,22,1.232,27,1.305,29,1.165,30,1.395,31,0.612,33,1.563,35,0.399,37,0.598,40,2.223,42,1.142,44,2.638,45,2.01,46,2.254,53,1.384,59,0.347,62,1.323,63,1.503,69,3.358,73,1.722,80,4.25,82,2.01,83,2.733,95,1.526,96,1.494,109,2.451,114,1.503,115,1.503,117,2.358,122,2.01,124,3.045,136,1.277,215,1.526,217,1.806,223,2.526,244,4.485,261,1.902,264,2.01,271,1.503,292,5.568,347,1.42,383,4.902,384,2.959,385,4.883,386,4.883,387,4.485,388,5.994,389,5.405,390,6.61,391,4.883,392,4.883,393,4.25,394,4.883,395,6.246,396,4.883,397,5.715,398,5.715,399,6.616,400,4.25,401,5.715,402,6.246,403,3.4,404,3.4,405,5.436,406,4.902,407,3.4,408,4.883,409,3.4,410,3.4,411,3.4,412,3.4,413,2.134,414,3.4,415,4.883,416,4.973,417,4.883,418,5.715,419,5.715,420,5.715,421,3.4,422,3.4,423,3.4,424,3.4,425,3.4,426,3.4,427,2.668,428,3.4,429,1.806,430,3.4,431,2.959,432,2.959,433,5.715,434,3.4,435,3.4,436,3.4,437,3.4,438,3.4,439,3.4,440,3.4,441,3.4,442,3.4,443,3.4]],["title/directives/CopyToClipboardDirective.html",[167,0.938,444,2.36]],["body/directives/CopyToClipboardDirective.html",[3,0.148,4,0.148,5,0.13,7,0.244,10,0.205,11,0.014,12,0.148,15,0.008,16,0.01,17,0.008,27,1.318,35,0.585,37,0.878,59,0.509,95,1.558,102,1.95,167,1.635,169,2.649,176,2.03,177,2.114,178,2.03,179,2.616,200,1.95,201,1.95,202,3.743,207,2.114,271,3.075,347,1.45,444,3.743,445,6.367,446,4.34,447,7.315,448,4.564,449,6.955,450,4.564,451,5.509,452,4.987,453,4.113,454,4.987,455,3.914,456,4.242,457,4.987,458,4.987,459,3.341,460,3.743,461,4.987,462,4.987,463,4.34,464,4.987,465,4.987,466,4.987,467,4.987,468,4.987,469,4.987,470,3.596,471,4.987,472,4.987,473,4.987,474,4.987,475,4.987,476,4.987,477,4.987,478,4.987,479,4.987,480,4.987,481,4.987]],["title/classes/CustomValidators.html",[59,0.408,482,3.132]],["body/classes/CustomValidators.html",[3,0.054,4,0.054,5,0.078,7,0.089,10,0.265,11,0.014,12,0.054,14,1.41,15,0.003,16,0.005,17,0.003,22,0.759,23,5.159,27,1.194,29,1.284,30,1.238,31,0.674,33,1.429,35,0.625,40,2.116,42,1.501,44,3.153,53,2.944,59,0.186,61,1.706,79,1.429,81,4.376,83,2.981,85,1.857,105,4.645,106,4.942,108,2.362,109,4.757,123,2.925,124,2.355,126,4.011,131,3.221,134,1.276,137,3.887,138,1.585,139,4.305,142,0.879,151,3.347,152,4.305,153,1.313,161,3.018,217,3.843,222,1.684,223,1.975,244,2.362,261,3.524,273,0.967,388,2.619,389,2.362,405,6.44,413,1.143,429,1.599,482,2.362,483,5.62,484,1.585,485,3.009,486,3.009,487,1.889,488,3.009,489,3.347,490,3.347,491,3.347,492,3.347,493,3.887,494,3.347,495,3.347,496,3.347,497,3.347,498,1.821,499,6.348,500,3.009,501,3.009,502,3.009,503,3.009,504,3.009,505,7.754,506,3.009,507,3.009,508,3.009,509,3.009,510,3.009,511,3.009,512,3.846,513,7.294,514,1.821,515,6.83,516,6.928,517,5.895,518,5.895,519,5.895,520,6.458,521,6.598,522,6.928,523,3.846,524,1.821,525,3.846,526,1.821,527,3.846,528,1.821,529,3.846,530,5.327,531,1.821,532,3.506,533,4.467,534,4.467,535,3.887,536,4.467,537,3.846,538,5.327,539,3.846,540,1.821,541,5.742,542,3.009,543,3.009,544,4.467,545,4.467,546,4.467,547,4.467,548,4.467,549,3.887,550,4.467,551,3.846,552,1.821,553,2.619,554,3.846,555,1.821,556,3.009,557,3.009,558,3.009,559,3.009,560,3.009,561,3.009,562,3.009,563,3.009,564,3.009,565,3.009,566,3.846,567,3.506,568,1.821,569,1.684,570,1.821,571,1.821,572,1.585]],["title/injectables/DataService.html",[62,1.081,573,2.674]],["body/injectables/DataService.html",[3,0.134,4,0.134,5,0.117,7,0.22,10,0.243,11,0.014,12,0.134,15,0.007,16,0.01,17,0.007,22,1.495,27,1.122,29,1.207,30,1.164,31,0.634,33,1.344,35,0.695,37,0.792,59,0.459,61,1.905,62,1.604,63,1.989,100,2.276,101,2.517,114,1.989,115,1.989,162,2.864,215,1.85,271,3.11,347,1.722,573,3.968,574,3.705,575,3.915,576,5.922,577,5.922,578,5.922,579,7.765,580,6.006,581,4.498,582,4.27,583,5.922,584,4.498,585,5.154,586,4.498,587,4.498,588,5.922,589,4.498,590,4.498,591,4.498,592,7.506,593,2.172,594,4.498,595,5.922,596,5.922,597,3.915,598,4.498,599,4.498]],["title/injectables/DownloadService.html",[62,1.081,600,3.132]],["body/injectables/DownloadService.html",[3,0.154,4,0.154,5,0.135,7,0.255,8,0.696,10,0.267,11,0.014,12,0.154,14,1.248,15,0.009,16,0.011,17,0.009,22,1.64,27,1.344,29,1.06,30,1.023,31,0.557,33,1.18,35,0.61,37,0.915,40,2.184,59,0.531,62,1.761,63,2.299,73,2.137,96,1.36,107,3.485,114,2.299,115,2.299,123,4.521,124,2.299,126,2.91,261,3.637,600,5.102,601,4.526,602,7.091,603,6.5,604,6.5,605,5.201,606,6.5,607,5.201,608,5.201,609,5.201,610,5.201,611,5.201,612,5.201,613,5.201,614,5.201,615,5.201,616,5.201,617,5.201,618,5.201,619,5.201,620,5.201,621,5.201,622,5.201]],["title/interfaces/DropdownSettings.html",[0,0.261,623,3.132]],["body/interfaces/DropdownSettings.html",[0,0.223,2,0.861,3,0.101,4,0.101,5,0.089,7,0.167,8,0.524,10,0.337,11,0.014,12,0.101,14,1.467,15,0.006,16,0.008,17,0.006,31,0.903,136,1.934,215,2.596,273,3.323,574,1.908,580,4.909,623,3.841,624,2.968,625,6.255,626,6.255,627,6.255,628,5.443,629,5.443,630,5.443,631,6.255,632,6.255,633,6.255,634,6.255,635,6.255,636,6.255,637,5.443,638,6.255,639,6.255,640,5.443,641,5.443,642,5.443,643,5.443,644,6.255,645,5.443,646,5.443,647,6.255,648,6.255,649,6.255,650,5.443]],["title/interfaces/ErrorDetails.html",[0,0.261,651,2.877]],["body/interfaces/ErrorDetails.html",[0,0.379,2,1.461,3,0.172,4,0.172,5,0.151,7,0.283,8,0.744,10,0.305,11,0.014,12,0.206,14,1.387,15,0.01,16,0.011,17,0.01,35,0.68,142,2.796,153,5.558,567,6.05,651,5.006,652,3.077,653,3.635,654,4.545,655,6.708,656,4.176]],["title/injectables/ExternalScriptService.html",[62,1.081,657,3.132]],["body/injectables/ExternalScriptService.html",[3,0.14,4,0.14,5,0.123,7,0.231,10,0.193,11,0.014,12,0.14,14,1.38,15,0.008,16,0.01,17,0.008,22,1.54,27,1.157,29,0.96,30,0.926,31,0.505,33,1.069,35,0.553,37,0.829,40,1.583,42,2.275,46,2.817,59,0.481,61,1.276,62,1.653,63,2.082,65,2.947,73,2.04,96,1.231,114,2.082,115,2.082,123,2.785,126,3.415,134,3.036,223,2.698,347,1.775,549,4.099,657,5.966,658,5.892,659,5.892,660,4.099,661,6.103,662,6.103,663,6.103,664,6.103,665,4.71,666,6.103,667,7.419,668,4.71,669,3.697,670,4.71,671,4.71,672,4.71,673,4.71,674,3.697,675,3.396,676,5.311,677,6.103,678,6.103,679,4.71,680,4.71,681,4.099,682,3.697,683,4.71,684,4.71,685,4.71,686,4.71]],["title/classes/FacebookSDKConfig.html",[59,0.408,687,2.877]],["body/classes/FacebookSDKConfig.html",[3,0.156,4,0.156,5,0.136,7,0.256,8,0.699,10,0.268,11,0.014,12,0.156,15,0.009,16,0.011,17,0.009,27,1.411,29,1.331,30,1.283,31,0.699,33,1.188,35,0.615,59,0.535,61,1.418,67,2.782,69,2.886,72,3.303,73,1.578,95,2.039,96,1.369,117,2.528,273,2.782,687,4.707,688,6.668,689,4.11,690,6.19,691,7.179,692,5.681,693,4.557,694,4.557,695,4.557,696,4.557,697,4.557,698,4.557,699,4.557,700,5.681,701,4.557,702,4.557]],["title/modules/FacebookSDKModule.html",[18,1.624,703,3.132]],["body/modules/FacebookSDKModule.html",[3,0.146,4,0.146,5,0.128,10,0.202,11,0.014,12,0.186,15,0.008,16,0.01,17,0.008,20,2.372,22,1.24,23,4.201,24,3.855,26,5.71,27,0.931,29,1.001,30,0.966,31,0.526,33,1.115,34,5.42,35,0.811,36,4.071,37,0.864,40,1.651,41,3.855,42,1.651,46,2.268,48,3.855,49,2.905,51,3.291,52,3.855,55,2.61,56,3.855,57,3.027,58,2.61,59,0.64,60,3.855,61,1.33,162,2.552,222,2.749,223,2.172,390,4.275,674,4.921,703,5.71,704,4.521,705,4.275,706,6.27,707,4.912,708,6.27,709,4.521,710,4.275,711,4.275,712,4.275,713,4.521,714,4.912,715,4.912,716,4.912,717,4.912,718,4.912,719,4.912]],["title/injectables/FacebookSDKService.html",[62,1.081,709,2.877]],["body/injectables/FacebookSDKService.html",[3,0.094,4,0.094,5,0.083,7,0.156,8,0.498,10,0.226,11,0.014,12,0.138,14,0.819,15,0.005,16,0.008,17,0.005,22,1.174,27,1.317,29,0.948,30,0.914,31,0.498,33,1.374,35,0.756,37,0.559,40,1.848,42,1.563,44,2.147,45,1.88,46,1.467,59,0.325,61,1.49,62,1.26,63,1.405,67,2.632,69,3.151,72,2.353,73,0.958,74,2.495,76,4.043,85,1.535,95,1.718,96,0.831,98,2.13,99,3.117,102,2.519,114,1.405,115,1.405,117,1.535,121,2.292,122,1.88,124,2.848,134,1.348,143,4.224,144,2.246,162,1.893,207,1.348,217,1.689,222,2.603,223,2.056,261,1.779,347,1.352,382,4.317,427,2.495,453,3.253,460,2.75,569,1.779,593,1.535,674,4.317,675,3.966,682,2.495,687,4.644,699,4.787,704,5.139,709,3.354,713,2.292,720,2.292,721,4.787,722,4.317,723,5.5,724,5.268,725,5.268,726,2.766,727,3.179,728,3.179,729,2.766,730,4.651,731,3.179,732,2.766,733,3.179,734,2.766,735,2.766,736,3.354,737,3.179,738,3.179,739,2.766,740,3.966,741,2.766,742,3.179,743,4.048,744,2.766,745,4.048,746,3.179,747,2.766,748,3.179,749,2.766,750,3.179,751,2.766,752,2.766,753,2.766,754,2.766,755,2.766,756,2.766,757,2.766,758,3.65,759,3.179,760,3.179,761,3.179,762,3.179,763,3.179,764,3.179,765,3.179,766,3.179,767,2.766,768,3.179,769,3.179,770,3.179,771,3.179,772,3.179,773,2.766,774,3.179,775,2.13,776,3.179,777,2.13,778,3.179,779,1.779,780,3.179,781,3.179,782,3.179,783,3.179,784,3.179,785,3.179,786,3.179,787,3.179,788,2.766,789,2.495,790,3.179,791,2.495,792,2.766,793,2.766,794,2.766,795,2.766,796,2.766,797,2.292,798,2.766,799,2.766,800,2.292,801,3.179,802,2.766,803,2.766,804,3.179,805,2.766,806,2.766,807,2.766,808,2.766,809,2.766,810,2.766,811,2.766,812,3.179,813,3.179,814,4.651]],["title/interfaces/FacebookUserProfile.html",[0,0.261,736,2.877]],["body/interfaces/FacebookUserProfile.html",[0,0.354,2,1.365,3,0.161,4,0.161,5,0.141,7,0.265,8,0.713,10,0.323,11,0.014,12,0.161,14,1.466,15,0.009,16,0.011,17,0.009,31,0.843,134,3.193,136,1.887,736,4.802,773,6.554,775,5.047,777,5.047,779,4.214,815,4.708,816,5.43]],["title/interfaces/FilterSettings.html",[0,0.261,817,3.132]],["body/interfaces/FilterSettings.html",[0,0.296,2,1.14,3,0.134,4,0.134,5,0.118,7,0.221,8,0.636,10,0.332,11,0.014,12,0.134,14,1.475,15,0.007,16,0.01,17,0.007,31,0.896,136,1.734,215,2.456,273,3.744,580,5.53,628,6.132,629,6.132,630,6.132,637,6.132,640,6.132,641,6.132,642,6.132,643,6.132,645,6.132,646,6.132,650,6.132,817,4.66,818,3.256,819,3.93]],["title/directives/FinishTypingDirective.html",[167,0.938,820,2.36]],["body/directives/FinishTypingDirective.html",[3,0.14,4,0.14,5,0.123,7,0.232,8,0.655,10,0.295,11,0.014,12,0.14,15,0.008,16,0.01,17,0.008,22,1.544,27,1.408,29,0.964,30,0.93,31,0.507,33,1.073,35,0.555,37,0.832,59,0.483,65,2.284,73,1.425,96,1.237,102,1.85,167,1.595,170,4.014,171,4.242,176,1.925,177,2.005,178,1.925,179,2.552,181,2.825,186,4.891,200,1.85,201,1.85,365,3.712,448,4.412,453,4.242,460,3.619,820,3.619,821,6.622,822,4.116,823,4.011,824,6.119,825,6.783,826,5.324,827,4.242,828,5.904,829,3.712,830,6.119,831,4.803,832,4.73,833,4.73,834,6.119,835,4.73,836,4.803,837,4.116,838,4.116,839,6.119,840,4.73,841,2.969,842,4.116]],["title/interfaces/FsDocument.html",[0,0.261,843,2.674]],["body/interfaces/FsDocument.html",[0,0.414,2,1.258,3,0.148,4,0.148,5,0.13,7,0.244,8,0.678,10,0.317,11,0.014,12,0.188,15,0.008,16,0.01,17,0.008,31,0.874,96,2.017,150,4.1,843,4.242,844,3.914,845,3.914,846,5.458,847,5.509,848,6.367,849,6.367,850,6.367,851,6.367,852,6.367,853,6.367,854,5.366,855,3.341,856,3.914,857,4.34,858,3.914,859,4.34]],["title/interfaces/FsDocumentElement.html",[0,0.261,855,2.674]],["body/interfaces/FsDocumentElement.html",[0,0.43,2,1.337,3,0.157,4,0.157,5,0.138,7,0.259,8,0.704,10,0.294,11,0.014,12,0.195,15,0.009,16,0.011,17,0.009,31,0.839,96,2.048,150,4.163,843,3.55,844,4.157,845,4.157,846,5.611,847,4.61,848,4.61,849,4.61,850,4.61,851,4.61,852,4.61,853,4.61,854,4.791,855,4.406,856,5.16,857,6.506,858,5.868,859,6.506]],["title/injectables/FullscreenService.html",[62,1.081,860,3.132]],["body/injectables/FullscreenService.html",[0,0.195,3,0.089,4,0.089,5,0.078,7,0.146,8,0.475,10,0.182,11,0.014,12,0.089,15,0.005,16,0.007,17,0.005,22,1.119,27,1.291,29,0.608,30,0.586,31,0.319,33,1.332,35,0.521,37,0.525,40,1.972,42,1.002,44,3.359,45,2.623,46,2.048,59,0.304,61,0.807,62,1.201,63,1.318,67,2.072,69,1.961,72,2.244,73,1.596,81,3.133,83,1.668,95,1.386,96,1.78,114,1.318,115,1.318,117,1.439,124,1.961,215,2.054,347,1.706,387,3.481,389,3.481,429,1.584,431,2.594,432,2.594,456,1.997,569,3.283,843,1.997,855,1.997,858,2.339,860,5.16,861,2.594,862,3.198,863,4.435,864,4.158,865,6.997,866,6.997,867,6.997,868,4.435,869,5.297,870,4.435,871,4.435,872,5.297,873,5.867,874,4.231,875,4.605,876,5.297,877,2.981,878,4.435,879,4.435,880,3.82,881,2.981,882,2.981,883,2.981,884,2.981,885,2.981,886,2.981,887,2.981,888,2.981,889,2.594,890,2.981,891,2.981,892,4.435,893,2.981,894,2.981,895,5.459,896,4.435,897,4.435,898,4.435,899,5.106,900,7.15,901,4.435,902,4.435,903,5.867,904,5.867,905,5.867,906,4.435,907,4.435,908,4.435,909,4.435,910,5.867,911,2.981,912,5.867,913,2.981,914,2.981,915,2.981,916,4.435,917,2.594,918,4.435,919,4.435,920,4.435,921,4.435,922,2.981,923,4.435,924,4.435,925,4.435,926,4.435,927,2.981,928,2.981,929,2.981]],["title/classes/GoogleClientConfig.html",[59,0.408,930,2.674]],["body/classes/GoogleClientConfig.html",[0,0.394,3,0.179,4,0.179,5,0.157,11,0.013,12,0.211,14,1.421,15,0.01,16,0.012,17,0.01,59,0.615,134,2.552,181,3.279,273,3.198,775,4.033,777,4.033,779,3.368,816,4.34,930,4.76,931,4.724,932,4.033,933,4.724,934,4.724]],["title/classes/GoogleSDKConfig.html",[59,0.408,935,2.877]],["body/classes/GoogleSDKConfig.html",[3,0.157,4,0.157,5,0.138,7,0.259,8,0.703,10,0.27,11,0.014,12,0.157,15,0.009,16,0.011,17,0.009,27,1.416,29,1.338,30,1.291,31,0.703,33,1.199,59,0.54,61,1.431,67,2.794,69,2.902,72,3.321,73,1.593,95,2.051,96,1.382,117,2.552,273,2.808,689,4.148,690,6.216,691,6.685,692,5.714,693,4.599,694,4.599,695,4.599,696,4.599,697,4.599,698,4.599,700,5.714,701,4.599,702,4.599,934,6.231,935,4.734,936,6.685]],["title/modules/GoogleSDKModule.html",[18,1.624,937,3.132]],["body/modules/GoogleSDKModule.html",[3,0.142,4,0.142,5,0.124,10,0.196,11,0.014,12,0.183,15,0.008,16,0.01,17,0.008,20,2.303,22,1.204,23,4.122,24,3.743,26,5.647,27,0.904,29,0.972,30,0.938,31,0.511,33,1.082,34,5.345,35,0.799,36,4.026,37,0.839,40,1.603,41,3.743,42,1.603,46,2.202,48,3.743,49,2.82,51,3.196,52,3.743,55,2.534,56,3.743,57,2.97,58,2.534,59,0.628,60,3.743,61,1.292,222,2.669,223,2.108,705,4.151,710,4.151,711,4.151,712,4.151,779,2.669,789,3.743,937,5.647,938,4.436,939,6.152,940,4.769,941,6.152,942,4.436,943,5.354,944,4.436,945,4.769,946,4.769,947,4.769,948,4.151]],["title/injectables/GoogleSDKService.html",[62,1.081,942,2.877]],["body/injectables/GoogleSDKService.html",[3,0.09,4,0.09,5,0.079,7,0.148,8,0.481,10,0.243,11,0.014,12,0.133,14,0.79,15,0.005,16,0.007,17,0.005,22,1.132,27,1.385,29,1.09,30,1.051,31,0.573,33,1.433,35,0.741,37,0.533,40,1.797,42,1.508,44,1.398,45,1.79,46,1.398,59,0.309,61,1.71,62,1.215,63,1.339,67,2.934,69,3.026,72,2.27,73,0.912,74,2.376,76,3.963,85,1.462,95,1.972,96,1.173,98,2.029,99,3.007,102,2.47,114,1.339,115,1.339,117,2.167,121,2.183,122,1.79,124,2.791,134,1.284,143,4.151,144,2.167,162,1.826,207,1.284,217,1.609,222,2.511,223,2.364,224,3.007,261,1.694,347,1.555,382,4.196,427,2.376,453,3.162,460,2.654,569,1.694,675,2.183,682,2.376,720,2.183,721,4.653,722,4.196,724,5.146,725,5.146,726,2.635,729,2.635,732,2.635,734,2.635,735,2.635,739,2.635,740,3.855,743,3.905,744,2.635,745,3.905,747,2.635,749,2.635,751,2.635,752,2.635,753,2.635,754,2.635,755,2.635,756,2.635,757,2.635,758,3.522,775,2.029,777,2.029,779,1.694,791,2.376,792,2.635,793,2.635,794,2.635,795,2.635,796,2.635,797,2.183,798,2.635,799,2.635,800,2.183,802,2.635,803,2.635,805,2.635,806,2.635,807,2.635,808,2.635,809,2.635,810,2.635,811,2.635,816,2.183,930,3.962,932,3.007,933,2.376,935,4.552,938,5.343,942,3.236,943,4.653,944,2.183,948,2.635,949,5.347,950,5.347,951,5.347,952,3.028,953,3.028,954,3.028,955,6.314,956,3.028,957,4.487,958,3.028,959,3.028,960,3.028,961,3.028,962,3.028,963,3.028,964,3.028,965,2.635,966,3.028,967,4.487,968,3.028,969,3.028,970,3.028,971,3.028,972,3.028,973,3.028,974,3.028,975,3.028,976,3.028,977,3.028,978,3.028,979,3.028,980,3.028,981,3.028,982,3.028,983,3.028,984,4.487,985,3.028,986,3.028,987,3.028,988,3.028,989,3.028,990,3.028,991,4.487,992,3.028]],["title/interfaces/GoogleUserProfile.html",[0,0.261,932,2.674]],["body/interfaces/GoogleUserProfile.html",[0,0.348,2,1.343,3,0.158,4,0.158,5,0.138,7,0.26,8,0.706,10,0.322,11,0.014,12,0.196,14,1.474,15,0.009,16,0.011,17,0.009,31,0.84,59,0.543,134,3.175,181,2.457,775,5.018,777,5.018,779,4.19,816,5.399,930,3.566,931,4.177,932,4.418,933,5.877,934,4.177]],["title/directives/GrowOnInputDirective.html",[167,0.938,993,1.927]],["body/directives/GrowOnInputDirective.html",[3,0.132,4,0.132,5,0.115,7,0.217,8,0.628,10,0.241,11,0.014,12,0.132,15,0.007,16,0.01,17,0.007,22,1.479,27,1.379,29,1.195,30,1.152,31,0.628,33,1.491,35,0.771,37,0.779,59,0.452,61,1.2,65,2.138,67,1.732,73,1.335,96,1.718,142,2.138,144,2.138,167,1.545,170,3.913,171,4.135,176,1.803,177,1.878,178,1.803,179,2.472,181,2.706,200,1.732,201,1.732,264,2.619,347,1.704,459,2.968,823,3.885,826,5.157,827,4.135,829,3.476,831,4.601,836,4.601,838,3.854,993,2.83,994,6.504,995,3.854,996,4.403,997,5.862,998,5.862,999,4.686,1000,6.57,1001,5.862,1002,5.862,1003,4.429,1004,4.429,1005,4.429,1006,4.429,1007,3.854,1008,3.193,1009,5.862,1010,6.57,1011,4.429,1012,4.429,1013,4.429,1014,4.429,1015,4.429,1016,5.862,1017,4.429,1018,3.476,1019,4.429]],["title/interfaces/IDimensions.html",[0,0.261,1020,2.877]],["body/interfaces/IDimensions.html",[0,0.33,2,1.272,3,0.15,4,0.15,5,0.131,7,0.247,8,0.683,10,0.332,11,0.014,12,0.15,15,0.008,16,0.011,17,0.008,136,2.212,1020,4.596,1021,2.821,1022,4.387,1023,5.765,1024,5.765,1025,6.392,1026,6.392,1027,6.392,1028,5.765,1029,6.392,1030,5.765,1031,7.345,1032,6.392]],["title/interfaces/IPageInfo.html",[0,0.261,1033,2.674]],["body/interfaces/IPageInfo.html",[0,0.351,2,1.352,3,0.159,4,0.159,5,0.139,7,0.262,8,0.709,10,0.327,11,0.014,12,0.159,15,0.009,16,0.011,17,0.009,136,2.201,1021,2.999,1028,5.892,1033,4.437,1034,4.664,1035,6.533,1036,6.533,1037,6.533,1038,6.533,1039,6.533,1040,6.533]],["title/interfaces/IViewport.html",[0,0.261,1041,2.877]],["body/interfaces/IViewport.html",[0,0.383,2,1.476,3,0.174,4,0.174,5,0.152,7,0.286,8,0.748,10,0.287,11,0.014,12,0.174,15,0.01,16,0.012,17,0.01,35,0.687,136,2.097,846,5.482,1021,3.274,1030,6.07,1033,5.183,1041,5.036,1042,5.091,1043,6.07]],["title/interfaces/LatLng.html",[0,0.261,216,2.36]],["body/interfaces/LatLng.html",[0,0.489,2,1.337,3,0.157,4,0.157,5,0.138,7,0.259,8,0.704,10,0.27,11,0.014,12,0.212,15,0.009,16,0.011,17,0.009,40,1.78,42,1.78,53,2.156,82,3.132,85,2.557,124,2.342,136,2.167,208,3.325,209,3.819,210,4.697,211,4.697,212,4.157,213,4.157,214,4.157,215,1.655,216,3.888,217,2.814,218,3.55,219,4.157,220,3.55,221,4.157,222,2.964,223,2.342,224,3.55,225,3.325]],["title/interfaces/LatLng2LatLngOptions.html",[0,0.261,225,2.505]],["body/interfaces/LatLng2LatLngOptions.html",[0,0.49,2,1.343,3,0.158,4,0.158,5,0.138,7,0.26,8,0.706,10,0.322,11,0.014,12,0.213,15,0.009,16,0.011,17,0.009,40,1.788,42,1.788,53,2.166,82,3.147,85,2.569,124,2.353,136,2.131,208,3.34,209,3.837,210,4.428,211,4.428,212,4.177,213,4.177,214,4.177,215,1.662,216,3.147,217,2.827,218,3.566,219,4.177,220,3.566,221,4.177,222,2.978,223,2.353,224,3.566,225,4.139,413,4.7]],["title/classes/LeafletMap.html",[59,0.408,1044,3.132]],["body/classes/LeafletMap.html",[3,0.076,4,0.076,5,0.067,7,0.126,8,0.425,10,0.293,11,0.014,12,0.076,15,0.004,16,0.007,17,0.004,22,1.001,27,1.372,29,1.267,30,1.222,31,0.665,33,1.41,35,0.805,57,1.242,59,0.263,61,1.593,73,0.775,76,2.491,79,2.02,95,1.24,96,1.266,100,1.302,101,1.44,102,1.894,134,2.053,136,1.266,147,4.615,162,2.215,176,1.047,177,1.091,178,1.047,207,1.682,208,3.9,210,2.346,211,2.346,215,1.513,216,3.829,271,2.406,273,1.367,292,4.877,322,3.114,347,1.995,429,2.892,569,1.44,593,1.916,789,2.02,874,2.861,880,1.855,1043,3.114,1044,3.114,1045,2.24,1046,4.843,1047,4.843,1048,4.843,1049,5.442,1050,3.968,1051,3.968,1052,5.443,1053,3.968,1054,3.968,1055,3.968,1056,4.163,1057,2.573,1058,3.968,1059,2.573,1060,3.968,1061,2.573,1062,5.443,1063,2.573,1064,2.573,1065,3.114,1066,3.492,1067,3.114,1068,3.968,1069,3.968,1070,2.108,1071,3.968,1072,3.114,1073,4.272,1074,3.801,1075,3.114,1076,3.114,1077,3.968,1078,3.453,1079,3.114,1080,3.114,1081,3.114,1082,3.968,1083,2.573,1084,3.968,1085,2.573,1086,3.968,1087,2.573,1088,3.968,1089,3.94,1090,5.443,1091,2.573,1092,2.573,1093,3.968,1094,6.213,1095,5.407,1096,6.213,1097,6.213,1098,2.573,1099,3.968,1100,6.213,1101,2.573,1102,2.02,1103,1.855,1104,2.861,1105,3.114,1106,2.573,1107,1.724,1108,2.02,1109,2.573,1110,2.573,1111,2.573,1112,2.573,1113,2.573,1114,2.573,1115,2.573,1116,4.843,1117,2.573,1118,2.573,1119,2.573,1120,2.573,1121,2.573,1122,2.573,1123,2.573,1124,2.573,1125,2.573,1126,3.968,1127,2.573,1128,2.573,1129,2.573,1130,2.573,1131,2.573,1132,2.573,1133,2.573,1134,2.573,1135,2.573,1136,2.573,1137,2.573,1138,3.801,1139,3.492,1140,3.801,1141,2.573,1142,2.573,1143,2.573,1144,2.573,1145,3.114,1146,3.968,1147,3.968,1148,3.968,1149,3.968,1150,3.968,1151,2.573,1152,3.968,1153,2.573,1154,2.573,1155,2.573,1156,2.573,1157,3.968,1158,2.573,1159,2.573,1160,2.573,1161,2.573,1162,2.573,1163,2.573,1164,2.573,1165,4.843,1166,3.968,1167,2.573,1168,2.573,1169,2.573,1170,2.573,1171,2.573,1172,2.573,1173,2.573,1174,2.573,1175,2.573,1176,2.573]],["title/interfaces/LeafletMapOptions.html",[0,0.261,1056,2.674]],["body/interfaces/LeafletMapOptions.html",[0,0.388,2,1.135,3,0.134,4,0.134,5,0.117,7,0.22,8,0.634,10,0.335,11,0.014,12,0.176,14,1.165,15,0.007,16,0.01,17,0.007,31,0.877,35,0.777,76,2.823,136,2,210,2.66,211,2.66,215,1.85,413,4.711,429,3.146,874,3.243,880,5.271,1056,3.968,1065,5.522,1066,3.243,1067,5.522,1070,3.884,1072,5.522,1073,5.738,1075,5.522,1076,3.531,1079,3.531,1080,5.522,1089,3.014,1102,3.531,1103,3.243,1104,3.243,1105,3.531,1138,3.531,1139,4.27,1140,3.531,1177,3.531,1178,6.123,1179,5.762,1180,5.762,1181,5.762,1182,5.762,1183,3.915]],["title/interfaces/LeafletPadding.html",[0,0.261,1089,2.674]],["body/interfaces/LeafletPadding.html",[0,0.421,2,1.289,3,0.152,4,0.152,5,0.133,7,0.25,8,0.688,10,0.319,11,0.014,12,0.191,14,0.899,15,0.008,16,0.011,17,0.008,31,0.79,35,0.825,76,3.207,136,2.06,210,3.021,211,3.021,215,2.008,413,4.632,429,3.415,874,3.683,880,4.634,1056,3.423,1065,4.009,1066,3.683,1067,4.009,1070,3.415,1072,4.009,1073,5.045,1075,4.009,1076,4.009,1079,4.009,1080,4.009,1089,4.307,1102,4.009,1103,3.683,1104,3.683,1105,4.009,1138,5.792,1139,4.634,1140,5.792,1177,4.009,1178,4.446,1179,4.446,1180,4.446,1181,4.446,1182,4.446,1183,4.446]],["title/directives/LongPressDirective.html",[167,0.938,1184,2.36]],["body/directives/LongPressDirective.html",[3,0.085,4,0.085,5,0.074,7,0.14,8,0.46,10,0.29,11,0.014,12,0.085,15,0.005,16,0.007,17,0.005,22,1.085,27,1.476,29,0.583,30,0.562,31,0.306,33,1.172,35,0.335,37,0.503,59,0.292,61,1.556,67,2.985,95,0.893,96,1.351,102,2.248,136,1.502,162,1.75,167,1.011,169,2.284,179,1.617,191,4.443,200,1.118,201,1.118,202,2.542,207,1.212,215,1.795,271,1.9,365,3.374,448,3.099,450,3.099,453,4.431,455,4.055,456,5.152,459,1.915,460,3.643,593,3.242,841,2.698,1184,2.542,1185,6.812,1186,2.488,1187,5.166,1188,5.166,1189,5.166,1190,5.166,1191,5.166,1192,4.496,1193,5.746,1194,5.746,1195,3.741,1196,5.166,1197,5.166,1198,5.166,1199,5.166,1200,5.166,1201,3.099,1202,4.299,1203,4.299,1204,4.299,1205,4.299,1206,4.299,1207,2.858,1208,2.858,1209,2.858,1210,2.858,1211,2.858,1212,2.858,1213,2.858,1214,2.858,1215,7.069,1216,6.91,1217,2.858,1218,2.858,1219,2.858,1220,2.858,1221,2.858,1222,2.858,1223,2.858,1224,4.299,1225,2.858,1226,2.858,1227,2.858,1228,2.858,1229,2.858,1230,2.858,1231,1.915,1232,2.858,1233,2.858,1234,6.161,1235,2.858,1236,6.91,1237,2.858,1238,2.858,1239,2.858,1240,4.299,1241,4.299,1242,4.299,1243,2.858,1244,5.746,1245,4.299,1246,5.746,1247,4.299,1248,4.299,1249,4.299,1250,4.299,1251,2.858,1252,5.166,1253,2.858,1254,2.858,1255,2.858,1256,2.488,1257,4.299,1258,2.858,1259,2.858,1260,2.858,1261,2.858,1262,2.858,1263,2.858,1264,2.858,1265,2.858,1266,2.858,1267,2.858,1268,5.746,1269,5.746,1270,5.001,1271,2.858]],["title/injectables/MapService.html",[62,1.081,1272,3.132]],["body/injectables/MapService.html",[3,0.094,4,0.094,5,0.082,7,0.155,10,0.248,11,0.014,12,0.094,15,0.005,16,0.008,17,0.005,22,1.171,27,1.22,29,1.232,30,1.188,31,0.647,33,1.46,35,0.645,37,0.558,40,1.065,42,1.56,46,2.143,59,0.324,61,1.487,62,1.257,63,1.401,83,2.597,96,0.829,102,1.24,105,2.913,114,1.401,115,1.401,122,2.745,126,3.073,136,1.999,143,4.038,144,1.53,176,1.29,177,1.344,178,1.889,210,3.247,211,3.805,215,0.99,216,2.745,223,2.972,224,2.124,225,4.219,271,1.401,315,1.99,318,2.759,322,2.488,347,0.922,379,5.05,387,3.643,429,2.466,499,4.04,535,4.04,593,1.53,758,2.488,791,3.643,1049,3.347,1081,5.05,1272,3.643,1273,2.759,1274,4.642,1275,4.642,1276,4.642,1277,6.045,1278,4.642,1279,4.642,1280,3.17,1281,6.434,1282,6.045,1283,4.642,1284,4.642,1285,5.491,1286,3.17,1287,2.759,1288,4.642,1289,3.17,1290,4.642,1291,4.642,1292,4.04,1293,4.642,1294,4.642,1295,3.17,1296,4.642,1297,4.642,1298,4.04,1299,4.642,1300,4.642,1301,4.642,1302,3.17,1303,4.04,1304,4.642,1305,3.17,1306,3.643,1307,4.642,1308,4.642,1309,3.17,1310,3.17,1311,3.17,1312,3.17,1313,3.17,1314,3.17,1315,3.17,1316,3.17,1317,3.17,1318,4.642,1319,3.17,1320,2.488,1321,2.759,1322,3.17,1323,3.17,1324,3.17,1325,3.17,1326,3.17,1327,3.17,1328,3.17,1329,2.759,1330,3.17,1331,6.945,1332,3.17,1333,2.286,1334,4.642,1335,4.642,1336,6.722,1337,3.17,1338,3.17,1339,4.642,1340,4.642,1341,3.17,1342,3.17,1343,3.17,1344,2.488,1345,3.17]],["title/interfaces/OpenIdClient.html",[0,0.261,1346,2.877]],["body/interfaces/OpenIdClient.html",[0,0.462,2,1.301,3,0.153,4,0.153,5,0.134,7,0.252,8,0.692,10,0.313,11,0.014,12,0.192,14,1.463,15,0.009,16,0.011,17,0.009,31,0.833,40,1.732,42,1.732,81,3.048,82,3.048,85,2.489,107,3.454,110,3.717,134,3.233,215,1.61,217,2.739,218,3.454,220,3.454,226,3.717,232,4.331,532,4.045,1346,4.661,1347,4.045,1348,4.045,1349,6.444,1350,6.444,1351,6.444,1352,6.444,1353,4.486,1354,4.486,1355,4.486]],["title/interfaces/OpenIdData.html",[0,0.261,232,2.674]],["body/interfaces/OpenIdData.html",[0,0.475,2,1.385,3,0.163,4,0.163,5,0.143,7,0.269,8,0.72,10,0.276,11,0.014,12,0.2,14,1.422,15,0.009,16,0.011,17,0.009,40,1.844,42,1.844,81,3.245,82,3.245,85,2.649,107,3.677,110,3.956,134,2.848,215,2.269,217,2.915,218,3.677,220,3.677,226,3.956,232,4.866,532,4.306,1346,3.956,1347,4.306,1348,4.306,1349,4.775,1350,4.775,1351,4.775,1352,4.775,1353,4.775,1354,6.587,1355,6.587]],["title/components/PinInputComponent.html",[1356,2.505,1357,2.019]],["body/components/PinInputComponent.html",[3,0.069,4,0.069,5,0.06,7,0.113,8,0.391,10,0.306,11,0.014,12,0.069,14,0.984,15,0.004,16,0.006,17,0.004,22,0.921,27,1.467,29,1.353,30,1.386,31,0.743,33,1.623,35,0.531,37,0.407,51,2.446,53,1.841,57,1.762,59,0.236,61,1.747,67,2.324,95,2.202,96,1.777,100,1.17,101,1.294,136,1.627,142,1.116,157,2.865,162,2.276,167,0.544,169,3.157,170,1.294,177,1.917,179,2.882,180,1.294,181,1.685,200,0.904,201,0.904,202,3.306,207,2.638,215,1.604,264,1.367,271,1.999,347,1.493,444,1.367,487,1.451,569,1.294,593,2.869,820,1.367,841,1.451,854,2.446,895,3.936,993,1.116,996,3.03,999,3.442,1184,1.367,1201,2.632,1231,1.549,1287,2.012,1320,1.814,1356,2.838,1357,3.006,1358,2.632,1359,1.451,1360,2.012,1361,2.012,1362,6.766,1363,2.012,1364,3.936,1365,4.522,1366,4.522,1367,3.65,1368,3.936,1369,3.65,1370,4.866,1371,3.65,1372,3.65,1373,4.522,1374,4.522,1375,5.136,1376,3.65,1377,5.136,1378,4.47,1379,3.65,1380,3.176,1381,3.65,1382,3.65,1383,3.65,1384,4.522,1385,3.65,1386,3.65,1387,3.65,1388,3.65,1389,4.522,1390,4.522,1391,4.522,1392,3.65,1393,3.65,1394,2.312,1395,2.312,1396,2.312,1397,2.312,1398,3.65,1399,2.312,1400,2.312,1401,2.312,1402,2.312,1403,2.312,1404,2.312,1405,2.012,1406,2.312,1407,2.312,1408,3.65,1409,2.312,1410,2.312,1411,3.65,1412,2.312,1413,2.312,1414,2.312,1415,2.312,1416,3.65,1417,2.312,1418,2.312,1419,2.312,1420,2.312,1421,3.65,1422,2.312,1423,2.312,1424,3.65,1425,2.312,1426,4.522,1427,2.012,1428,3.65,1429,2.312,1430,2.312,1431,2.312,1432,2.312,1433,2.312,1434,2.312,1435,1.814,1436,2.312,1437,2.312,1438,2.312,1439,2.312,1440,2.312,1441,1.814,1442,1.814,1443,2.312,1444,2.312,1445,2.312,1446,2.312,1447,2.312,1448,2.312,1449,2.312,1450,2.312,1451,2.312,1452,2.312,1453,2.312,1454,2.012,1455,2.312,1456,2.312,1457,2.312,1458,2.312,1459,2.312,1460,2.312,1461,2.012,1462,2.312,1463,2.312,1464,2.312,1465,2.312,1466,2.312,1467,2.312,1468,4.522,1469,4.522,1470,2.312,1471,2.312,1472,1.294,1473,3.176,1474,4.47,1475,2.012,1476,1.228,1477,2.012,1478,2.012,1479,3.176,1480,1.549,1481,2.012,1482,1.17,1483,2.012,1484,1.549,1485,2.012,1486,1.549,1487,1.667,1488,1.814,1489,2.012,1490,2.012,1491,2.012,1492,2.012,1493,2.012,1494,1.228,1495,3.03,1496,2.012,1497,1.228,1498,1.549,1499,3.176,1500,1.228,1501,1.116,1502,2.012,1503,1.116,1504,2.012,1505,1.067,1506,2.012,1507,1.367,1508,2.012,1509,1.367,1510,1.814,1511,2.012]],["title/injectables/PrefersColorSchemeService.html",[62,1.081,1512,3.132]],["body/injectables/PrefersColorSchemeService.html",[3,0.07,4,0.07,5,0.062,7,0.116,8,0.398,10,0.189,11,0.014,12,0.07,14,0.995,15,0.004,16,0.006,17,0.004,22,0.938,27,1.42,29,0.936,30,0.903,31,0.492,33,1.553,35,0.278,37,0.417,40,2.109,42,0.795,43,2.06,44,3.087,46,1.716,59,0.242,61,1.532,62,1.007,63,1.046,67,2.616,69,2.654,72,1.881,73,1.384,81,3.077,83,2.08,85,1.795,95,2.089,96,1.7,105,2.333,114,1.046,115,1.046,117,2.217,122,2.198,124,3.253,150,2.44,162,0.963,176,1.513,177,1.576,178,1.513,207,1.947,223,1.644,272,5.919,277,4.528,347,1.335,393,3.235,429,2.44,593,2.217,676,3.235,797,2.681,864,1.857,875,4.084,889,2.06,1292,2.06,1298,2.06,1344,3.604,1512,4.084,1513,6.569,1514,6.569,1515,2.06,1516,3.718,1517,3.718,1518,7.359,1519,3.718,1520,3.718,1521,3.718,1522,5.203,1523,3.718,1524,4.591,1525,4.591,1526,4.591,1527,6.502,1528,5.203,1529,5.203,1530,5.203,1531,5.203,1532,6.502,1533,5.655,1534,5.655,1535,3.718,1536,2.367,1537,2.367,1538,2.367,1539,2.367,1540,2.367,1541,2.367,1542,5.203,1543,2.367,1544,2.367,1545,2.367,1546,2.367,1547,2.367,1548,2.367,1549,2.367,1550,2.367,1551,2.367,1552,2.367,1553,2.367,1554,2.367,1555,2.367,1556,2.367,1557,2.367,1558,2.367,1559,2.367,1560,2.367,1561,3.718,1562,2.367,1563,3.718,1564,2.367,1565,3.718,1566,2.367,1567,2.367,1568,2.367,1569,3.718,1570,3.718,1571,3.718,1572,3.718,1573,3.718,1574,3.718,1575,3.718,1576,3.718,1577,3.718,1578,4.591,1579,4.591,1580,3.718,1581,3.718,1582,5.203,1583,3.718,1584,2.367,1585,2.367,1586,2.367,1587,4.591,1588,2.367,1589,2.367,1590,2.367,1591,2.367,1592,2.367,1593,2.367,1594,2.367,1595,2.367,1596,2.367,1597,4.591,1598,2.06,1599,2.367,1600,2.367,1601,3.718,1602,3.718,1603,3.718,1604,2.367,1605,2.367,1606,3.718,1607,2.367,1608,2.367]],["title/interfaces/RandomPasswordOps.html",[0,0.261,1609,3.132]],["body/interfaces/RandomPasswordOps.html",[0,0.208,2,0.802,3,0.094,4,0.094,5,0.083,7,0.156,8,0.498,10,0.265,11,0.014,12,0.191,14,1.134,15,0.005,16,0.008,17,0.005,31,0.791,33,1.248,35,0.373,40,1.848,42,2.034,61,1.639,83,3.387,102,1.243,105,4.473,122,1.88,124,2.432,126,3.078,136,1.863,150,3.422,162,2.239,215,2.366,223,2.056,261,3.078,264,1.88,271,1.405,315,3.452,317,4.787,347,1.352,416,2.766,541,4.048,553,2.766,593,1.535,669,4.751,797,5.139,864,5.594,1049,3.354,1107,2.13,1333,4.644,1405,2.766,1609,4.751,1610,2.766,1611,6.441,1612,6.441,1613,6.441,1614,6.441,1615,5.5,1616,7.127,1617,6.053,1618,4.651,1619,4.651,1620,4.651,1621,4.651,1622,4.651,1623,2.495,1624,5.5,1625,4.651,1626,4.048,1627,4.651,1628,6.846,1629,3.179,1630,3.179,1631,2.766,1632,3.179,1633,3.179,1634,4.651,1635,3.179,1636,3.179,1637,3.179,1638,3.179,1639,5.5,1640,3.179,1641,3.179,1642,3.179,1643,3.179,1644,3.179,1645,3.179,1646,3.179,1647,2.766,1648,2.495,1649,3.179,1650,6.441,1651,3.179,1652,3.179,1653,3.179,1654,4.651,1655,3.179,1656,3.179,1657,3.179,1658,3.179,1659,3.179]],["title/interfaces/S3.html",[0,0.261,9,2.505]],["body/interfaces/S3.html",[0,0.466,1,4.044,2,1.523,3,0.179,4,0.179,5,0.157,6,4.736,7,0.295,8,0.762,9,4.904,10,0.248,11,0.013,12,0.211,13,5.634,14,1.332,15,0.01,16,0.012,17,0.01]],["title/directives/SDBadgeDirective.html",[167,0.938,1494,2.12]],["body/directives/SDBadgeDirective.html",[3,0.153,4,0.153,5,0.134,7,0.252,8,0.692,10,0.265,11,0.014,12,0.21,15,0.009,16,0.011,17,0.009,27,1.225,29,1.051,30,1.013,31,0.552,35,0.605,37,0.907,59,0.721,69,2.858,73,1.553,167,1.741,179,2.785,200,2.016,201,2.016,574,3.951,582,4.661,862,5.092,1359,4.884,1494,3.434,1495,4.961,1497,2.739,1498,4.732,1500,2.739,1660,4.732,1661,4.732,1662,3.717,1663,4.045,1664,6.197,1665,5.154,1666,5.154]],["title/directives/SDBadgeItemDirective.html",[167,0.938,1497,2.12]],["body/directives/SDBadgeItemDirective.html",[3,0.153,4,0.153,5,0.134,7,0.252,8,0.691,10,0.265,11,0.014,12,0.21,15,0.009,16,0.011,17,0.009,27,1.223,29,1.048,30,1.011,31,0.551,35,0.604,37,0.905,59,0.72,69,2.854,73,1.55,167,1.74,179,2.783,200,2.012,201,2.012,574,3.947,582,5.086,862,5.086,1359,4.881,1494,2.732,1495,4.957,1497,3.429,1498,4.727,1500,2.732,1660,4.727,1661,4.727,1662,3.708,1663,4.036,1664,6.194,1667,5.143,1668,5.143]],["title/directives/SDItemDirective.html",[167,0.938,1500,2.12]],["body/directives/SDItemDirective.html",[3,0.153,4,0.153,5,0.134,7,0.252,8,0.692,10,0.265,11,0.014,12,0.21,15,0.009,16,0.011,17,0.009,27,1.225,29,1.051,30,1.013,31,0.552,35,0.605,37,0.907,59,0.721,69,2.858,73,1.553,167,1.741,179,2.785,200,2.016,201,2.016,574,3.951,582,5.092,862,5.092,1359,4.884,1494,2.739,1495,4.961,1497,2.739,1498,4.331,1500,3.434,1660,4.732,1661,4.732,1662,3.717,1663,4.045,1664,6.197,1669,5.154,1670,5.154]],["title/directives/SerControlDirective.html",[167,0.938,1501,1.927]],["body/directives/SerControlDirective.html",[3,0.105,4,0.105,5,0.092,7,0.173,8,0.539,10,0.24,11,0.014,12,0.105,15,0.006,16,0.008,17,0.006,22,1.269,27,1.488,29,1.025,30,0.988,31,0.539,33,1.327,35,0.747,37,0.623,59,0.362,65,1.71,73,1.067,95,2.292,96,1.528,100,3.219,101,1.982,142,1.71,144,1.71,157,2.779,162,1.441,167,1.375,176,1.441,177,1.501,178,1.441,179,2.199,181,2.321,200,1.385,201,1.385,207,3.044,450,3.625,459,2.373,487,4.96,593,3.815,652,4.199,740,4.215,823,3.457,827,3.763,996,3.917,999,4.264,1007,5.538,1008,4.215,1501,2.427,1671,5.698,1672,3.082,1673,5.028,1674,5.087,1675,5.087,1676,6.076,1677,5.087,1678,5.087,1679,4.588,1680,5.028,1681,5.846,1682,3.541,1683,5.028,1684,5.028,1685,3.541,1686,3.541,1687,3.541,1688,3.541,1689,5.028,1690,3.541,1691,3.541,1692,3.541,1693,3.541,1694,3.541,1695,3.541,1696,3.541,1697,3.541,1698,3.541,1699,3.541,1700,5.028,1701,3.541,1702,3.541,1703,3.541,1704,3.541,1705,3.541,1706,3.541,1707,3.541,1708,3.541,1709,3.541,1710,3.541,1711,3.541,1712,3.541,1713,3.541,1714,3.541,1715,3.541,1716,3.541,1717,3.541,1718,3.541]],["title/directives/SerErrorDirective.html",[167,0.938,1503,1.927]],["body/directives/SerErrorDirective.html",[3,0.099,4,0.099,5,0.087,7,0.163,8,0.515,10,0.281,11,0.014,12,0.099,14,1.088,15,0.006,16,0.008,17,0.006,22,1.213,27,1.473,29,1.151,30,1.11,31,0.605,33,1.489,35,0.887,37,0.585,53,1.956,59,0.34,67,1.301,72,2.432,73,1.002,95,2.049,96,1.715,98,2.229,102,1.301,117,2.321,143,3.543,162,1.956,167,1.327,169,2.999,176,1.354,177,1.41,178,1.354,179,2.123,181,2.219,200,1.301,201,1.301,202,2.842,207,2.393,258,2.61,347,1.398,652,4.159,653,4.913,656,4.07,823,3.338,827,3.656,996,3.782,999,4.143,1008,4.929,1201,3.466,1231,2.229,1368,2.895,1503,2.321,1505,3.028,1719,2.895,1720,5.644,1721,6.836,1722,5.644,1723,5.644,1724,5.644,1725,6.559,1726,5.381,1727,5.644,1728,3.326,1729,4.807,1730,4.807,1731,4.807,1732,4.807,1733,3.326,1734,3.326,1735,3.326,1736,3.326,1737,4.853,1738,3.326,1739,3.326,1740,3.326,1741,3.326,1742,3.326,1743,3.326,1744,3.326,1745,3.326,1746,3.326,1747,3.326,1748,3.326,1749,3.326,1750,3.326,1751,5.381,1752,2.895,1753,2.398,1754,3.326,1755,3.326,1756,4.807,1757,3.326,1758,3.326,1759,3.326,1760,3.326,1761,3.326,1762,4.807,1763,3.326,1764,3.326,1765,3.326,1766,3.326,1767,3.326,1768,3.326,1769,3.326,1770,3.326,1771,3.326,1772,3.326,1773,3.326,1774,3.326,1775,3.326,1776,3.326,1777,3.326,1778,3.326,1779,3.326,1780,3.326]],["title/directives/SerErrorsDirective.html",[167,0.938,1505,1.842]],["body/directives/SerErrorsDirective.html",[3,0.086,4,0.086,5,0.076,7,0.142,8,0.466,10,0.277,11,0.014,12,0.086,14,1.373,15,0.005,16,0.007,17,0.005,22,1.097,27,1.45,29,1.264,30,1.478,31,0.664,33,1.575,35,0.728,37,0.511,53,1.181,59,0.296,61,1.988,65,1.401,67,2.546,72,2.199,73,0.874,95,1.358,96,1.514,102,1.7,142,1.401,153,4.471,162,1.181,167,1.226,168,3.759,169,2.31,176,1.769,177,1.843,178,1.769,179,1.961,181,2.007,188,4.544,200,1.135,201,1.135,202,2.571,207,1.843,215,2.034,258,2.277,347,1.683,376,2.525,567,4.092,593,2.099,597,3.783,651,2.092,652,4.095,653,4.838,655,3.783,656,5.212,823,3.083,827,3.424,841,1.821,1231,1.944,1364,4.537,1378,5.039,1505,2.007,1679,2.277,1737,4.092,1751,5.874,1753,2.092,1781,2.525,1782,6.201,1783,5.213,1784,4.347,1785,5.79,1786,4.347,1787,4.347,1788,4.347,1789,5.213,1790,2.902,1791,5.79,1792,4.347,1793,4.347,1794,2.902,1795,4.347,1796,6.47,1797,2.902,1798,2.902,1799,4.347,1800,2.902,1801,4.347,1802,2.902,1803,4.347,1804,2.902,1805,2.902,1806,2.902,1807,2.902,1808,2.902,1809,4.347,1810,2.902,1811,2.902,1812,2.902,1813,2.902,1814,2.902,1815,2.902,1816,2.902,1817,2.525,1818,2.902,1819,2.902,1820,2.902,1821,5.79,1822,2.902,1823,2.902,1824,2.902,1825,2.902,1826,2.902,1827,5.213,1828,2.902,1829,2.902,1830,2.902,1831,4.347,1832,4.347,1833,2.902,1834,2.902,1835,2.902,1836,2.902,1837,2.902,1838,2.902,1839,2.902]],["title/modules/SerFilterModule.html",[18,1.624,1840,2.674]],["body/modules/SerFilterModule.html",[3,0.128,4,0.128,5,0.112,11,0.014,12,0.128,15,0.007,16,0.01,17,0.007,18,1.752,20,2.078,35,0.87,36,3.218,37,0.758,49,2.545,53,1.752,55,3.442,57,2.777,58,2.287,59,0.44,142,2.777,176,1.752,178,1.752,315,2.702,347,1.252,818,3.104,993,3.76,1070,3.056,1333,3.104,1357,3.94,1472,2.409,1476,4.138,1480,3.854,1482,3.94,1501,3.76,1503,3.76,1505,3.595,1840,5.58,1841,3.498,1842,4.066,1843,3.746,1844,3.746,1845,3.746,1846,2.702,1847,2.545,1848,3.378,1849,4.514,1850,4.147,1851,2.884,1852,3.746,1853,3.378,1854,3.104,1855,4.514,1856,4.304]],["title/components/SerFormElementComponent.html",[1356,2.505,1482,2.019]],["body/components/SerFormElementComponent.html",[3,0.108,4,0.108,5,0.095,7,0.178,8,0.549,10,0.211,11,0.014,12,0.108,15,0.006,16,0.008,17,0.006,27,1.424,30,1.167,35,0.697,37,0.641,53,2.868,59,0.372,61,1.96,144,1.759,167,0.856,179,3.059,180,2.038,200,1.425,201,1.425,444,2.154,487,5.131,652,4.046,740,4.28,820,2.154,854,4.318,993,1.759,1008,4.28,1184,2.154,1201,3.698,1231,2.441,1356,3.726,1357,1.843,1358,3.698,1359,3.219,1360,3.17,1361,3.17,1370,3.17,1427,3.17,1472,2.038,1473,4.463,1474,5.608,1475,3.17,1476,1.935,1477,3.17,1478,3.17,1479,4.463,1480,2.441,1481,3.17,1482,3.26,1483,3.17,1484,2.441,1485,3.17,1486,2.441,1487,2.626,1488,2.859,1489,3.17,1490,3.17,1491,3.17,1492,3.17,1493,3.17,1494,1.935,1495,3.978,1496,3.17,1497,1.935,1498,2.441,1499,4.463,1500,1.935,1501,3.111,1502,3.17,1503,1.759,1504,3.17,1505,1.681,1506,3.17,1507,2.154,1508,3.17,1509,2.154,1510,2.859,1511,3.17,1671,5.49,1674,3.17,1675,3.17,1676,3.17,1677,3.17,1678,3.17,1679,2.859,1857,3.17,1858,5.129,1859,5.129,1860,5.936,1861,5.129,1862,5.129,1863,5.129,1864,5.129,1865,5.129,1866,5.129,1867,5.129,1868,3.642,1869,3.642,1870,3.642,1871,3.642,1872,3.642,1873,3.642,1874,3.642,1875,5.129,1876,3.642,1877,3.642,1878,3.17,1879,3.642,1880,3.17,1881,3.642,1882,3.642,1883,3.642,1884,3.642,1885,3.642,1886,3.642,1887,3.642,1888,3.642,1889,3.642,1890,3.642,1891,3.642,1892,3.642,1893,3.642,1894,3.642,1895,3.642]],["title/modules/SerFormModule.html",[18,1.624,1896,2.877]],["body/modules/SerFormModule.html",[3,0.115,4,0.115,5,0.101,11,0.014,12,0.115,15,0.006,16,0.009,17,0.006,18,1.572,20,1.865,35,0.921,36,2.99,37,0.68,49,2.284,53,2.69,55,3.255,57,1.865,58,2.052,59,0.395,142,1.865,347,1.123,487,3.845,652,2.052,653,3.354,993,3.759,1070,2.839,1357,3.938,1472,2.162,1476,4.136,1482,3.938,1501,3.759,1503,3.759,1505,3.594,1671,3.853,1752,3.362,1840,4.93,1841,3.344,1842,3.845,1846,2.425,1847,2.284,1849,4.194,1850,3.853,1851,2.588,1855,4.194,1880,3.362,1896,5.972,1897,3.362,1898,3.362,1899,3.863,1900,4.93,1901,3.032,1902,3.863,1903,3.863,1904,3.863,1905,3.863,1906,3.863,1907,3.863,1908,3.863,1909,3.362,1910,3.863,1911,3.863,1912,3.863,1913,3.362,1914,3.863]],["title/modules/SerSelectModule.html",[18,1.624,1900,2.674]],["body/modules/SerSelectModule.html",[3,0.118,4,0.118,5,0.103,11,0.014,12,0.118,15,0.007,16,0.009,17,0.007,18,1.616,20,1.917,35,0.899,36,3.047,37,0.699,49,3.22,53,2.529,55,3.302,57,3,58,2.109,59,0.405,142,2.629,176,1.616,178,1.616,315,2.492,347,1.154,573,4.85,574,2.221,993,3.697,1070,2.893,1333,2.862,1357,3.874,1472,2.221,1476,4.069,1482,3.874,1484,3.649,1487,2.862,1494,2.893,1497,2.893,1500,2.893,1501,3.697,1503,3.697,1505,3.535,1660,2.66,1661,2.66,1841,3.383,1842,3.901,1846,2.492,1847,2.347,1849,4.273,1850,3.926,1851,2.66,1852,3.455,1853,3.116,1854,2.862,1855,4.273,1900,5.578,1915,3.455,1916,3.455,1917,3.97,1918,3.455,1919,3.97,1920,4.85,1921,3.116,1922,3.97,1923,3.97,1924,3.97,1925,3.116,1926,3.116]],["title/modules/SerUiModule.html",[18,1.624,1927,2.877]],["body/modules/SerUiModule.html",[3,0.128,4,0.128,5,0.112,11,0.014,12,0.128,15,0.007,16,0.01,17,0.007,18,1.749,20,2.074,35,0.888,36,3.214,37,0.756,55,3.438,57,2.074,58,2.283,59,0.439,180,3.214,347,1.249,444,3.397,820,3.397,875,3.372,993,3.759,1070,3.052,1184,3.397,1357,3.938,1472,2.404,1476,4.136,1482,3.938,1501,3.759,1503,3.759,1505,3.594,1507,3.397,1509,3.397,1841,3.495,1842,4.062,1846,2.697,1847,2.541,1927,6.003,1928,3.739,1929,4.296,1930,4.296,1931,3.372,1932,3.372,1933,4.296,1934,4.296,1935,4.296,1936,4.296,1937,4.296,1938,3.372,1939,4.296,1940,4.296,1941,4.296,1942,4.296]],["title/interfaces/SnackbarOpts.html",[0,0.261,1943,2.877]],["body/interfaces/SnackbarOpts.html",[0,0.302,2,1.165,3,0.137,4,0.137,5,0.12,7,0.226,8,0.645,10,0.292,11,0.014,12,0.179,14,1.39,15,0.008,16,0.01,17,0.008,31,0.81,35,0.834,37,0.812,59,0.471,62,1.631,114,2.041,115,2.041,136,1.753,144,2.229,149,3.093,174,3.328,347,1.342,470,3.328,569,2.583,841,4.208,1107,4.036,1108,3.623,1145,5.785,1435,3.623,1442,3.623,1943,5.124,1944,3.623,1945,6.415,1946,6.415,1947,6.184,1948,4.017,1949,3.328,1950,4.017,1951,5.242,1952,4.017,1953,5.835,1954,5.835,1955,4.017,1956,4.017,1957,4.017,1958,4.017,1959,4.017,1960,4.017,1961,4.017,1962,4.017,1963,4.017,1964,4.017,1965,4.017,1966,4.017,1967,4.017,1968,4.017,1969,4.017]],["title/injectables/SnackbarService.html",[62,1.081,1949,2.877]],["body/injectables/SnackbarService.html",[0,0.314,3,0.142,4,0.142,5,0.125,7,0.234,10,0.197,11,0.014,12,0.183,14,1.201,15,0.008,16,0.01,17,0.008,22,1.557,27,0.908,29,0.976,30,0.942,31,0.513,33,1.087,35,0.846,37,0.843,59,0.489,62,1.671,63,2.117,96,1.252,114,2.117,115,2.117,136,1.252,144,2.312,149,3.209,174,3.453,347,1.392,470,3.453,569,2.68,841,4.283,1107,4.133,1108,3.759,1145,4.841,1435,3.759,1442,3.759,1943,5.377,1944,3.759,1945,5.368,1946,5.368,1947,4.168,1948,4.168,1949,4.448,1950,5.368,1951,5.368,1952,4.168,1953,5.939,1954,5.939,1955,4.168,1956,4.168,1957,4.168,1958,4.168,1959,5.368,1960,4.168,1961,4.168,1962,4.168,1963,4.168,1964,4.168,1965,4.168,1966,4.168,1967,4.168,1968,4.168,1969,4.168,1970,6.169,1971,4.789]],["title/interfaces/String.html",[0,0.261,14,0.702]],["body/interfaces/String.html",[0,0.418,2,1.275,3,0.15,4,0.15,5,0.131,7,0.247,10,0.208,11,0.014,12,0.15,14,1.432,15,0.008,16,0.011,17,0.008,18,2.598,22,1.611,27,0.958,29,1.03,30,0.993,31,0.541,33,1.147,42,1.698,61,1.368,83,2.827,95,1.994,96,1.669,126,2.827,150,3.391,261,2.827,347,1.856,669,3.965,1320,3.965,1461,4.397,1972,4.397,1973,6.383,1974,6.383,1975,5.052,1976,6.383,1977,6.383,1978,6.383,1979,5.052,1980,5.052,1981,5.052,1982,5.052,1983,5.052,1984,5.052,1985,5.052,1986,5.052,1987,6.997,1988,5.052,1989,6.383,1990,6.383,1991,5.052,1992,5.052]],["title/directives/ToggleClassDirective.html",[167,0.938,1507,2.36]],["body/directives/ToggleClassDirective.html",[3,0.158,4,0.158,5,0.138,7,0.26,10,0.271,11,0.014,12,0.158,14,1.16,15,0.009,16,0.011,17,0.009,27,1.358,29,1.085,30,1.046,31,0.57,35,0.625,37,0.937,44,3.044,59,0.543,65,2.569,67,2.081,73,1.604,167,1.55,169,3.503,170,4.19,171,4.428,179,2.48,200,2.081,201,2.081,202,3.899,203,4.631,450,4.754,451,6.235,459,3.566,463,4.631,1380,4.631,1507,3.899,1993,6.517,1994,4.631,1995,7.697,1996,6.235,1997,5.322,1998,5.322,1999,5.322,2000,5.322,2001,5.322]],["title/interfaces/VirtualScrollerDefaultOptions.html",[0,0.261,2002,2.877]],["body/interfaces/VirtualScrollerDefaultOptions.html",[0,0.334,2,1.286,3,0.151,4,0.151,5,0.133,7,0.249,8,0.687,10,0.33,11,0.014,12,0.151,15,0.008,16,0.011,17,0.008,31,0.79,136,2.192,215,2.424,1021,2.852,2002,4.628,2003,4.436,2004,6.418,2005,6.418,2006,6.418,2007,6.418,2008,6.418,2009,6.418,2010,6.418,2011,6.418,2012,6.418]],["title/modules/VirtualScrollerModule.html",[18,1.624,1920,2.674]],["body/modules/VirtualScrollerModule.html",[3,0.023,4,0.023,5,0.02,7,0.071,11,0.014,12,0.059,14,0.254,15,0.006,16,0.002,17,0.001,18,0.32,20,0.38,23,1.657,31,0.154,35,0.532,36,0.807,37,0.254,49,0.465,51,0.527,55,1.061,57,0.696,58,0.418,59,0.147,61,1.813,69,3.146,95,1.475,96,1.598,98,0.527,99,0.527,102,1.128,117,1.858,136,1.793,150,2.044,162,1.006,168,1.04,169,3.248,170,2.422,171,0.853,176,0.587,177,0.333,178,0.32,179,0.296,181,0.363,191,1.783,201,0.308,207,0.847,215,1.578,264,2.894,271,3.357,300,1.567,315,1.253,347,2.212,379,1.132,429,1.894,453,2.425,455,1.567,456,0.527,460,1.706,470,0.567,593,2.189,722,1.567,767,2.511,788,0.684,800,2.957,823,0.853,827,0.465,854,1.657,856,1.132,899,5.32,917,0.684,996,0.966,999,0.527,1020,0.567,1021,0.44,1023,1.132,1024,1.132,1025,1.255,1026,1.255,1027,1.738,1028,1.941,1029,0.684,1030,1.132,1032,3.102,1033,1.657,1035,2.152,1036,2.825,1037,2.152,1038,3.767,1039,2.152,1040,2.825,1041,1.783,1043,1.567,1049,1.44,1070,0.766,1081,1.132,1095,3.767,1139,2.774,1192,1.255,1195,1.255,1270,2.152,1344,0.617,1356,0.905,1358,0.567,1359,0.494,1472,0.44,1486,3.165,1487,1.04,1488,0.617,1623,0.617,1647,0.684,1726,0.684,1817,0.684,1841,0.398,1842,1.253,1846,0.494,1847,0.853,1850,1.04,1851,0.966,1878,0.684,1913,0.684,1920,2.388,1925,0.617,1926,2.797,1996,0.684,2002,1.44,2004,1.255,2005,1.255,2006,1.255,2007,1.255,2008,0.684,2009,0.684,2010,1.255,2011,1.255,2012,1.255,2013,0.684,2014,0.684,2015,0.684,2016,0.684,2017,0.786,2018,0.786,2019,1.442,2020,0.786,2021,1.997,2022,0.786,2023,0.786,2024,0.786,2025,0.684,2026,1.04,2027,0.966,2028,0.786,2029,1.255,2030,0.786,2031,1.997,2032,0.786,2033,1.997,2034,0.786,2035,0.786,2036,1.997,2037,0.786,2038,0.786,2039,1.442,2040,1.442,2041,0.786,2042,1.442,2043,0.786,2044,0.786,2045,2.885,2046,1.997,2047,0.786,2048,0.786,2049,2.885,2050,2.473,2051,0.786,2052,2.473,2053,2.473,2054,2.473,2055,2.152,2056,2.885,2057,0.786,2058,0.786,2059,0.786,2060,1.442,2061,1.442,2062,1.442,2063,0.786,2064,0.786,2065,2.473,2066,1.442,2067,1.442,2068,0.786,2069,1.997,2070,0.786,2071,0.786,2072,1.442,2073,0.786,2074,0.786,2075,0.786,2076,0.786,2077,1.442,2078,3.246,2079,1.442,2080,1.442,2081,1.442,2082,1.442,2083,1.442,2084,1.442,2085,1.442,2086,0.786,2087,7.087,2088,0.786,2089,0.786,2090,1.997,2091,0.786,2092,3.564,2093,3.564,2094,0.786,2095,0.786,2096,0.786,2097,0.786,2098,0.786,2099,0.786,2100,0.786,2101,0.786,2102,0.786,2103,2.473,2104,1.997,2105,0.786,2106,0.786,2107,1.442,2108,0.786,2109,1.442,2110,0.786,2111,1.442,2112,0.786,2113,0.786,2114,0.786,2115,1.997,2116,3.246,2117,0.786,2118,4.535,2119,1.997,2120,0.786,2121,0.786,2122,0.786,2123,2.885,2124,0.786,2125,1.997,2126,0.786,2127,2.825,2128,1.997,2129,0.786,2130,1.442,2131,0.786,2132,1.997,2133,1.997,2134,0.786,2135,1.442,2136,0.786,2137,0.786,2138,0.786,2139,3.564,2140,2.885,2141,1.997,2142,3.246,2143,0.786,2144,0.786,2145,0.786,2146,0.786,2147,1.997,2148,0.786,2149,1.442,2150,1.442,2151,1.442,2152,4.101,2153,0.786,2154,0.786,2155,0.786,2156,0.786,2157,0.786,2158,2.473,2159,0.786,2160,0.786,2161,0.786,2162,0.786,2163,0.786,2164,0.786,2165,0.786,2166,1.442,2167,0.786,2168,0.786,2169,2.473,2170,2.885,2171,1.442,2172,0.786,2173,0.786,2174,0.786,2175,0.786,2176,2.473,2177,0.786,2178,0.786,2179,0.786,2180,0.786,2181,1.442,2182,1.442,2183,1.997,2184,1.442,2185,0.786,2186,1.442,2187,0.786,2188,0.786,2189,2.473,2190,2.473,2191,4.894,2192,3.564,2193,0.786,2194,0.786,2195,0.786,2196,1.997,2197,0.786,2198,1.997,2199,2.885,2200,1.442,2201,0.786,2202,0.786,2203,0.786,2204,0.786,2205,0.786,2206,4.101,2207,1.997,2208,1.442,2209,1.997,2210,0.786,2211,1.442,2212,2.473,2213,0.786,2214,1.997,2215,1.442,2216,0.786,2217,0.786,2218,0.786,2219,0.786,2220,0.786,2221,0.786,2222,0.786,2223,1.442,2224,1.442,2225,1.997,2226,0.786,2227,0.786,2228,0.786,2229,1.442,2230,0.786,2231,0.786,2232,0.786,2233,0.786,2234,0.786,2235,0.786,2236,0.786,2237,1.442,2238,2.473,2239,0.786,2240,0.786,2241,0.786,2242,0.786,2243,0.786,2244,0.786,2245,0.786,2246,0.786,2247,0.786,2248,0.786,2249,1.997,2250,0.786,2251,0.786,2252,0.786,2253,0.786,2254,1.442,2255,0.786,2256,1.997,2257,0.786,2258,0.786,2259,1.997,2260,2.473,2261,1.997,2262,1.442,2263,1.997,2264,1.997,2265,1.255,2266,0.786,2267,0.786,2268,0.786,2269,0.786,2270,0.786,2271,0.786,2272,0.786,2273,0.786,2274,1.442,2275,0.786,2276,2.473,2277,1.442,2278,1.442,2279,0.786,2280,0.786,2281,1.442,2282,0.786,2283,0.786,2284,0.786,2285,0.786,2286,0.786,2287,0.786,2288,0.786,2289,0.786,2290,0.786,2291,0.786,2292,0.786,2293,0.786,2294,1.997,2295,1.442,2296,1.442,2297,1.442,2298,0.786,2299,1.442,2300,1.997,2301,1.442,2302,1.442,2303,0.786,2304,0.786,2305,1.442,2306,0.786,2307,0.786,2308,0.786,2309,0.786,2310,2.473,2311,0.786,2312,0.786,2313,1.442,2314,0.786,2315,0.786,2316,0.786,2317,1.442,2318,0.786,2319,0.786,2320,0.786,2321,0.786,2322,0.786,2323,0.786,2324,0.786,2325,4.101,2326,3.564,2327,0.786,2328,0.786,2329,1.442,2330,0.786,2331,0.786,2332,1.442,2333,0.786,2334,1.442,2335,1.442,2336,1.442,2337,0.786,2338,2.473,2339,0.786,2340,0.786,2341,0.786,2342,0.786,2343,0.786,2344,1.255,2345,0.786,2346,0.786,2347,0.786,2348,0.786,2349,1.442,2350,0.786,2351,0.786,2352,0.786,2353,0.786,2354,0.786,2355,0.786,2356,0.786,2357,0.786,2358,0.786,2359,0.786,2360,0.786,2361,0.786,2362,1.442,2363,0.786,2364,0.786,2365,0.786,2366,0.786,2367,0.786,2368,0.786,2369,0.786,2370,0.786,2371,0.786,2372,0.786,2373,0.786,2374,0.786,2375,0.786,2376,0.786,2377,0.786,2378,0.786,2379,0.786,2380,2.473,2381,1.442,2382,0.786,2383,0.786,2384,0.786,2385,0.786,2386,0.786,2387,0.786,2388,1.442,2389,1.442,2390,0.786,2391,0.786,2392,0.786,2393,1.442,2394,0.786,2395,0.786,2396,1.442,2397,0.786,2398,0.786,2399,0.786,2400,2.885,2401,1.442,2402,0.786,2403,2.885,2404,1.442,2405,0.786,2406,1.997,2407,0.786,2408,1.997,2409,1.442,2410,1.442,2411,1.442,2412,1.442,2413,1.442,2414,0.786,2415,1.442,2416,0.786,2417,0.786,2418,0.786,2419,0.786,2420,1.997,2421,0.786,2422,1.442,2423,1.442,2424,1.442,2425,0.786,2426,0.786,2427,1.442,2428,0.786,2429,0.786,2430,1.442,2431,1.442,2432,0.786,2433,1.442,2434,1.997,2435,1.442,2436,0.786,2437,0.786,2438,0.786,2439,0.786,2440,0.786,2441,0.786,2442,0.786,2443,0.786,2444,0.786,2445,0.786,2446,0.786,2447,0.786,2448,3.246,2449,0.786,2450,0.786,2451,0.786,2452,2.885,2453,1.442,2454,2.473,2455,0.786,2456,0.786,2457,1.442,2458,0.786,2459,0.786,2460,0.786,2461,0.786,2462,0.786,2463,1.442,2464,1.442,2465,0.786,2466,0.786,2467,0.786,2468,0.786,2469,0.786,2470,0.786,2471,0.786,2472,0.786,2473,0.786,2474,0.786,2475,0.786,2476,0.786,2477,0.786,2478,0.786,2479,0.786,2480,0.786,2481,1.442,2482,0.786,2483,1.442,2484,0.786,2485,0.786,2486,0.786,2487,1.997,2488,1.997,2489,3.246,2490,3.246,2491,0.786,2492,0.786,2493,0.786,2494,0.786,2495,0.786,2496,0.786,2497,2.885,2498,2.885,2499,1.442,2500,0.786,2501,1.442,2502,0.786,2503,2.473,2504,2.473,2505,1.442,2506,0.786,2507,1.442,2508,1.442,2509,2.885,2510,3.246,2511,3.246,2512,1.442,2513,2.473,2514,2.885,2515,0.786,2516,0.786,2517,1.442,2518,1.442,2519,0.786,2520,0.786,2521,0.786,2522,0.786,2523,0.786,2524,0.786,2525,2.473,2526,1.442,2527,0.786,2528,0.786,2529,0.684,2530,0.786,2531,0.786,2532,0.786,2533,0.786,2534,1.442,2535,2.473,2536,1.442,2537,1.997,2538,0.786,2539,0.786,2540,0.786,2541,0.786,2542,0.786,2543,1.997,2544,0.786,2545,0.786,2546,0.786,2547,0.786,2548,0.786,2549,0.786,2550,0.786,2551,0.786]],["title/directives/WhenScrolledDirective.html",[167,0.938,1509,2.36]],["body/directives/WhenScrolledDirective.html",[3,0.145,4,0.145,5,0.127,7,0.238,8,0.668,10,0.283,11,0.014,12,0.145,15,0.008,16,0.01,17,0.008,22,1.574,27,1.375,29,0.993,30,0.957,31,0.522,33,1.105,35,0.572,37,0.857,59,0.497,65,2.351,73,1.468,96,1.273,102,1.905,167,1.617,170,4.058,171,4.288,176,1.982,177,2.065,178,1.982,179,2.588,181,2.879,186,4.96,200,1.905,201,1.905,448,4.496,453,4.288,460,3.687,823,4.067,826,5.398,827,4.288,828,5.986,829,3.822,831,4.894,836,4.894,837,4.239,842,4.239,1509,3.687,1510,4.894,1598,4.239,1926,3.822,2552,6.524,2553,4.239,2554,6.236,2555,4.87,2556,4.87,2557,4.87,2558,4.87,2559,4.87]],["title/interfaces/WrapGroupDimension.html",[0,0.261,2027,2.674]],["body/interfaces/WrapGroupDimension.html",[0,0.386,2,1.488,3,0.175,4,0.175,5,0.153,7,0.289,8,0.752,10,0.308,11,0.013,12,0.175,15,0.01,16,0.012,17,0.01,136,2.101,1021,3.299,1023,6.086,1024,6.086,2027,4.702,2127,6.748,2560,5.131]],["title/interfaces/WrapGroupDimensions.html",[0,0.261,2026,2.877]],["body/interfaces/WrapGroupDimensions.html",[0,0.37,2,1.426,3,0.168,4,0.168,5,0.147,7,0.276,8,0.733,10,0.314,11,0.014,12,0.168,15,0.009,16,0.011,17,0.009,35,0.663,136,2.138,1021,3.161,2026,4.931,2027,5.246,2561,4.916,2562,7.644,2563,7.644,2564,7.644,2565,7.644]],["title/coverage.html",[2566,4.755]],["body/coverage.html",[0,0.505,1,1.335,5,0.052,6,2.543,9,1.251,10,0.082,11,0.014,14,0.351,15,0.003,16,0.005,17,0.003,38,1.251,47,1.437,59,0.568,62,1.835,64,2.543,66,1.437,100,1.008,102,0.779,131,1.437,132,2.82,134,1.374,136,0.521,150,4.202,161,1.564,164,1.437,165,2.543,166,2.543,167,1.62,172,1.564,180,1.115,183,1.437,208,1.251,209,2.953,216,1.178,225,1.251,226,2.953,227,1.734,232,1.335,257,1.734,271,3.718,272,2.953,274,2.82,300,4.073,383,1.564,384,1.734,406,1.564,444,1.178,445,1.734,446,1.734,482,1.564,483,1.734,484,1.734,487,2.57,489,1.734,490,1.734,491,1.734,492,1.734,493,1.734,494,1.734,495,1.734,496,1.734,497,1.734,573,1.335,574,3.418,575,1.734,600,1.564,601,1.734,623,1.564,624,1.734,651,1.437,652,2.955,653,2.57,654,1.564,657,1.564,658,1.734,659,1.734,660,1.734,687,1.437,688,1.734,689,2.543,704,2.336,709,1.437,713,1.437,720,3.401,736,1.437,779,1.115,815,1.734,817,1.564,818,3.401,819,1.734,820,1.178,821,1.734,822,1.734,843,1.335,844,2.543,845,2.543,855,1.335,860,1.564,861,1.734,930,1.335,931,2.543,932,1.335,935,1.437,936,1.734,938,2.336,942,1.437,944,1.437,993,0.962,994,1.734,995,1.734,1018,1.564,1020,1.437,1021,3.418,1022,1.734,1033,1.335,1034,1.734,1041,1.437,1042,1.734,1044,1.564,1045,1.734,1056,1.335,1074,1.564,1089,1.335,1107,1.335,1177,2.543,1184,1.178,1185,1.734,1186,1.734,1256,1.734,1272,1.564,1273,1.734,1346,1.437,1347,2.543,1348,2.543,1356,3.491,1357,1.008,1362,1.734,1363,1.734,1441,1.564,1476,1.059,1480,1.335,1482,1.008,1484,1.335,1486,1.335,1494,1.059,1497,1.059,1500,1.059,1501,0.962,1503,0.962,1505,0.92,1507,1.178,1509,1.178,1512,1.564,1513,1.734,1514,1.734,1515,1.734,1609,1.564,1610,4.84,1626,1.734,1628,1.734,1631,1.734,1660,2.744,1661,2.744,1662,2.953,1671,2.336,1672,1.734,1719,1.734,1753,1.437,1781,1.734,1841,2.386,1848,1.564,1857,1.734,1901,1.564,1909,1.734,1921,1.564,1925,2.543,1931,1.564,1932,1.564,1943,1.437,1944,2.543,1949,1.437,1972,1.734,1993,1.734,1994,1.734,2002,1.437,2003,1.734,2016,2.82,2026,1.437,2027,1.335,2029,1.734,2552,1.734,2553,1.734,2560,1.734,2561,1.734,2566,1.734,2567,1.734,2568,1.993,2569,1.993,2570,4.717,2571,5.861,2572,7.422,2573,8.14,2574,5.19,2575,6.992,2576,5.19,2577,4.095,2578,1.993,2579,1.993,2580,4.717,2581,1.993,2582,1.993,2583,1.993,2584,2.82,2585,1.993,2586,2.82,2587,3.24,2588,1.993,2589,2.82,2590,1.993,2591,1.993,2592,4.095,2593,1.993,2594,1.993,2595,1.993,2596,5.19,2597,3.24,2598,1.993,2599,4.717,2600,1.993,2601,4.095,2602,3.24,2603,1.993,2604,1.993,2605,1.993,2606,1.734,2607,1.993,2608,1.993,2609,2.82,2610,1.734,2611,1.734,2612,1.993,2613,4.84,2614,1.993,2615,1.993,2616,1.993,2617,1.993,2618,1.993,2619,1.993,2620,1.993,2621,1.993,2622,3.24,2623,1.993,2624,1.734,2625,1.734,2626,1.734,2627,4.095,2628,1.993,2629,1.993,2630,1.993,2631,1.993,2632,4.84,2633,1.734,2634,1.993,2635,1.993,2636,1.993,2637,1.993,2638,3.24,2639,3.24,2640,1.993,2641,1.993,2642,1.993,2643,1.993]],["title/dependencies.html",[1841,2.43,2644,3.323]],["body/dependencies.html",[11,0.014,15,0.009,16,0.011,17,0.009,37,0.932,142,2.557,144,3.174,572,4.61,675,3.819,681,4.61,1066,3.819,1103,3.819,1104,3.819,1841,2.68,1851,3.55,1853,5.16,1854,4.741,2025,4.61,2645,5.297,2646,8.027,2647,5.297,2648,5.297,2649,5.297,2650,5.297,2651,5.297,2652,5.297,2653,5.297,2654,5.297,2655,5.297,2656,5.297,2657,5.297,2658,5.297,2659,5.297,2660,5.297,2661,5.297,2662,5.297,2663,5.297,2664,5.297,2665,5.297,2666,5.297,2667,5.297,2668,4.61,2669,5.297,2670,5.297,2671,6.575,2672,5.297,2673,5.297,2674,5.297,2675,5.297,2676,5.297,2677,5.297,2678,5.297]],["title/index.html",[7,0.163,1306,2.608,2679,2.892]],["body/index.html",[11,0.012,15,0.011,16,0.012,17,0.011,53,2.629,368,5.621,2668,5.621,2680,6.459,2681,6.459]],["title/license.html",[1306,2.608,2679,2.892,2682,2.892]],["body/license.html",[11,0.011,15,0.008,16,0.011,17,0.008,53,2.07,456,3.408,1321,4.426,1737,3.992,1796,4.426,1847,3.008,1938,5.031,2344,6.108,2567,4.426,2682,4.426,2683,6.41,2684,7.368,2685,6.41,2686,6.41,2687,6.41,2688,5.086,2689,5.086,2690,5.086,2691,6.41,2692,5.086,2693,5.086,2694,5.086,2695,5.086,2696,5.086,2697,5.086,2698,8.036,2699,5.086,2700,5.086,2701,5.086,2702,5.086,2703,6.41,2704,5.086,2705,5.086,2706,6.41,2707,5.086,2708,5.086,2709,5.086,2710,5.086,2711,5.086,2712,5.086,2713,6.41,2714,5.086,2715,5.086,2716,5.086,2717,5.086,2718,5.086,2719,6.41,2720,6.41,2721,5.086,2722,5.086,2723,5.086,2724,5.086,2725,5.086,2726,5.086,2727,5.086,2728,5.086,2729,5.086,2730,5.086,2731,5.086,2732,5.086,2733,5.086,2734,5.086,2735,5.086,2736,5.086,2737,5.086,2738,5.086,2739,5.086,2740,5.086,2741,5.086,2742,5.086,2743,5.086,2744,5.086,2745,5.086,2746,5.086,2747,5.086,2748,5.086,2749,5.086]],["title/modules.html",[20,2.638]],["body/modules.html",[11,0.012,15,0.01,16,0.012,17,0.01,19,4.639,20,2.854,703,4.639,937,4.639,1329,6.527,1840,3.96,1854,5.715,1896,4.262,1900,3.96,1920,3.96,1927,4.262,2750,7.5,2751,8.187,2752,7.926,2753,7.926]],["title/overview.html",[2754,4.755]],["body/overview.html",[2,0.849,11,0.014,15,0.006,16,0.008,17,0.006,18,1.37,20,1.625,55,1.788,57,1.625,58,1.788,63,1.488,200,1.316,273,1.788,573,3.807,993,3.808,1070,2.575,1357,3.991,1358,2.426,1472,1.883,1476,4.191,1482,3.991,1486,4.74,1501,3.808,1503,3.808,1505,3.641,1648,2.641,1840,5.486,1841,1.702,1842,2.112,1843,2.928,1844,2.928,1845,2.928,1846,2.112,1847,1.99,1896,5.877,1897,2.928,1898,2.928,1900,5.525,1915,2.928,1916,2.928,1918,2.928,1920,4.599,1927,5.847,1928,2.928,2013,2.928,2014,2.928,2015,2.928,2754,2.928,2755,4.847,2756,2.928,2757,3.365,2758,2.928]],["title/miscellaneous/typealiases.html",[2759,2.396,2760,4.804]],["body/miscellaneous/typealiases.html",[7,0.308,10,0.259,11,0.013,14,1.284,15,0.01,16,0.012,17,0.01,652,3.347,653,3.954,654,5.726,656,5.26,2759,4.542,2761,6.299,2762,5.482]],["title/miscellaneous/variables.html",[2759,2.396,2763,4.181]],["body/miscellaneous/variables.html",[7,0.157,10,0.308,11,0.014,14,0.564,15,0.005,16,0.008,17,0.005,47,3.374,64,2.516,95,2.512,99,3.703,102,2.162,103,2.79,134,1.359,136,1.223,147,2.516,162,1.305,180,1.794,183,3.374,207,3.371,264,1.895,271,1.417,326,2.79,400,2.79,406,3.673,413,2.012,444,1.895,574,2.618,585,2.79,652,1.703,704,2.311,713,3.374,720,4.382,741,2.79,779,2.618,800,2.311,818,3.374,820,1.895,938,2.311,944,3.374,965,2.79,993,1.548,1018,2.516,1074,3.673,1078,4.072,1184,1.895,1303,2.79,1357,1.622,1441,3.673,1454,4.81,1476,1.703,1480,2.148,1482,1.622,1484,2.148,1494,1.703,1497,1.703,1500,1.703,1501,1.548,1503,1.548,1505,1.48,1507,1.895,1509,1.895,1623,3.673,1648,2.516,1753,3.374,1841,3.614,1848,3.673,1901,3.673,1921,3.673,1931,2.516,1932,3.673,1938,3.673,2055,2.79,2265,2.79,2529,2.79,2584,4.072,2586,5.289,2589,4.072,2606,2.79,2609,2.79,2610,4.072,2611,4.072,2613,2.79,2624,2.79,2625,4.072,2626,4.072,2632,2.79,2633,4.81,2756,2.79,2758,2.79,2759,2.311,2762,5.873,2763,2.79,2764,3.205,2765,6.749,2766,4.679,2767,3.205,2768,3.205,2769,3.205,2770,3.205,2771,3.205,2772,3.205,2773,3.205,2774,7.587,2775,3.205,2776,3.205,2777,3.205,2778,4.679,2779,3.205,2780,4.679,2781,3.205,2782,3.205,2783,4.679,2784,4.679,2785,3.205,2786,4.679,2787,6.077,2788,3.205,2789,3.205,2790,4.679,2791,4.679,2792,4.679,2793,4.679,2794,3.205,2795,3.205,2796,3.205,2797,3.205,2798,3.205,2799,3.205,2800,3.205,2801,3.205,2802,3.205,2803,3.205,2804,3.205,2805,3.205,2806,3.205,2807,3.205,2808,3.205,2809,3.205,2810,3.205,2811,3.205,2812,3.205,2813,3.205,2814,3.205,2815,3.205,2816,3.205,2817,3.205,2818,3.205,2819,3.205,2820,3.205,2821,3.205,2822,3.205,2823,3.205,2824,3.205,2825,4.679,2826,3.205,2827,5.527,2828,3.205,2829,4.679,2830,4.679,2831,4.679,2832,3.205,2833,3.205,2834,3.205,2835,3.205,2836,3.205,2837,3.205,2838,3.205,2839,3.205,2840,3.205,2841,3.205,2842,3.205,2843,3.205]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":271,"title":{},"body":{"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"injectables/DataService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"interfaces/RandomPasswordOps.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0,1}[0",{"_index":2802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.39",{"_index":2654,"title":{},"body":{"dependencies.html":{}}}],["0.0.51",{"_index":2656,"title":{},"body":{"dependencies.html":{}}}],["0.1.0",{"_index":2650,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":2678,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1146,"title":{},"body":{"classes/LeafletMap.html":{}}}],["0.6.2",{"_index":2661,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2573,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2592,"title":{},"body":{"coverage.html":{}}}],["0/103",{"_index":2590,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2593,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2608,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2597,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2587,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2598,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2618,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2612,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2570,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2588,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":2591,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2575,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2596,"title":{},"body":{"coverage.html":{}}}],["0/41",{"_index":2583,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2571,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2576,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2574,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2594,"title":{},"body":{"coverage.html":{}}}],["0/84",{"_index":2585,"title":{},"body":{"coverage.html":{}}}],["0/99",{"_index":2595,"title":{},"body":{"coverage.html":{}}}],["00:00:00",{"_index":442,"title":{},"body":{"injectables/CookiesService.html":{}}}],["01",{"_index":439,"title":{},"body":{"injectables/CookiesService.html":{}}}],["0123456789",{"_index":1652,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["0x10000",{"_index":1636,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["1",{"_index":264,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"interfaces/RandomPasswordOps.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":2676,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":2667,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":2666,"title":{},"body":{"dependencies.html":{}}}],["1.60934",{"_index":1343,"title":{},"body":{"injectables/MapService.html":{}}}],["1/1",{"_index":2580,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2603,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1270,"title":{},"body":{"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["100",{"_index":300,"title":{},"body":{"classes/Color.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["1000",{"_index":470,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"modules/VirtualScrollerModule.html":{}}}],["100mb",{"_index":550,"title":{},"body":{"classes/CustomValidators.html":{}}}],["100vh",{"_index":2058,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["100vw",{"_index":2057,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["1080",{"_index":2100,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["11",{"_index":1071,"title":{},"body":{"classes/LeafletMap.html":{}}}],["11/11",{"_index":2600,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2757,"title":{},"body":{"overview.html":{}}}],["123",{"_index":392,"title":{},"body":{"injectables/CookiesService.html":{}}}],["13",{"_index":2756,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":308,"title":{},"body":{"classes/Color.html":{}}}],["1500",{"_index":1968,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["16",{"_index":1018,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["17",{"_index":2823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.4.0",{"_index":2657,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":2825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["180",{"_index":1331,"title":{},"body":{"injectables/MapService.html":{}}}],["19",{"_index":1176,"title":{},"body":{"classes/LeafletMap.html":{}}}],["1920",{"_index":2098,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["1970",{"_index":441,"title":{},"body":{"injectables/CookiesService.html":{}}}],["1px",{"_index":2073,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["1st",{"_index":2363,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["2",{"_index":379,"title":{},"body":{"classes/Color.html":{},"injectables/MapService.html":{},"modules/VirtualScrollerModule.html":{}}}],["2,63})\\.([a",{"_index":2776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.9.0",{"_index":2663,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":352,"title":{},"body":{"classes/Color.html":{}}}],["2014",{"_index":2686,"title":{},"body":{"license.html":{}}}],["2019",{"_index":2687,"title":{},"body":{"license.html":{}}}],["27",{"_index":2758,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["280",{"_index":334,"title":{},"body":{"classes/Color.html":{}}}],["288",{"_index":333,"title":{},"body":{"classes/Color.html":{}}}],["2nd",{"_index":2352,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["2x",{"_index":2340,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["3.0.3",{"_index":2670,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":2652,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":2607,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":768,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["360",{"_index":296,"title":{},"body":{"classes/Color.html":{}}}],["37",{"_index":2812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":2810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":1303,"title":{},"body":{"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["39;users.add&#39",{"_index":240,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["39;users.update&#39",{"_index":239,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["4",{"_index":1393,"title":{},"body":{"components/PinInputComponent.html":{}}}],["4.2.7",{"_index":2674,"title":{},"body":{"dependencies.html":{}}}],["4.6288702",{"_index":1068,"title":{},"body":{"classes/LeafletMap.html":{}}}],["40",{"_index":326,"title":{},"body":{"classes/Color.html":{},"miscellaneous/variables.html":{}}}],["4000",{"_index":1958,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["46",{"_index":2816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4][0",{"_index":2791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":2031,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["5/6",{"_index":2635,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1256,"title":{},"body":{"directives/LongPressDirective.html":{},"coverage.html":{}}}],["500",{"_index":365,"title":{},"body":{"classes/Color.html":{},"directives/FinishTypingDirective.html":{},"directives/LongPressDirective.html":{}}}],["512",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5]|2[0",{"_index":2790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":2755,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":2671,"title":{},"body":{"dependencies.html":{}}}],["6371",{"_index":1341,"title":{},"body":{"injectables/MapService.html":{}}}],["65",{"_index":303,"title":{},"body":{"classes/Color.html":{}}}],["70px",{"_index":366,"title":{},"body":{"classes/Color.html":{}}}],["74.1193724",{"_index":1069,"title":{},"body":{"classes/LeafletMap.html":{}}}],["75",{"_index":305,"title":{},"body":{"classes/Color.html":{}}}],["750",{"_index":2030,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["8",{"_index":1648,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["80",{"_index":298,"title":{},"body":{"classes/Color.html":{}}}],["83",{"_index":2634,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9!#$%&'*+/=?^_",{"_index":2778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.6",{"_index":2646,"title":{},"body":{"dependencies.html":{}}}],["9.18.1",{"_index":2665,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":1330,"title":{},"body":{"injectables/MapService.html":{}}}],["91",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9\\_",{"_index":2775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9](?:[a",{"_index":2786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])(?=.*[a",{"_index":2805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?\\.)+[a",{"_index":2788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?|\\[(?:(?:25[0",{"_index":2789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]*[.]{0,1}[0",{"_index":2803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]+$/.test(value.tostring",{"_index":1452,"title":{},"body":{"components/PinInputComponent.html":{}}}],["9]+/g",{"_index":2804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]:(?:[\\x01",{"_index":2796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]?)\\.){3}(?:25[0",{"_index":2794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]?|[a",{"_index":2795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9][0",{"_index":2793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{2",{"_index":2777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]|[01]?[0",{"_index":2792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9a",{"_index":1453,"title":{},"body":{"components/PinInputComponent.html":{}}}],["_",{"_index":1405,"title":{},"body":{"components/PinInputComponent.html":{},"interfaces/RandomPasswordOps.html":{}}}],["_arguments",{"_index":2317,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_awsdata",{"_index":68,"title":{},"body":{"injectables/AwsService.html":{}}}],["_blank",{"_index":610,"title":{},"body":{"injectables/DownloadService.html":{}}}],["_bufferamount",{"_index":2101,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_checkresizeinterval",{"_index":2122,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_childscrolldim",{"_index":2290,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_clientconfig",{"_index":690,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["_config",{"_index":721,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["_elementref",{"_index":831,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["_enableunequalchildrensizes",{"_index":2088,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_form",{"_index":1793,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["_googleauth",{"_index":949,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["_horizontal",{"_index":2134,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_html",{"_index":1951,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["_html.classname",{"_index":1953,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["_html.innerhtml",{"_index":1960,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["_invisiblepaddingproperty",{"_index":2286,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_isenabled",{"_index":872,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["_items",{"_index":2126,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_margindir",{"_index":2292,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_ngcontrol",{"_index":1684,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["_offsettype",{"_index":2287,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_openiddata",{"_index":228,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["_pageoffsettype",{"_index":2289,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_parentscroll",{"_index":2146,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_renderer",{"_index":1000,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["_scheme",{"_index":1524,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["_schemedarkclassname",{"_index":1525,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["_schemelightclassname",{"_index":1526,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["_scrolldebouncetime",{"_index":2110,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_scrollthrottlingtime",{"_index":2106,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_scrolltype",{"_index":2288,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_sererrors",{"_index":1730,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["_states",{"_index":1722,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["_this",{"_index":2318,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_translatedir",{"_index":2291,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["a[href",{"_index":615,"title":{},"body":{"injectables/DownloadService.html":{}}}],["abcdefghijklmnopqrstuvwxyz",{"_index":1654,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["above",{"_index":2718,"title":{},"body":{"license.html":{}}}],["absoluta",{"_index":606,"title":{},"body":{"injectables/DownloadService.html":{}}}],["absolute",{"_index":2059,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["abstractcontrol",{"_index":567,"title":{},"body":{"classes/CustomValidators.html":{},"interfaces/ErrorDetails.html":{},"directives/SerErrorsDirective.html":{}}}],["access_token",{"_index":773,"title":{},"body":{"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{}}}],["accessors",{"_index":72,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{}}}],["accesstoken",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acciones",{"_index":113,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{}}}],["accurate",{"_index":2342,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["acorde",{"_index":1574,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["action",{"_index":2743,"title":{},"body":{"license.html":{}}}],["active",{"_index":1886,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["actively",{"_index":2366,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["actual",{"_index":1298,"title":{},"body":{"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["actual_component",{"_index":1511,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["actualizar",{"_index":428,"title":{},"body":{"injectables/CookiesService.html":{}}}],["additional",{"_index":2374,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["additionaloffset",{"_index":2190,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["addmarker",{"_index":1050,"title":{},"body":{"classes/LeafletMap.html":{}}}],["addmarker(latlng",{"_index":1084,"title":{},"body":{"classes/LeafletMap.html":{}}}],["addnewbuttontext",{"_index":625,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["addnewitemonfilter",{"_index":626,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["address",{"_index":1477,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["address/address",{"_index":1908,"title":{},"body":{"modules/SerFormModule.html":{}}}],["addresscolcomponent",{"_index":1476,"title":{},"body":{"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["addscrolleventhandlers",{"_index":2451,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["adicionales",{"_index":486,"title":{},"body":{"classes/CustomValidators.html":{}}}],["adminitida",{"_index":558,"title":{},"body":{"classes/CustomValidators.html":{}}}],["admitidas",{"_index":565,"title":{},"body":{"classes/CustomValidators.html":{}}}],["afterviewinit",{"_index":1364,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SerErrorsDirective.html":{}}}],["agrega",{"_index":1580,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["al",{"_index":85,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["aleatorias",{"_index":1644,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["aleatorio",{"_index":1627,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["alfanúmerico",{"_index":1629,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["aliases",{"_index":2761,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligntobeginning",{"_index":2189,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["alreadyexist",{"_index":161,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{},"coverage.html":{}}}],["alreadyexist(http",{"_index":151,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{}}}],["alt",{"_index":2824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alternar",{"_index":1591,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["and/or",{"_index":2711,"title":{},"body":{"license.html":{}}}],["andres",{"_index":2689,"title":{},"body":{"license.html":{}}}],["angle",{"_index":1313,"title":{},"body":{"injectables/MapService.html":{}}}],["angular",{"_index":2658,"title":{},"body":{"dependencies.html":{}}}],["angular/animations",{"_index":2645,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1851,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":138,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{}}}],["angular/compiler",{"_index":2647,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":37,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":142,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorDetails.html":{},"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"dependencies.html":{}}}],["angular/forms/src/model",{"_index":1986,"title":{},"body":{"interfaces/String.html":{}}}],["angular/platform",{"_index":1853,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":2648,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":2224,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["animationcompletedcallback",{"_index":2192,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["animationmilliseconds",{"_index":2191,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["animationrequest",{"_index":2208,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["any).fb",{"_index":801,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["any).gapi",{"_index":985,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["any).mapbox_access_token",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any)[rule",{"_index":1779,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["anyways",{"_index":2353,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["api",{"_index":224,"title":{},"body":{"interfaces/CenterPoint.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"injectables/MapService.html":{}}}],["aplicar",{"_index":1573,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["app",{"_index":54,"title":{},"body":{"modules/AwsModule.html":{}}}],["appid",{"_index":715,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["applyfilter",{"_index":576,"title":{},"body":{"injectables/DataService.html":{}}}],["applyfilter(item",{"_index":578,"title":{},"body":{"injectables/DataService.html":{}}}],["appmodule",{"_index":60,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["archivo",{"_index":556,"title":{},"body":{"classes/CustomValidators.html":{}}}],["args",{"_index":1976,"title":{},"body":{"interfaces/String.html":{}}}],["arguments",{"_index":455,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["arising",{"_index":2747,"title":{},"body":{"license.html":{}}}],["array",{"_index":2364,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["array(this.codelength",{"_index":1444,"title":{},"body":{"components/PinInputComponent.html":{}}}],["array.isarray(value",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arrayendindex",{"_index":2525,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["arraygroupby",{"_index":2614,"title":{},"body":{"coverage.html":{}}}],["arraystartindex",{"_index":2504,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["arreglo",{"_index":236,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["assets",{"_index":125,"title":{},"body":{"injectables/AwsService.html":{}}}],["associated",{"_index":2699,"title":{},"body":{"license.html":{}}}],["async",{"_index":1382,"title":{},"body":{"components/PinInputComponent.html":{}}}],["asyncvalidatorfn",{"_index":139,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{}}}],["atleastpermissions",{"_index":229,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["atleastpermissions(requiredpermissions",{"_index":233,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["attribution",{"_index":2829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autenticación",{"_index":712,"title":{},"body":{"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["autenticarse",{"_index":221,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{}}}],["auth",{"_index":990,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["authors",{"_index":2736,"title":{},"body":{"license.html":{}}}],["auto",{"_index":2050,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["automatico",{"_index":1595,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["available",{"_index":1329,"title":{},"body":{"injectables/MapService.html":{},"modules.html":{}}}],["averagechildheight",{"_index":2518,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["averagechildwidth",{"_index":2517,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["aws",{"_index":187,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["aws.service",{"_index":39,"title":{},"body":{"modules/AwsModule.html":{}}}],["aws/aws.service",{"_index":175,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["aws_config",{"_index":47,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["awsdata",{"_index":1,"title":{"interfaces/AwsData.html":{}},"body":{"interfaces/AwsData.html":{},"injectables/AwsService.html":{},"interfaces/S3.html":{},"coverage.html":{}}}],["awsdata(value",{"_index":118,"title":{},"body":{"injectables/AwsService.html":{}}}],["awsmodule",{"_index":19,"title":{"modules/AwsModule.html":{}},"body":{"modules/AwsModule.html":{},"modules.html":{}}}],["awsmodule.forroot",{"_index":50,"title":{},"body":{"modules/AwsModule.html":{}}}],["awsservice",{"_index":38,"title":{"injectables/AwsService.html":{}},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{}}}],["background",{"_index":195,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["backspace",{"_index":2815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["badge",{"_index":1498,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{}}}],["badge]'},{'name",{"_index":1496,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["badgeshowlimit",{"_index":627,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["basecolor",{"_index":356,"title":{},"body":{"classes/Color.html":{}}}],["basecolor.changehue(basecolor.hue",{"_index":360,"title":{},"body":{"classes/Color.html":{}}}],["basecolor.changelight(basecolor.light)).hsl",{"_index":362,"title":{},"body":{"classes/Color.html":{}}}],["basecolor.sat",{"_index":361,"title":{},"body":{"classes/Color.html":{}}}],["basepathfield",{"_index":518,"title":{},"body":{"classes/CustomValidators.html":{}}}],["basevalidationmodel",{"_index":131,"title":{"interfaces/BaseValidationModel.html":{}},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{},"coverage.html":{}}}],["become",{"_index":2367,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["behaviorsubject",{"_index":1815,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["behaviorsubject(null",{"_index":1809,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["bg",{"_index":1936,"title":{},"body":{"modules/SerUiModule.html":{}}}],["bgimage",{"_index":164,"title":{"interfaces/BgImage.html":{}},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{}}}],["bgimage]'},{'name",{"_index":1489,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["bgimagedirective",{"_index":180,"title":{"directives/BgImageDirective.html":{}},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["black",{"_index":369,"title":{},"body":{"classes/Color.html":{}}}],["block",{"_index":2043,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["blur",{"_index":1681,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["body",{"_index":1582,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.add(this.schemedarkclassname",{"_index":1586,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.add(this.schemelightclassname",{"_index":1590,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.contains(this.schemedarkclassname",{"_index":1588,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.contains(this.schemelightclassname",{"_index":1584,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.remove(this.schemedarkclassname",{"_index":1589,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.remove(this.schemelightclassname",{"_index":1585,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["boolean",{"_index":215,"title":{},"body":{"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{},"injectables/FullscreenService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerErrorsDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["bootstrap",{"_index":58,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["border",{"_index":2064,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["borrar",{"_index":430,"title":{},"body":{"injectables/CookiesService.html":{}}}],["bottleneck",{"_index":2348,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["bottom",{"_index":2262,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["boundingrect",{"_index":2274,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["boundingrect.height",{"_index":2285,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["boundingrect.width",{"_index":2284,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["bowser",{"_index":2662,"title":{},"body":{"dependencies.html":{}}}],["box",{"_index":2062,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["browse",{"_index":2751,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1854,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":1852,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{}}}],["browserwidth",{"_index":2628,"title":{},"body":{"coverage.html":{}}}],["bucket",{"_index":13,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/S3.html":{}}}],["bufferamount",{"_index":2102,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["bufferamount(value",{"_index":2105,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["buffersize",{"_index":2537,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["busqueda",{"_index":510,"title":{},"body":{"classes/CustomValidators.html":{}}}],["c",{"_index":2685,"title":{},"body":{"license.html":{}}}],["cabecera",{"_index":562,"title":{},"body":{"classes/CustomValidators.html":{}}}],["cacheditemslength",{"_index":2321,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["cachedmeasurement",{"_index":2181,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["cachedmeasurement.childheight",{"_index":2187,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["cachedmeasurement.childwidth",{"_index":2185,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["calculateviewport",{"_index":2541,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["callback",{"_index":828,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["cambiar",{"_index":1559,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["cambio",{"_index":1522,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["campo",{"_index":505,"title":{},"body":{"classes/CustomValidators.html":{}}}],["campos",{"_index":533,"title":{},"body":{"classes/CustomValidators.html":{}}}],["cancelanimationframe(animationrequest",{"_index":2222,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["caninputvalue",{"_index":1376,"title":{},"body":{"components/PinInputComponent.html":{}}}],["caninputvalue(value",{"_index":1398,"title":{},"body":{"components/PinInputComponent.html":{}}}],["canvas",{"_index":348,"title":{},"body":{"classes/Color.html":{}}}],["canvas.getcontext('2d",{"_index":355,"title":{},"body":{"classes/Color.html":{}}}],["canvas.height",{"_index":353,"title":{},"body":{"classes/Color.html":{}}}],["canvas.toblob(result",{"_index":380,"title":{},"body":{"classes/Color.html":{}}}],["canvas.width",{"_index":351,"title":{},"body":{"classes/Color.html":{}}}],["capital",{"_index":1980,"title":{},"body":{"interfaces/String.html":{}}}],["caracteres",{"_index":1621,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["carga",{"_index":793,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["cargarse",{"_index":795,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["catch((err",{"_index":992,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["catcherror",{"_index":145,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["caused",{"_index":2333,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["causing",{"_index":2345,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["cc",{"_index":2633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["center",{"_index":371,"title":{},"body":{"classes/Color.html":{}}}],["centerpoint",{"_index":208,"title":{"interfaces/CenterPoint.html":{}},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"coverage.html":{}}}],["centerpoint(options",{"_index":1086,"title":{},"body":{"classes/LeafletMap.html":{}}}],["change",{"_index":321,"title":{},"body":{"classes/Color.html":{}}}],["changed",{"_index":2339,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["changedetectorref",{"_index":2021,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["changeeventarg",{"_index":2432,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["changehue",{"_index":286,"title":{},"body":{"classes/Color.html":{}}}],["changehue(hue",{"_index":309,"title":{},"body":{"classes/Color.html":{}}}],["changelight",{"_index":287,"title":{},"body":{"classes/Color.html":{}}}],["changelight(light",{"_index":312,"title":{},"body":{"classes/Color.html":{}}}],["changes.items",{"_index":2172,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["changes.items.previousvalue",{"_index":2173,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["changes.items.previousvalue.length",{"_index":2174,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["charge",{"_index":2695,"title":{},"body":{"license.html":{}}}],["charset",{"_index":1650,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["charset.length",{"_index":1659,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["check",{"_index":318,"title":{},"body":{"classes/Color.html":{},"injectables/MapService.html":{}}}],["checklatlog",{"_index":1274,"title":{},"body":{"injectables/MapService.html":{}}}],["checklatlog(lat",{"_index":1279,"title":{},"body":{"injectables/MapService.html":{}}}],["checkpropstate",{"_index":1784,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["checkpropstate(prop",{"_index":1795,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["checkresizeinterval",{"_index":2004,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["checkresizeinterval(value",{"_index":2124,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["checkscrollelementresized",{"_index":2273,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["checkscrollelementresizedtimer",{"_index":2121,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["checkstatus",{"_index":1785,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["child",{"_index":2362,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["childheight",{"_index":1023,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{}}}],["children",{"_index":2481,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["children.length",{"_index":2484,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["children[0][propertyname",{"_index":2486,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["childrenlength",{"_index":2483,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["childwidth",{"_index":1024,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{}}}],["chrome",{"_index":903,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["ciertas",{"_index":112,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{}}}],["circuit",{"_index":2378,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["claim",{"_index":2739,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1354,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["claimsservice",{"_index":66,"title":{"injectables/ClaimsService.html":{}},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"coverage.html":{}}}],["claro",{"_index":1594,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["claro/oscuro",{"_index":1560,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["clase",{"_index":889,"title":{},"body":{"injectables/FullscreenService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["class",{"_index":59,"title":{"classes/Color.html":{},"classes/CustomValidators.html":{},"classes/FacebookSDKConfig.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"classes/LeafletMap.html":{}},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"coverage.html":{}}}],["class.active",{"_index":1861,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.directive",{"_index":1940,"title":{},"body":{"modules/SerUiModule.html":{}}}],["class.directive.ts",{"_index":1994,"title":{},"body":{"directives/ToggleClassDirective.html":{},"coverage.html":{}}}],["class.directive.ts:10",{"_index":1999,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["class.directive.ts:12",{"_index":1997,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["class.directive.ts:8",{"_index":1998,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["class.dirty",{"_index":1862,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.disabled",{"_index":1863,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.focus",{"_index":1864,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.horizontal",{"_index":2035,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["class.invalid",{"_index":1865,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.longpress",{"_index":1202,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["class.pending",{"_index":1866,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.press",{"_index":1203,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["class.selfscroll",{"_index":2038,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["class.show",{"_index":1392,"title":{},"body":{"components/PinInputComponent.html":{}}}],["class.valid",{"_index":1867,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.vertical",{"_index":2037,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["classes",{"_index":273,"title":{},"body":{"classes/Color.html":{},"classes/CustomValidators.html":{},"interfaces/DropdownSettings.html":{},"classes/FacebookSDKConfig.html":{},"interfaces/FilterSettings.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"classes/LeafletMap.html":{},"overview.html":{}}}],["clearall",{"_index":628,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["clearinterval(this.checkscrollelementresizedtimer",{"_index":2461,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["cleartimeout(this.inputchangedpromise",{"_index":840,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["cleartimeout(this.timeout",{"_index":1257,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["cli",{"_index":2659,"title":{},"body":{"dependencies.html":{}}}],["clic",{"_index":617,"title":{},"body":{"injectables/DownloadService.html":{}}}],["click",{"_index":451,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["click(val",{"_index":457,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["clicks",{"_index":1242,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["client",{"_index":256,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["client.ts",{"_index":1348,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{}}}],["client_id",{"_index":946,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["clientconfig",{"_index":691,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["clientconfig(value",{"_index":701,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["clientrect",{"_index":2256,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["clientrect.height",{"_index":2496,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["clientrect.width",{"_index":2494,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["clipboard.directive",{"_index":1939,"title":{},"body":{"modules/SerUiModule.html":{}}}],["clipboard.directive.ts",{"_index":446,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"coverage.html":{}}}],["clipboard.directive.ts:10",{"_index":454,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["clipboard.directive.ts:12",{"_index":458,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["clipboard.directive.ts:9",{"_index":452,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["closed",{"_index":787,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["cluster",{"_index":1125,"title":{},"body":{"classes/LeafletMap.html":{}}}],["cluster_serfiltermodule",{"_index":1843,"title":{},"body":{"modules/SerFilterModule.html":{},"overview.html":{}}}],["cluster_serfiltermodule_declarations",{"_index":1845,"title":{},"body":{"modules/SerFilterModule.html":{},"overview.html":{}}}],["cluster_serfiltermodule_exports",{"_index":1844,"title":{},"body":{"modules/SerFilterModule.html":{},"overview.html":{}}}],["cluster_serformmodule",{"_index":1897,"title":{},"body":{"modules/SerFormModule.html":{},"overview.html":{}}}],["cluster_serformmodule_declarations",{"_index":1899,"title":{},"body":{"modules/SerFormModule.html":{}}}],["cluster_serformmodule_exports",{"_index":1898,"title":{},"body":{"modules/SerFormModule.html":{},"overview.html":{}}}],["cluster_serselectmodule",{"_index":1915,"title":{},"body":{"modules/SerSelectModule.html":{},"overview.html":{}}}],["cluster_serselectmodule_declarations",{"_index":1917,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["cluster_serselectmodule_exports",{"_index":1919,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["cluster_serselectmodule_imports",{"_index":1918,"title":{},"body":{"modules/SerSelectModule.html":{},"overview.html":{}}}],["cluster_serselectmodule_providers",{"_index":1916,"title":{},"body":{"modules/SerSelectModule.html":{},"overview.html":{}}}],["cluster_seruimodule",{"_index":1928,"title":{},"body":{"modules/SerUiModule.html":{},"overview.html":{}}}],["cluster_seruimodule_declarations",{"_index":1929,"title":{},"body":{"modules/SerUiModule.html":{}}}],["cluster_seruimodule_exports",{"_index":1930,"title":{},"body":{"modules/SerUiModule.html":{}}}],["cluster_virtualscrollermodule",{"_index":2013,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["cluster_virtualscrollermodule_declarations",{"_index":2015,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["cluster_virtualscrollermodule_exports",{"_index":2014,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["clustermarkers",{"_index":1072,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["code",{"_index":2349,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["codeinputs",{"_index":1373,"title":{},"body":{"components/PinInputComponent.html":{}}}],["codelength",{"_index":1389,"title":{},"body":{"components/PinInputComponent.html":{}}}],["coincide",{"_index":503,"title":{},"body":{"classes/CustomValidators.html":{}}}],["col",{"_index":1478,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["col.component",{"_index":1910,"title":{},"body":{"modules/SerFormModule.html":{}}}],["col.component.ts",{"_index":2582,"title":{},"body":{"coverage.html":{}}}],["col/address",{"_index":1909,"title":{},"body":{"modules/SerFormModule.html":{},"coverage.html":{}}}],["color",{"_index":272,"title":{"classes/Color.html":{}},"body":{"classes/Color.html":{},"injectables/PrefersColorSchemeService.html":{},"coverage.html":{}}}],["colors",{"_index":323,"title":{},"body":{"classes/Color.html":{}}}],["commonmodule",{"_index":1850,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["compareitems",{"_index":2131,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["comparison",{"_index":570,"title":{},"body":{"classes/CustomValidators.html":{}}}],["compat",{"_index":2672,"title":{},"body":{"dependencies.html":{}}}],["completa",{"_index":867,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["component",{"_index":1356,"title":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["component_template",{"_index":1475,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["components",{"_index":1358,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["con",{"_index":222,"title":{},"body":{"interfaces/CenterPoint.html":{},"classes/CustomValidators.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{}}}],["conditions",{"_index":1796,"title":{},"body":{"directives/SerErrorsDirective.html":{},"license.html":{}}}],["config",{"_index":76,"title":{},"body":{"injectables/AwsService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["config(value",{"_index":744,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["config/facebook",{"_index":738,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["config/google",{"_index":963,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["configprovider",{"_index":32,"title":{},"body":{"modules/AwsModule.html":{}}}],["connected",{"_index":761,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["connection",{"_index":2748,"title":{},"body":{"license.html":{}}}],["console.log(&#39;current",{"_index":1302,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log(&#39;error",{"_index":1305,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log('changed",{"_index":1601,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["console.log('current",{"_index":1315,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log('error",{"_index":1316,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log('facebook",{"_index":750,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["console.log('google",{"_index":971,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["console.warn('facebook",{"_index":785,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["const",{"_index":347,"title":{},"body":{"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"injectables/DataService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{}}}],["constructor",{"_index":73,"title":{},"body":{"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["constructor(@inject(aws_config",{"_index":119,"title":{},"body":{"injectables/AwsService.html":{}}}],["constructor(@inject(forwardref",{"_index":1760,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["constructor(@inject(ng_fsdk_config",{"_index":746,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["constructor(@inject(ng_gapi_config",{"_index":969,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["constructor(_elementref",{"_index":829,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["constructor(_form",{"_index":1790,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["constructor(_ngcontrol",{"_index":1682,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["constructor(_sererrors",{"_index":1728,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["constructor(clientconfig",{"_index":692,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["constructor(config",{"_index":74,"title":{},"body":{"injectables/AwsService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["constructor(cookiesservice",{"_index":385,"title":{},"body":{"injectables/CookiesService.html":{}}}],["constructor(el",{"_index":203,"title":{},"body":{"directives/BgImageDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["constructor(hue",{"_index":289,"title":{},"body":{"classes/Color.html":{}}}],["constructor(options",{"_index":1055,"title":{},"body":{"classes/LeafletMap.html":{}}}],["constructor(preferscolorschemeservice",{"_index":1516,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["constructor(private",{"_index":65,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"injectables/ExternalScriptService.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["constructor(protected",{"_index":2232,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["constructor(public",{"_index":862,"title":{},"body":{"injectables/FullscreenService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{}}}],["constructor(template",{"_index":1663,"title":{},"body":{"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{}}}],["consultado",{"_index":267,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["consultar",{"_index":237,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["container",{"_index":1065,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["containerelementref",{"_index":2165,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["containeroffset",{"_index":2427,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["contener",{"_index":1353,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["content",{"_index":2053,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["content.children[0",{"_index":2491,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["contentchild",{"_index":1878,"title":{},"body":{"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{}}}],["contentchild('container",{"_index":2164,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["contentchild('header",{"_index":2162,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["contentchild(sercontroldirective",{"_index":1875,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["contentelementref",{"_index":2159,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["context",{"_index":2610,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":2744,"title":{},"body":{"license.html":{}}}],["contraseña",{"_index":1615,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["contraseñas",{"_index":1643,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["contributors",{"_index":2830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":153,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorDetails.html":{},"directives/SerErrorsDirective.html":{}}}],["control's",{"_index":488,"title":{},"body":{"classes/CustomValidators.html":{}}}],["control.directive",{"_index":1880,"title":{},"body":{"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{}}}],["control.directive.ts",{"_index":1672,"title":{},"body":{"directives/SerControlDirective.html":{},"coverage.html":{}}}],["control.directive.ts:11",{"_index":1692,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:12",{"_index":1693,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:13",{"_index":1691,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:14",{"_index":1697,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:15",{"_index":1695,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:16",{"_index":1696,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:17",{"_index":1694,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:18",{"_index":1683,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:23",{"_index":1686,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:28",{"_index":1685,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:32",{"_index":1690,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:41",{"_index":1688,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:49",{"_index":1687,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.errors",{"_index":1833,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["controlname",{"_index":1820,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["controlpropsstate",{"_index":1827,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["controlvalueaccessor",{"_index":1365,"title":{},"body":{"components/PinInputComponent.html":{}}}],["convertir",{"_index":1978,"title":{},"body":{"interfaces/String.html":{}}}],["cookie",{"_index":390,"title":{},"body":{"injectables/CookiesService.html":{},"modules/FacebookSDKModule.html":{}}}],["cookie.substr(0",{"_index":436,"title":{},"body":{"injectables/CookiesService.html":{}}}],["cookies",{"_index":399,"title":{},"body":{"injectables/CookiesService.html":{}}}],["cookiesservice",{"_index":383,"title":{"injectables/CookiesService.html":{}},"body":{"injectables/CookiesService.html":{},"coverage.html":{}}}],["copied",{"_index":449,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["copies",{"_index":2713,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1938,"title":{},"body":{"modules/SerUiModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["copyright",{"_index":2684,"title":{},"body":{"license.html":{}}}],["copytoclipboard",{"_index":447,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["copytoclipboard]'},{'name",{"_index":1490,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["copytoclipboarddirective",{"_index":444,"title":{"directives/CopyToClipboardDirective.html":{}},"body":{"directives/CopyToClipboardDirective.html":{},"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["correctamente",{"_index":796,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["countitemsperwrapgroup",{"_index":2474,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["coverage",{"_index":2566,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":878,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["create",{"_index":1124,"title":{},"body":{"classes/LeafletMap.html":{}}}],["credential_id",{"_index":1349,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["ctrl",{"_index":2822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":354,"title":{},"body":{"classes/Color.html":{}}}],["ctx.beginpath",{"_index":357,"title":{},"body":{"classes/Color.html":{}}}],["ctx.fill",{"_index":363,"title":{},"body":{"classes/Color.html":{}}}],["ctx.fillstyle",{"_index":359,"title":{},"body":{"classes/Color.html":{}}}],["ctx.filltext(initials.touppercase",{"_index":378,"title":{},"body":{"classes/Color.html":{}}}],["ctx.font",{"_index":364,"title":{},"body":{"classes/Color.html":{}}}],["ctx.rect(0",{"_index":358,"title":{},"body":{"classes/Color.html":{}}}],["ctx.textalign",{"_index":370,"title":{},"body":{"classes/Color.html":{}}}],["ctx.textbaseline",{"_index":372,"title":{},"body":{"classes/Color.html":{}}}],["currenttween",{"_index":2319,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["customvalidators",{"_index":482,"title":{"classes/CustomValidators.html":{}},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["cutprecision",{"_index":1275,"title":{},"body":{"injectables/MapService.html":{}}}],["cutprecision(obj",{"_index":1284,"title":{},"body":{"injectables/MapService.html":{}}}],["código",{"_index":1625,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["damages",{"_index":2740,"title":{},"body":{"license.html":{}}}],["dark",{"_index":1527,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["data",{"_index":585,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["data.filter((item",{"_index":589,"title":{},"body":{"injectables/DataService.html":{}}}],["data.scrollposition",{"_index":2220,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dataservice",{"_index":573,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":416,"title":{},"body":{"injectables/CookiesService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["db",{"_index":502,"title":{},"body":{"classes/CustomValidators.html":{}}}],["de",{"_index":124,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["deal",{"_index":2701,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2749,"title":{},"body":{"license.html":{}}}],["debe",{"_index":519,"title":{},"body":{"classes/CustomValidators.html":{}}}],["deberia",{"_index":520,"title":{},"body":{"classes/CustomValidators.html":{}}}],["debounce(func",{"_index":2309,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["declarations",{"_index":55,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["declare",{"_index":1977,"title":{},"body":{"interfaces/String.html":{}}}],["decorators",{"_index":1427,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["deep",{"_index":2061,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["default",{"_index":207,"title":{},"body":{"directives/BgImageDirective.html":{},"classes/Color.html":{},"directives/CopyToClipboardDirective.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["defaultchildheight",{"_index":2498,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["defaultchildwidth",{"_index":2497,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["defaultoptions",{"_index":1647,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"modules/VirtualScrollerModule.html":{}}}],["defaultoptions?.letterslowercase",{"_index":1653,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["defaultoptions?.lettersuppercase",{"_index":1655,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["defaultoptions?.numbers",{"_index":1651,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["defaultoptions?.specialchars",{"_index":1656,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["defaultopts",{"_index":1955,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["defaultopts.duration",{"_index":1969,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["defaultopts.iconname",{"_index":1961,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["defaultscrolllengthperwrapgroup",{"_index":2523,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["defined",{"_index":27,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["del",{"_index":81,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{},"injectables/FullscreenService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["delay",{"_index":146,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["delay(1000",{"_index":155,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["delete",{"_index":400,"title":{},"body":{"injectables/CookiesService.html":{},"miscellaneous/variables.html":{}}}],["delete(name",{"_index":404,"title":{},"body":{"injectables/CookiesService.html":{}}}],["deleteall",{"_index":401,"title":{},"body":{"injectables/CookiesService.html":{}}}],["dependencies",{"_index":1841,"title":{"dependencies.html":{}},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["deprecation",{"_index":1606,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["descarga",{"_index":612,"title":{},"body":{"injectables/DownloadService.html":{}}}],["description",{"_index":40,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["desea",{"_index":1572,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["deshabilita",{"_index":869,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["developed",{"_index":2681,"title":{},"body":{"index.html":{}}}],["dicho",{"_index":501,"title":{},"body":{"classes/CustomValidators.html":{}}}],["different",{"_index":2336,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions",{"_index":2199,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.itemcount",{"_index":2535,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.itemsperwrapgroup",{"_index":2526,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.maxscrollposition",{"_index":2540,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.scrolllength",{"_index":2543,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.viewportlength",{"_index":2539,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.wrapgroupsperpage",{"_index":2202,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions[this._childscrolldim",{"_index":2203,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["directive",{"_index":167,"title":{"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{},"coverage.html":{}}}],["directives",{"_index":200,"title":{},"body":{"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{},"overview.html":{}}}],["dirty",{"_index":1674,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["disable",{"_index":873,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["disabled",{"_index":1675,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["disabledkey",{"_index":629,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["dismiss",{"_index":1193,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["display",{"_index":2042,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["disposeresizehandler",{"_index":2323,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["disposescrollhandler",{"_index":2322,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["distance",{"_index":1314,"title":{},"body":{"injectables/MapService.html":{}}}],["distancepoints",{"_index":1276,"title":{},"body":{"injectables/MapService.html":{}}}],["distancepoints(options",{"_index":1288,"title":{},"body":{"injectables/MapService.html":{}}}],["distancia",{"_index":1290,"title":{},"body":{"injectables/MapService.html":{}}}],["distribute",{"_index":2709,"title":{},"body":{"license.html":{}}}],["docheck",{"_index":1720,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["document",{"_index":897,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["document.addeventlistener('fullscreenchange",{"_index":911,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["document.addeventlistener('mozfullscreenchange",{"_index":915,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["document.addeventlistener('msfullscreenchange",{"_index":914,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["document.addeventlistener('webkitfullscreenchange",{"_index":913,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["document.body",{"_index":2450,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["document.body.append(_html",{"_index":1963,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["document.body.appendchild(selbox",{"_index":476,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["document.body.appendchild(this.downloadelement",{"_index":611,"title":{},"body":{"injectables/DownloadService.html":{}}}],["document.body.removechild(_html",{"_index":1967,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["document.body.removechild(selbox",{"_index":480,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["document.body.removechild(this.downloadelement",{"_index":622,"title":{},"body":{"injectables/DownloadService.html":{}}}],["document.cookie",{"_index":433,"title":{},"body":{"injectables/CookiesService.html":{}}}],["document.cookie.split",{"_index":435,"title":{},"body":{"injectables/CookiesService.html":{}}}],["document.createelement('a",{"_index":608,"title":{},"body":{"injectables/DownloadService.html":{}}}],["document.createelement('canvas",{"_index":350,"title":{},"body":{"classes/Color.html":{}}}],["document.createelement('div",{"_index":1952,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["document.createelement('script",{"_index":682,"title":{},"body":{"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["document.createelement('textarea",{"_index":466,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["document.documentelement",{"_index":917,"title":{},"body":{"injectables/FullscreenService.html":{},"modules/VirtualScrollerModule.html":{}}}],["document.execcommand('copy",{"_index":479,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["document.getelementbyid(id",{"_index":680,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["document.getelementsbytagname('body')[0",{"_index":1583,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["document.getelementsbytagname('head')[0].appendchild(node",{"_index":810,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["document.getelementsbytagname('script')[0",{"_index":679,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["document.scrollingelement",{"_index":2449,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["documentation",{"_index":2567,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":1360,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["domain",{"_index":406,"title":{},"body":{"injectables/CookiesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dominio",{"_index":408,"title":{},"body":{"injectables/CookiesService.html":{}}}],["don't",{"_index":1240,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["done",{"_index":1957,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["dos",{"_index":1293,"title":{},"body":{"injectables/MapService.html":{}}}],["down",{"_index":2811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadelement",{"_index":602,"title":{},"body":{"injectables/DownloadService.html":{}}}],["downloadservice",{"_index":600,"title":{"injectables/DownloadService.html":{}},"body":{"injectables/DownloadService.html":{},"coverage.html":{}}}],["dropdownsettings",{"_index":623,"title":{"interfaces/DropdownSettings.html":{}},"body":{"interfaces/DropdownSettings.html":{},"coverage.html":{}}}],["duplicatepathfield",{"_index":530,"title":{},"body":{"classes/CustomValidators.html":{}}}],["duration",{"_index":1145,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["dynamic",{"_index":572,"title":{},"body":{"classes/CustomValidators.html":{},"dependencies.html":{}}}],["d{5}))?/g",{"_index":2773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d{8})|(\\d{10})|(\\d{11})|(\\d{6",{"_index":2772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e",{"_index":895,"title":{},"body":{"injectables/FullscreenService.html":{},"components/PinInputComponent.html":{}}}],["e.data",{"_index":1464,"title":{},"body":{"components/PinInputComponent.html":{}}}],["e.preventdefault",{"_index":1468,"title":{},"body":{"components/PinInputComponent.html":{}}}],["e.stoppropagation",{"_index":1469,"title":{},"body":{"components/PinInputComponent.html":{}}}],["e.target",{"_index":1463,"title":{},"body":{"components/PinInputComponent.html":{}}}],["each",{"_index":2373,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["easing(tween.easing.quadratic.out",{"_index":2217,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["edge",{"_index":908,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["ejem",{"_index":549,"title":{},"body":{"classes/CustomValidators.html":{},"injectables/ExternalScriptService.html":{}}}],["el",{"_index":44,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/ToggleClassDirective.html":{}}}],["elem",{"_index":916,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["elem.mozrequestfullscreen",{"_index":922,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["elem.msrequestfullscreen",{"_index":920,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["elem.requestfullscreen",{"_index":918,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["elem.webkitrequestfullscreen",{"_index":919,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["element",{"_index":854,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{}}}],["element'},{'name",{"_index":1483,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["element.component",{"_index":1902,"title":{},"body":{"modules/SerFormModule.html":{}}}],["element.component.ts",{"_index":1857,"title":{},"body":{"components/SerFormElementComponent.html":{},"coverage.html":{}}}],["element.component.ts:13",{"_index":1876,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:14",{"_index":1877,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:17",{"_index":1870,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:22",{"_index":1871,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:27",{"_index":1868,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:32",{"_index":1869,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:37",{"_index":1874,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:42",{"_index":1872,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:47",{"_index":1873,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.getboundingclientrect",{"_index":2257,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["element/ser",{"_index":1671,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"coverage.html":{}}}],["elementclientrect",{"_index":2466,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["elementclientrect.left",{"_index":2470,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["elementclientrect.top",{"_index":2472,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["elementref",{"_index":170,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["elimina",{"_index":395,"title":{},"body":{"injectables/CookiesService.html":{}}}],["elm",{"_index":1004,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["elm._basescrollheight",{"_index":1011,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["elm.scrollheight",{"_index":1012,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["elm.value",{"_index":1010,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["email",{"_index":779,"title":{},"body":{"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"classes/GoogleClientConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emite",{"_index":798,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["emulando",{"_index":616,"title":{},"body":{"injectables/DownloadService.html":{}}}],["en",{"_index":83,"title":{},"body":{"injectables/AwsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/FullscreenService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/String.html":{}}}],["enable",{"_index":874,"title":{},"body":{"injectables/FullscreenService.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["enablecheckall",{"_index":630,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["enabledark",{"_index":1528,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["enablefilterselectall",{"_index":631,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["enablelight",{"_index":1529,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["enablesearchfilter",{"_index":632,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["enableunequalchildrensizes",{"_index":2089,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["enableunequalchildrensizes(value",{"_index":2091,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["encapsulation",{"_index":1858,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["end",{"_index":2530,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["endchanged",{"_index":2403,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["endindex",{"_index":1035,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["endindexwithbuffer",{"_index":1036,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["endindexwithinwrapgroup",{"_index":2527,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["endpress",{"_index":1194,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["enough",{"_index":2343,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["enter",{"_index":2814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrar",{"_index":890,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["entre",{"_index":1292,"title":{},"body":{"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["eqpos",{"_index":437,"title":{},"body":{"injectables/CookiesService.html":{}}}],["err",{"_index":983,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["error",{"_index":1325,"title":{},"body":{"injectables/MapService.html":{}}}],["error(msg",{"_index":1304,"title":{},"body":{"injectables/MapService.html":{}}}],["error.directive",{"_index":1903,"title":{},"body":{"modules/SerFormModule.html":{}}}],["error.directive.ts",{"_index":1719,"title":{},"body":{"directives/SerErrorDirective.html":{},"coverage.html":{}}}],["error.directive.ts:20",{"_index":1731,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:24",{"_index":1732,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:29",{"_index":1733,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:31",{"_index":1740,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:32",{"_index":1739,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:33",{"_index":1741,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:34",{"_index":1738,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:35",{"_index":1729,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:39",{"_index":1736,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:58",{"_index":1734,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:64",{"_index":1735,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["errordetails",{"_index":651,"title":{"interfaces/ErrorDetails.html":{}},"body":{"interfaces/ErrorDetails.html":{},"directives/SerErrorsDirective.html":{},"coverage.html":{}}}],["errorname",{"_index":655,"title":{},"body":{"interfaces/ErrorDetails.html":{},"directives/SerErrorsDirective.html":{}}}],["errornames",{"_index":1723,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["erroroptions",{"_index":656,"title":{},"body":{"interfaces/ErrorDetails.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"miscellaneous/typealiases.html":{}}}],["errors",{"_index":1751,"title":{},"body":{"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{}}}],["errors.control.haserror(errors.errorname",{"_index":1775,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["errors.directive",{"_index":1752,"title":{},"body":{"directives/SerErrorDirective.html":{},"modules/SerFormModule.html":{}}}],["errors.directive.ts",{"_index":1781,"title":{},"body":{"directives/SerErrorsDirective.html":{},"coverage.html":{}}}],["errors.directive.ts:16",{"_index":1794,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:18",{"_index":1810,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:19",{"_index":1808,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:20",{"_index":1792,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:24",{"_index":1812,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:29",{"_index":1814,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:33",{"_index":1802,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:37",{"_index":1804,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:41",{"_index":1800,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:46",{"_index":1797,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:62",{"_index":1798,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:78",{"_index":1806,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:82",{"_index":1805,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:89",{"_index":1807,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.ts",{"_index":654,"title":{},"body":{"interfaces/ErrorDetails.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["errors/ser",{"_index":653,"title":{},"body":{"interfaces/ErrorDetails.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFormModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["es",{"_index":106,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{}}}],["escape",{"_index":2813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escapetoclose",{"_index":633,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["especiales",{"_index":1622,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["esquema",{"_index":1518,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["estado",{"_index":871,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["etiqueta",{"_index":676,"title":{},"body":{"injectables/ExternalScriptService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["ev",{"_index":1598,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{},"directives/WhenScrolledDirective.html":{}}}],["ev.matches",{"_index":1600,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["ev.target.clientheight",{"_index":2558,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["ev.target.scrollheight",{"_index":2559,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["event",{"_index":456,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"injectables/FullscreenService.html":{},"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{},"license.html":{}}}],["event.button",{"_index":1243,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["event.clientx",{"_index":1245,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["event.clienty",{"_index":1247,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["event.preventdefault",{"_index":1253,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["event.touches[0].clientx",{"_index":1248,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["event.touches[0].clienty",{"_index":1249,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["eventemitter",{"_index":453,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/GoogleSDKService.html":{},"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["evento",{"_index":799,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["example",{"_index":46,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["excede",{"_index":542,"title":{},"body":{"classes/CustomValidators.html":{}}}],["except",{"_index":2372,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["excluir",{"_index":509,"title":{},"body":{"classes/CustomValidators.html":{}}}],["executerefreshoutsideangularzone",{"_index":2086,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["existe",{"_index":500,"title":{},"body":{"classes/CustomValidators.html":{}}}],["expires",{"_index":415,"title":{},"body":{"injectables/CookiesService.html":{}}}],["expires=thu",{"_index":438,"title":{},"body":{"injectables/CookiesService.html":{}}}],["export",{"_index":12,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{}}}],["exportas",{"_index":1817,"title":{},"body":{"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["exports",{"_index":1842,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["express",{"_index":2727,"title":{},"body":{"license.html":{}}}],["ext",{"_index":563,"title":{},"body":{"classes/CustomValidators.html":{}}}],["extends",{"_index":846,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"interfaces/IViewport.html":{}}}],["extensiones",{"_index":564,"title":{},"body":{"classes/CustomValidators.html":{}}}],["extensión",{"_index":557,"title":{},"body":{"classes/CustomValidators.html":{}}}],["externalscriptservice",{"_index":657,"title":{"injectables/ExternalScriptService.html":{}},"body":{"injectables/ExternalScriptService.html":{},"coverage.html":{}}}],["externos",{"_index":672,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["facebook",{"_index":674,"title":{},"body":{"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{}}}],["facebook.initparams",{"_index":699,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{}}}],["facebook_client_id",{"_index":716,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["facebookprofile",{"_index":771,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["facebookprofile.picture",{"_index":782,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["facebooksdkconfig",{"_index":687,"title":{"classes/FacebookSDKConfig.html":{}},"body":{"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"coverage.html":{}}}],["facebooksdkconfig(config",{"_index":748,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["facebooksdkmodule",{"_index":703,"title":{"modules/FacebookSDKModule.html":{}},"body":{"modules/FacebookSDKModule.html":{},"modules.html":{}}}],["facebooksdkmodule.forroot",{"_index":714,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["facebooksdkservice",{"_index":709,"title":{"injectables/FacebookSDKService.html":{}},"body":{"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"coverage.html":{}}}],["facebookuserprofile",{"_index":736,"title":{"interfaces/FacebookUserProfile.html":{}},"body":{"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"coverage.html":{}}}],["false",{"_index":593,"title":{},"body":{"injectables/DataService.html":{},"injectables/FacebookSDKService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["fb.api('/me",{"_index":762,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fb.api('/me/picture",{"_index":766,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fb.appevents.logpageview",{"_index":813,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fb.init(this.config.clientconfig",{"_index":812,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fb.login((response",{"_index":759,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["field",{"_index":133,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["fields",{"_index":763,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["file/read",{"_index":173,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["files",{"_index":2700,"title":{},"body":{"license.html":{}}}],["filter",{"_index":579,"title":{},"body":{"injectables/DataService.html":{}}}],["filter'},{'name",{"_index":1481,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["filter((obj",{"_index":1766,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["filter(boolean",{"_index":1765,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["filter.component",{"_index":1856,"title":{},"body":{"modules/SerFilterModule.html":{}}}],["filter.component.ts",{"_index":2584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.interface.ts",{"_index":819,"title":{},"body":{"interfaces/FilterSettings.html":{},"coverage.html":{}}}],["filter.module",{"_index":1912,"title":{},"body":{"modules/SerFormModule.html":{}}}],["filter.module.ts",{"_index":1848,"title":{},"body":{"modules/SerFilterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter/ser",{"_index":1911,"title":{},"body":{"modules/SerFormModule.html":{}}}],["filterdata",{"_index":577,"title":{},"body":{"injectables/DataService.html":{}}}],["filterdata(data",{"_index":583,"title":{},"body":{"injectables/DataService.html":{}}}],["filteredlist",{"_index":588,"title":{},"body":{"injectables/DataService.html":{}}}],["filterselectalltext",{"_index":634,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["filtersettings",{"_index":817,"title":{"interfaces/FilterSettings.html":{}},"body":{"interfaces/FilterSettings.html":{},"coverage.html":{}}}],["filterunselectalltext",{"_index":635,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["finish",{"_index":1934,"title":{},"body":{"modules/SerUiModule.html":{}}}],["finishtyping",{"_index":824,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["finishtyping]'},{'name",{"_index":1491,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["finishtypingdirective",{"_index":820,"title":{"directives/FinishTypingDirective.html":{}},"body":{"directives/FinishTypingDirective.html":{},"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firefox",{"_index":910,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["first_name",{"_index":775,"title":{},"body":{"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{}}}],["first_name,last_name,email",{"_index":764,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["firstoffset",{"_index":2485,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["firstrun",{"_index":2171,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["fitmarkersbounds",{"_index":1051,"title":{},"body":{"classes/LeafletMap.html":{}}}],["fitmarkersbounds(padding",{"_index":1088,"title":{},"body":{"classes/LeafletMap.html":{}}}],["fitness",{"_index":2732,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":468,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["fjs",{"_index":678,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["fjs.parentnode.insertbefore(js",{"_index":686,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["flex",{"_index":2069,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["flyto",{"_index":1090,"title":{},"body":{"classes/LeafletMap.html":{}}}],["fn",{"_index":1416,"title":{},"body":{"components/PinInputComponent.html":{}}}],["focus",{"_index":1676,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["following",{"_index":2717,"title":{},"body":{"license.html":{}}}],["force",{"_index":2328,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["forin",{"_index":1133,"title":{},"body":{"classes/LeafletMap.html":{}}}],["form",{"_index":487,"title":{},"body":{"classes/CustomValidators.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"coverage.html":{}}}],["form.module.ts",{"_index":1901,"title":{},"body":{"modules/SerFormModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":140,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["formelement",{"_index":1860,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["formgroup",{"_index":1987,"title":{},"body":{"interfaces/String.html":{}}}],["formgroup.prototype.setvalueanderrors",{"_index":1991,"title":{},"body":{"interfaces/String.html":{}}}],["formgroupdirective",{"_index":1791,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["formsmodule",{"_index":1855,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{}}}],["forroot",{"_index":24,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["forroot(configprovider",{"_index":25,"title":{},"body":{"modules/AwsModule.html":{}}}],["forroot(fsdkconfigprovider",{"_index":706,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["forroot(gapiconfigprovider",{"_index":939,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["forward",{"_index":2383,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["forwardref",{"_index":1368,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{}}}],["found",{"_index":592,"title":{},"body":{"injectables/DataService.html":{}}}],["free",{"_index":2694,"title":{},"body":{"license.html":{}}}],["fromintersectionobserver",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["frommutationobserver",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["fsdkconfigprovider",{"_index":708,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["fsdkurl",{"_index":723,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fsdoc",{"_index":896,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.exitfullscreen",{"_index":923,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.fullscreenelement",{"_index":898,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.mozcancelfullscreen",{"_index":926,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.mozfullscreenelement",{"_index":909,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.msexitfullscreen",{"_index":925,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.msfullscreenelement",{"_index":906,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.webkitexitfullscreen",{"_index":924,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.webkitfullscreenelement",{"_index":901,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdocument",{"_index":843,"title":{"interfaces/FsDocument.html":{}},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"coverage.html":{}}}],["fsdocumentelement",{"_index":855,"title":{"interfaces/FsDocumentElement.html":{}},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"coverage.html":{}}}],["fullscreen",{"_index":880,"title":{},"body":{"injectables/FullscreenService.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["fullscreenservice",{"_index":860,"title":{"injectables/FullscreenService.html":{}},"body":{"injectables/FullscreenService.html":{},"coverage.html":{}}}],["función",{"_index":669,"title":{},"body":{"injectables/ExternalScriptService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/String.html":{}}}],["function",{"_index":150,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/Color.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["furnished",{"_index":2716,"title":{},"body":{"license.html":{}}}],["gambadeveloper@sersoluciones.com",{"_index":2690,"title":{},"body":{"license.html":{}}}],["gapi",{"_index":673,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["gapi.auth2.clientconfig",{"_index":934,"title":{},"body":{"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"interfaces/GoogleUserProfile.html":{}}}],["gapi.auth2.googleauth",{"_index":955,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gapi.auth2.googleuser",{"_index":973,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gapi.auth2.init(this.config.clientconfig).then((auth",{"_index":988,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gapi.load('auth2",{"_index":987,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gapiconfigprovider",{"_index":941,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["gapiurl",{"_index":950,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gb",{"_index":548,"title":{},"body":{"classes/CustomValidators.html":{}}}],["generar",{"_index":1624,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["generated",{"_index":324,"title":{},"body":{"classes/Color.html":{}}}],["generatedefaultimage",{"_index":2619,"title":{},"body":{"coverage.html":{}}}],["generatedefaultimage(name",{"_index":341,"title":{},"body":{"classes/Color.html":{}}}],["generatepassword",{"_index":2636,"title":{},"body":{"coverage.html":{}}}],["generatepassword(options",{"_index":1646,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["generatevalue",{"_index":1377,"title":{},"body":{"components/PinInputComponent.html":{}}}],["geolocation",{"_index":1318,"title":{},"body":{"injectables/MapService.html":{}}}],["get(name",{"_index":410,"title":{},"body":{"injectables/CookiesService.html":{}}}],["get(url",{"_index":604,"title":{},"body":{"injectables/DownloadService.html":{}}}],["getall",{"_index":402,"title":{},"body":{"injectables/CookiesService.html":{}}}],["getawsdata",{"_index":91,"title":{},"body":{"injectables/AwsService.html":{}}}],["getclientconfig",{"_index":695,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["getcomputedstyle(element",{"_index":2258,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["getconfig",{"_index":732,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["getcurrentposition",{"_index":1277,"title":{},"body":{"injectables/MapService.html":{}}}],["getelementsize(element",{"_index":2255,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["getelementsoffset",{"_index":2462,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["geterror",{"_index":1786,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["geterror(name",{"_index":1799,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["geterrors",{"_index":1811,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["getfiletype",{"_index":2578,"title":{},"body":{"coverage.html":{}}}],["getgoogleauth",{"_index":959,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gethaserrors",{"_index":1813,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["getisenabled",{"_index":885,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["getobjectbyvalue",{"_index":2615,"title":{},"body":{"coverage.html":{}}}],["getobjindexbyvalue",{"_index":2616,"title":{},"body":{"coverage.html":{}}}],["getopeniddata",{"_index":251,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["getrandomint",{"_index":2637,"title":{},"body":{"coverage.html":{}}}],["getrandomint(min",{"_index":1641,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["gets3bgurl",{"_index":70,"title":{},"body":{"injectables/AwsService.html":{}}}],["gets3bgurl(key",{"_index":77,"title":{},"body":{"injectables/AwsService.html":{}}}],["gets3url",{"_index":71,"title":{},"body":{"injectables/AwsService.html":{}}}],["gets3url(key",{"_index":88,"title":{},"body":{"injectables/AwsService.html":{}}}],["getscheme",{"_index":1546,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["getschemedarkclassname",{"_index":1554,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["getschemelightclassname",{"_index":1550,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["getscrollelement",{"_index":2447,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["getscrollheight",{"_index":998,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["getscrollheight(elm",{"_index":1002,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["getstyles",{"_index":2629,"title":{},"body":{"coverage.html":{}}}],["getting",{"_index":1306,"title":{"index.html":{},"license.html":{}},"body":{"injectables/MapService.html":{}}}],["ghpages",{"_index":2660,"title":{},"body":{"dependencies.html":{}}}],["gmt",{"_index":443,"title":{},"body":{"injectables/CookiesService.html":{}}}],["google",{"_index":943,"title":{},"body":{"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{}}}],["google_client_id",{"_index":947,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["googleauth",{"_index":951,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["googleauth(value",{"_index":968,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["googleclientconfig",{"_index":930,"title":{"classes/GoogleClientConfig.html":{}},"body":{"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"coverage.html":{}}}],["googleprofile",{"_index":975,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["googlesdkconfig",{"_index":935,"title":{"classes/GoogleSDKConfig.html":{}},"body":{"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"coverage.html":{}}}],["googlesdkconfig(config",{"_index":970,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["googlesdkmodule",{"_index":937,"title":{"modules/GoogleSDKModule.html":{}},"body":{"modules/GoogleSDKModule.html":{},"modules.html":{}}}],["googlesdkmodule.forroot",{"_index":945,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["googlesdkservice",{"_index":942,"title":{"injectables/GoogleSDKService.html":{}},"body":{"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"coverage.html":{}}}],["googleuserprofile",{"_index":932,"title":{"interfaces/GoogleUserProfile.html":{}},"body":{"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"coverage.html":{}}}],["gps",{"_index":1297,"title":{},"body":{"injectables/MapService.html":{}}}],["granted",{"_index":2693,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2750,"title":{},"body":{"modules.html":{}}}],["greaterorequalthan",{"_index":489,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["greaterorequalthan(basepathfield",{"_index":512,"title":{},"body":{"classes/CustomValidators.html":{}}}],["greaterthan",{"_index":490,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["greaterthan(basepathfield",{"_index":523,"title":{},"body":{"classes/CustomValidators.html":{}}}],["green",{"_index":1956,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["group",{"_index":1142,"title":{},"body":{"classes/LeafletMap.html":{}}}],["groupby",{"_index":636,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["groupwrapper",{"_index":1132,"title":{},"body":{"classes/LeafletMap.html":{}}}],["groupwrapper.push(this.markers[key",{"_index":1135,"title":{},"body":{"classes/LeafletMap.html":{}}}],["grow",{"_index":1913,"title":{},"body":{"modules/SerFormModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["growoninput",{"_index":997,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["growoninput]'},{'name",{"_index":1492,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["growoninputdirective",{"_index":993,"title":{"directives/GrowOnInputDirective.html":{}},"body":{"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["guid",{"_index":1626,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"coverage.html":{}}}],["habilita",{"_index":864,"title":{},"body":{"injectables/FullscreenService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["habilita/deshablita",{"_index":927,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["handlechanged",{"_index":2435,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["haserror",{"_index":1787,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["haserror(name",{"_index":1801,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["haserrors",{"_index":1789,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["haspdfviewer",{"_index":2630,"title":{},"body":{"coverage.html":{}}}],["haspermission",{"_index":230,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["haspermission(requiredpermission",{"_index":241,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["haspermissions",{"_index":231,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["haspermissions(requiredpermissions",{"_index":247,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["hasvalue",{"_index":100,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"classes/Color.html":{},"injectables/DataService.html":{},"classes/LeafletMap.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"coverage.html":{}}}],["hasvalue(data",{"_index":586,"title":{},"body":{"injectables/DataService.html":{}}}],["hasvalue(filter",{"_index":587,"title":{},"body":{"injectables/DataService.html":{}}}],["hasvalue(filteredlist",{"_index":591,"title":{},"body":{"injectables/DataService.html":{}}}],["hasvalue(groupwrapper",{"_index":1136,"title":{},"body":{"classes/LeafletMap.html":{}}}],["hasvalue(input.value",{"_index":1457,"title":{},"body":{"components/PinInputComponent.html":{}}}],["hasvalue(key",{"_index":128,"title":{},"body":{"injectables/AwsService.html":{}}}],["hasvalue(lastname",{"_index":375,"title":{},"body":{"classes/Color.html":{}}}],["hasvalue(obj",{"_index":1436,"title":{},"body":{"components/PinInputComponent.html":{}}}],["hasvalue(offset",{"_index":1157,"title":{},"body":{"classes/LeafletMap.html":{}}}],["hasvalue(this.image.file",{"_index":189,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["hasvalue(this.image.url",{"_index":197,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["hasvalue(this.markers",{"_index":1131,"title":{},"body":{"classes/LeafletMap.html":{}}}],["hasvalue(this.value[i",{"_index":1446,"title":{},"body":{"components/PinInputComponent.html":{}}}],["hasvalue(value",{"_index":157,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{}}}],["headerelementref",{"_index":2163,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["height",{"_index":2056,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["heightchange",{"_index":2281,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["hereby",{"_index":2692,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1727,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["hide",{"_index":1966,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["highlight.js",{"_index":2664,"title":{},"body":{"dependencies.html":{}}}],["highlightjs",{"_index":2669,"title":{},"body":{"dependencies.html":{}}}],["holders",{"_index":2737,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":2036,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["horizontal(value",{"_index":2136,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["host",{"_index":2033,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["host.horizontal",{"_index":2065,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["host.horizontal.selfscroll",{"_index":2048,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["host.vertical.selfscroll",{"_index":2051,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["hostbinding",{"_index":1231,"title":{},"body":{"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{}}}],["hostbinding('class.active",{"_index":1885,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.dirty",{"_index":1888,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.disabled",{"_index":1881,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.focus",{"_index":1883,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.invalid",{"_index":1892,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.longpress",{"_index":1235,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostbinding('class.pending",{"_index":1894,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.press",{"_index":1232,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostbinding('class.show",{"_index":1434,"title":{},"body":{"components/PinInputComponent.html":{}}}],["hostbinding('class.valid",{"_index":1890,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('hidden",{"_index":1759,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["hostbindings",{"_index":1201,"title":{},"body":{"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"components/SerFormElementComponent.html":{}}}],["hostlistener",{"_index":459,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"directives/SerControlDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["hostlistener('blur",{"_index":1701,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["hostlistener('click",{"_index":463,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["hostlistener('focus",{"_index":1698,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["hostlistener('mousedown",{"_index":1237,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlistener('mousemove",{"_index":1265,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlistener('mouseup",{"_index":1260,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlistener('touchend",{"_index":1261,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlistener('touchmove",{"_index":1266,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlistener('touchstart",{"_index":1238,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlisteners",{"_index":450,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/LongPressDirective.html":{},"directives/SerControlDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["hsl",{"_index":275,"title":{},"body":{"classes/Color.html":{}}}],["html",{"_index":1473,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["htmlcanvaselement",{"_index":349,"title":{},"body":{"classes/Color.html":{}}}],["htmldocument",{"_index":847,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["htmlelement",{"_index":856,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"modules/VirtualScrollerModule.html":{}}}],["htmlelement).classlist.toggle(this.toggleclass",{"_index":2001,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["htmlinputelement",{"_index":1424,"title":{},"body":{"components/PinInputComponent.html":{}}}],["htmlinputelement).value",{"_index":1448,"title":{},"body":{"components/PinInputComponent.html":{}}}],["htmlscriptelement",{"_index":683,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["http",{"_index":506,"title":{},"body":{"classes/CustomValidators.html":{}}}],["http.post(url",{"_index":159,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["httpclient",{"_index":137,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{}}}],["https://${this.awsdata.s3.bucket}.s3.amazonaws.com/${key",{"_index":129,"title":{},"body":{"injectables/AwsService.html":{}}}],["https://apis.google.com/js/api.js",{"_index":957,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["https://apis.google.com/js/platform.js?onload=googlesdkloaded",{"_index":663,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["https://connect.facebook.net/en_us/sdk.js",{"_index":730,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["hue",{"_index":276,"title":{},"body":{"classes/Color.html":{}}}],["iaws",{"_index":97,"title":{},"body":{"injectables/AwsService.html":{}}}],["iconclass",{"_index":1945,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["iconname",{"_index":1946,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["id",{"_index":134,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"classes/LeafletMap.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id/claims.service.ts",{"_index":227,"title":{},"body":{"injectables/ClaimsService.html":{},"coverage.html":{}}}],["id/claims.service.ts:16",{"_index":250,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/claims.service.ts:17",{"_index":252,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/claims.service.ts:20",{"_index":254,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/claims.service.ts:32",{"_index":242,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/claims.service.ts:44",{"_index":234,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/claims.service.ts:63",{"_index":248,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/iopen",{"_index":1347,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{}}}],["id_token",{"_index":933,"title":{},"body":{"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{}}}],["identifier",{"_index":2568,"title":{},"body":{"coverage.html":{}}}],["idimension",{"_index":2028,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["idimensions",{"_index":1020,"title":{"interfaces/IDimensions.html":{}},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["ie",{"_index":907,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["ie/edge",{"_index":921,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["ifacebook",{"_index":737,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["igoogle",{"_index":964,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["igual",{"_index":516,"title":{},"body":{"classes/CustomValidators.html":{}}}],["iguales",{"_index":536,"title":{},"body":{"classes/CustomValidators.html":{}}}],["image",{"_index":183,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["image.directive",{"_index":1937,"title":{},"body":{"modules/SerUiModule.html":{}}}],["image.directive.ts",{"_index":166,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{}}}],["image.directive.ts:19",{"_index":205,"title":{},"body":{"directives/BgImageDirective.html":{}}}],["image.directive.ts:20",{"_index":204,"title":{},"body":{"directives/BgImageDirective.html":{}}}],["image.directive.ts:24",{"_index":206,"title":{},"body":{"directives/BgImageDirective.html":{}}}],["image/jpeg",{"_index":343,"title":{},"body":{"classes/Color.html":{}}}],["image/png",{"_index":344,"title":{},"body":{"classes/Color.html":{}}}],["image\\/([a",{"_index":2800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image\\/(jpe?g|png|gif|bmp))/i",{"_index":185,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["imageregex",{"_index":184,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["imagery",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":181,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/FinishTypingDirective.html":{},"classes/GoogleClientConfig.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["implied",{"_index":2728,"title":{},"body":{"license.html":{}}}],["import",{"_index":35,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IViewport.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimensions.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["inarray",{"_index":257,"title":{},"body":{"injectables/ClaimsService.html":{},"coverage.html":{}}}],["included",{"_index":2721,"title":{},"body":{"license.html":{}}}],["including",{"_index":2703,"title":{},"body":{"license.html":{}}}],["incluyen",{"_index":1616,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AwsData.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexlengthchanged",{"_index":2168,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["indicado",{"_index":544,"title":{},"body":{"classes/CustomValidators.html":{}}}],["infinite",{"_index":2368,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["infinte",{"_index":2375,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{}}}],["información",{"_index":756,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["inicial",{"_index":1519,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["inicializar",{"_index":43,"title":{},"body":{"modules/AwsModule.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["inicio",{"_index":753,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["init",{"_index":1530,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["initial",{"_index":2071,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["initialized",{"_index":2365,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["initials",{"_index":374,"title":{},"body":{"classes/Color.html":{}}}],["initialview",{"_index":1067,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["initmarkercluster",{"_index":1052,"title":{},"body":{"classes/LeafletMap.html":{}}}],["inject",{"_index":98,"title":{},"body":{"injectables/AwsService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"directives/SerErrorDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["inject('virtual",{"_index":2236,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["inject(platform_id",{"_index":2234,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["injectable",{"_index":62,"title":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"injectables/SnackbarService.html":{}},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"injectables/SnackbarService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":99,"title":{},"body":{"injectables/AwsService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('aws.config",{"_index":103,"title":{},"body":{"injectables/AwsService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('facebook.config",{"_index":741,"title":{},"body":{"injectables/FacebookSDKService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('google.config",{"_index":965,"title":{},"body":{"injectables/GoogleSDKService.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":169,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["input'},{'name",{"_index":1479,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["input('bgimage",{"_index":182,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["input('copytoclipboard",{"_index":461,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["input('sererrors",{"_index":1819,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["input.component",{"_index":1905,"title":{},"body":{"modules/SerFormModule.html":{}}}],["input.component.html",{"_index":1372,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts",{"_index":1363,"title":{},"body":{"components/PinInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:107",{"_index":1412,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:142",{"_index":1407,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:160",{"_index":1415,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:163",{"_index":1404,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:165",{"_index":1418,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:168",{"_index":1413,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:170",{"_index":1420,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:19",{"_index":1429,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:20",{"_index":1397,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:22",{"_index":1425,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:24",{"_index":1394,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:25",{"_index":1396,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:26",{"_index":1395,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:28",{"_index":1423,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:29",{"_index":1432,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:30",{"_index":1431,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:31",{"_index":1430,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:33",{"_index":1422,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:39",{"_index":1402,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:44",{"_index":1401,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:55",{"_index":1399,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:67",{"_index":1400,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:86",{"_index":1409,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.directive",{"_index":1914,"title":{},"body":{"modules/SerFormModule.html":{}}}],["input.directive.ts",{"_index":995,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"coverage.html":{}}}],["input.directive.ts:10",{"_index":1001,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["input.directive.ts:14",{"_index":1003,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["input.directive.ts:21",{"_index":1006,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["input.directive.ts:34",{"_index":1005,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["inputchangedpromise",{"_index":825,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["inputs",{"_index":202,"title":{},"body":{"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["inputslist",{"_index":1374,"title":{},"body":{"components/PinInputComponent.html":{}}}],["insert",{"_index":664,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["insert(id",{"_index":666,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["insertar",{"_index":670,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["instanceof",{"_index":191,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["instancia",{"_index":879,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["interactuar",{"_index":966,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["interacturar",{"_index":742,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AwsData.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"interfaces/CenterPoint.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"interfaces/GoogleUserProfile.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"interfaces/SnackbarOpts.html":{},"interfaces/String.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{}},"body":{"interfaces/AwsData.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"interfaces/GoogleUserProfile.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["interface.ts",{"_index":845,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AwsData.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"interfaces/CenterPoint.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"interfaces/GoogleUserProfile.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"interfaces/SnackbarOpts.html":{},"interfaces/String.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"overview.html":{}}}],["invalid",{"_index":1677,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["invalidatecachedmeasurementatindex(index",{"_index":2180,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["invisiblepaddingelementref",{"_index":2161,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["iopen",{"_index":255,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["ipageinfo",{"_index":1033,"title":{"interfaces/IPageInfo.html":{}},"body":{"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["isangularuniversalssr",{"_index":2231,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["iscodehidden",{"_index":1390,"title":{},"body":{"components/PinInputComponent.html":{}}}],["isdisabled",{"_index":1375,"title":{},"body":{"components/PinInputComponent.html":{}}}],["isenabled",{"_index":876,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["isenabled(value",{"_index":893,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["isnan(arrayendindex",{"_index":2533,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["isnan(arraystartindex",{"_index":2532,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["isnan(data.scrollposition",{"_index":2219,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["isplatformserver",{"_index":2023,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["isplatformserver(platformid",{"_index":2239,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["issuperuser",{"_index":1355,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["isvalid",{"_index":1788,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["isvalid(name",{"_index":1803,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["it'd",{"_index":2355,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["item",{"_index":582,"title":{},"body":{"injectables/DataService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{}}}],["item.directive",{"_index":1922,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["item.directive.ts",{"_index":1662,"title":{},"body":{"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"coverage.html":{}}}],["item.directive.ts:10",{"_index":1670,"title":{},"body":{"directives/SDItemDirective.html":{}}}],["item.directive.ts:16",{"_index":1665,"title":{},"body":{"directives/SDBadgeDirective.html":{}}}],["item.directive.ts:17",{"_index":1666,"title":{},"body":{"directives/SDBadgeDirective.html":{}}}],["item.directive.ts:23",{"_index":1667,"title":{},"body":{"directives/SDBadgeItemDirective.html":{}}}],["item.directive.ts:24",{"_index":1668,"title":{},"body":{"directives/SDBadgeItemDirective.html":{}}}],["item.directive.ts:9",{"_index":1669,"title":{},"body":{"directives/SDItemDirective.html":{}}}],["item.grptitle",{"_index":595,"title":{},"body":{"injectables/DataService.html":{}}}],["item.nativeelement",{"_index":1447,"title":{},"body":{"components/PinInputComponent.html":{}}}],["item1",{"_index":2132,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["item2",{"_index":2133,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["item[prop",{"_index":598,"title":{},"body":{"injectables/DataService.html":{}}}],["item[prop].tostring().tolowercase().indexof(filter.tolowercase",{"_index":599,"title":{},"body":{"injectables/DataService.html":{}}}],["item]'},{'name",{"_index":1499,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["itemcount",{"_index":1025,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{}}}],["itemorderchanged",{"_index":2397,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["items",{"_index":2127,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{}}}],["items(value",{"_index":2129,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["itemsarraychanged",{"_index":2178,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["itemsarraymodified",{"_index":2380,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["itemspercol",{"_index":2501,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["itemsperpage",{"_index":1026,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{}}}],["itemsperrow",{"_index":2499,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["itemsperwrapgroup",{"_index":1027,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{}}}],["iteration",{"_index":2332,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["iviewport",{"_index":1041,"title":{"interfaces/IViewport.html":{}},"body":{"interfaces/IViewport.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["jan",{"_index":440,"title":{},"body":{"injectables/CookiesService.html":{}}}],["js",{"_index":681,"title":{},"body":{"injectables/ExternalScriptService.html":{},"dependencies.html":{}}}],["js.id",{"_index":684,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["js.src",{"_index":685,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["jssdk",{"_index":662,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["junto",{"_index":755,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["kb",{"_index":546,"title":{},"body":{"classes/CustomValidators.html":{}}}],["keep",{"_index":2329,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["keeping",{"_index":337,"title":{},"body":{"classes/Color.html":{}}}],["key",{"_index":79,"title":{},"body":{"injectables/AwsService.html":{},"classes/CustomValidators.html":{},"classes/LeafletMap.html":{}}}],["keyboard_keys",{"_index":2626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keyboardevent",{"_index":1411,"title":{},"body":{"components/PinInputComponent.html":{}}}],["keys.ts",{"_index":2625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keyup",{"_index":838,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{}}}],["kind",{"_index":2726,"title":{},"body":{"license.html":{}}}],["km",{"_index":1291,"title":{},"body":{"injectables/MapService.html":{}}}],["l",{"_index":1102,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.control.fullscreen(this.options.fullscreen",{"_index":1119,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.control.fullscreenoptions",{"_index":1179,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.control.layers",{"_index":1058,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.control.layers(this.options.layers",{"_index":1114,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.control.layersoptions",{"_index":1180,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.control.mouseposition(this.options.mousepositionoptions",{"_index":1117,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.control.mousepositionoptions",{"_index":1181,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.control.zoom(this.options.zoom",{"_index":1120,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.control.zoomoptions",{"_index":1182,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.featuregroup(groupwrapper",{"_index":1143,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.latlng",{"_index":1094,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.map",{"_index":1060,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.map(this.options.container",{"_index":1111,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.marker([latlng.lat",{"_index":1153,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.markerclustergroup",{"_index":1062,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.markerclustergroupoptions",{"_index":1183,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.pointexpression",{"_index":1096,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.tilelayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accesstoken",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":2828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.zoompanoptions",{"_index":1097,"title":{},"body":{"classes/LeafletMap.html":{}}}],["la",{"_index":223,"title":{},"body":{"interfaces/CenterPoint.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["labelkey",{"_index":637,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["large",{"_index":2346,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["las",{"_index":398,"title":{},"body":{"injectables/CookiesService.html":{}}}],["last_name",{"_index":777,"title":{},"body":{"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{}}}],["lastname",{"_index":342,"title":{},"body":{"classes/Color.html":{}}}],["lastname.charat(0",{"_index":377,"title":{},"body":{"classes/Color.html":{}}}],["lat",{"_index":210,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"injectables/MapService.html":{}}}],["latitud",{"_index":1281,"title":{},"body":{"injectables/MapService.html":{}}}],["latitude",{"_index":1312,"title":{},"body":{"injectables/MapService.html":{}}}],["latlng",{"_index":216,"title":{"interfaces/LatLng.html":{}},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["latlng.lng",{"_index":1154,"title":{},"body":{"classes/LeafletMap.html":{}}}],["latlng2latlngoptions",{"_index":225,"title":{"interfaces/LatLng2LatLngOptions.html":{}},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["lax",{"_index":419,"title":{},"body":{"injectables/CookiesService.html":{}}}],["layercontrol",{"_index":1046,"title":{},"body":{"classes/LeafletMap.html":{}}}],["layers",{"_index":1073,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["layersoptions",{"_index":1080,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["lazyloading",{"_index":638,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["leaflet",{"_index":1066,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"dependencies.html":{}}}],["leaflet.markercluster",{"_index":1103,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"dependencies.html":{}}}],["leaflet_map_layers",{"_index":1074,"title":{},"body":{"classes/LeafletMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["leaflet_map_layers['mapbox",{"_index":1077,"title":{},"body":{"classes/LeafletMap.html":{}}}],["leafletmap",{"_index":1044,"title":{"classes/LeafletMap.html":{}},"body":{"classes/LeafletMap.html":{},"coverage.html":{}}}],["leafletmapoptions",{"_index":1056,"title":{"interfaces/LeafletMapOptions.html":{}},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"coverage.html":{}}}],["leafletpadding",{"_index":1089,"title":{"interfaces/LeafletPadding.html":{}},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"coverage.html":{}}}],["left",{"_index":2055,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["leftcmd",{"_index":2818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":1472,"title":{},"body":{"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["length",{"_index":1333,"title":{},"body":{"injectables/MapService.html":{},"interfaces/RandomPasswordOps.html":{},"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{}}}],["letra",{"_index":1979,"title":{},"body":{"interfaces/String.html":{}}}],["letras",{"_index":1617,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["letterslowercase",{"_index":1611,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["lettersuppercase",{"_index":1612,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["liability",{"_index":2741,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2738,"title":{},"body":{"license.html":{}}}],["libreria",{"_index":794,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["license",{"_index":2682,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":277,"title":{},"body":{"classes/Color.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["lightbackground",{"_index":290,"title":{},"body":{"classes/Color.html":{}}}],["lightness",{"_index":336,"title":{},"body":{"classes/Color.html":{}}}],["limitation",{"_index":2704,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2729,"title":{},"body":{"license.html":{}}}],["limits",{"_index":339,"title":{},"body":{"classes/Color.html":{}}}],["limitselection",{"_index":639,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["line",{"_index":178,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["list",{"_index":2437,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["listado",{"_index":266,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["listener",{"_index":826,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["literal",{"_index":413,"title":{},"body":{"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"miscellaneous/variables.html":{}}}],["lng",{"_index":211,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"injectables/MapService.html":{}}}],["loaded",{"_index":751,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["loading",{"_index":640,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["loadsdk",{"_index":724,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["location",{"_index":1307,"title":{},"body":{"injectables/MapService.html":{}}}],["login",{"_index":725,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["lon1",{"_index":1332,"title":{},"body":{"injectables/MapService.html":{}}}],["long",{"_index":1941,"title":{},"body":{"modules/SerUiModule.html":{}}}],["longitud",{"_index":1282,"title":{},"body":{"injectables/MapService.html":{}}}],["longitude",{"_index":1311,"title":{},"body":{"injectables/MapService.html":{}}}],["longpress",{"_index":1187,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["longpress]'},{'name",{"_index":1493,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["longpressdirective",{"_index":1184,"title":{"directives/LongPressDirective.html":{}},"body":{"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["longpressing",{"_index":1188,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["loop",{"_index":1195,"title":{},"body":{"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["loop(event",{"_index":1224,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["los",{"_index":532,"title":{},"body":{"classes/CustomValidators.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["lowerorequalthan",{"_index":491,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["lowerorequalthan(basepathfield",{"_index":525,"title":{},"body":{"classes/CustomValidators.html":{}}}],["lowerthan",{"_index":492,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["lowerthan(basepathfield",{"_index":527,"title":{},"body":{"classes/CustomValidators.html":{}}}],["main",{"_index":2354,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["map",{"_index":147,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/LeafletMap.html":{},"miscellaneous/variables.html":{}}}],["map(states",{"_index":1768,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["map(val",{"_index":1983,"title":{},"body":{"interfaces/String.html":{}}}],["mapbox",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapbox/streets",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapoptions",{"_index":1075,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["mapservice",{"_index":1272,"title":{"injectables/MapService.html":{}},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["margin",{"_index":2301,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["marginbottom",{"_index":2261,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["marginleft",{"_index":2263,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["marginright",{"_index":2264,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["margintop",{"_index":2259,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["markercluster",{"_index":1047,"title":{},"body":{"classes/LeafletMap.html":{}}}],["markers",{"_index":1048,"title":{},"body":{"classes/LeafletMap.html":{}}}],["match",{"_index":493,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["match(originalpathfield",{"_index":529,"title":{},"body":{"classes/CustomValidators.html":{}}}],["matching",{"_index":16,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs(boundingrect.height",{"_index":2282,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.abs(boundingrect.width",{"_index":2279,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.asin(math.sqrt(a",{"_index":1342,"title":{},"body":{"injectables/MapService.html":{}}}],["math.ceil((viewportheight",{"_index":2520,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.ceil((viewportwidth",{"_index":2519,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.ceil(arraystartindex",{"_index":2506,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.ceil(itemcount",{"_index":2522,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.ceil(this._elementref.nativeelement.scrollheight",{"_index":1017,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["math.cos(options.from.lat",{"_index":1337,"title":{},"body":{"injectables/MapService.html":{}}}],["math.cos(options.to.lat",{"_index":1338,"title":{},"body":{"injectables/MapService.html":{}}}],["math.floor((1",{"_index":1635,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["math.floor((today.gettime",{"_index":1633,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["math.floor(math.random",{"_index":1642,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["math.max(0",{"_index":2544,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.max(math.ceil(viewportheight",{"_index":2502,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.max(math.ceil(viewportwidth",{"_index":2500,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.max(scrollposition",{"_index":2428,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.max(viewportheight",{"_index":2516,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(math.max(arrayendindex",{"_index":2536,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(math.max(arraystartindex",{"_index":2534,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(maxheightforwrapgroup",{"_index":2515,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(scrolloffset",{"_index":2512,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(this.minmeasuredchildheight",{"_index":2495,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(this.minmeasuredchildwidth",{"_index":2493,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.pi",{"_index":1336,"title":{},"body":{"injectables/MapService.html":{}}}],["math.random",{"_index":1634,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["math.round(ev.target.scrolltop",{"_index":2557,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["math.round(newpadding",{"_index":2549,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.round(newscrolllength",{"_index":2550,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.round(this.horizontal",{"_index":2475,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.sin(((options.to.lat",{"_index":1334,"title":{},"body":{"injectables/MapService.html":{}}}],["math.sin(((options.to.lng",{"_index":1339,"title":{},"body":{"injectables/MapService.html":{}}}],["max",{"_index":315,"title":{},"body":{"classes/Color.html":{},"injectables/MapService.html":{},"interfaces/RandomPasswordOps.html":{},"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["maxchildsizeperwrapgroup",{"_index":2562,"title":{},"body":{"interfaces/WrapGroupDimensions.html":{}}}],["maxfilesize",{"_index":494,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["maxfilesize(size",{"_index":539,"title":{},"body":{"classes/CustomValidators.html":{}}}],["maxheight",{"_index":641,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["maxheightforwrapgroup",{"_index":2508,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxhue",{"_index":278,"title":{},"body":{"classes/Color.html":{}}}],["maximo",{"_index":543,"title":{},"body":{"classes/CustomValidators.html":{}}}],["maxlight",{"_index":279,"title":{},"body":{"classes/Color.html":{}}}],["maxretries",{"_index":2196,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxruntimes",{"_index":2326,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxsat",{"_index":280,"title":{},"body":{"classes/Color.html":{}}}],["maxscrollposition",{"_index":1028,"title":{},"body":{"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["maxvisibleheightforwrapgroup",{"_index":2514,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxvisiblewidthforwrapgroup",{"_index":2513,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxwidthforwrapgroup",{"_index":2507,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxzoom",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mayor",{"_index":515,"title":{},"body":{"classes/CustomValidators.html":{}}}],["mayúsculas",{"_index":1619,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["mediante",{"_index":614,"title":{},"body":{"injectables/DownloadService.html":{}}}],["mediaquerylist",{"_index":1542,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["mediaquerylistevent",{"_index":1599,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["medio",{"_index":560,"title":{},"body":{"classes/CustomValidators.html":{}}}],["member",{"_index":2017,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["membererrors",{"_index":1990,"title":{},"body":{"interfaces/String.html":{}}}],["menor",{"_index":521,"title":{},"body":{"classes/CustomValidators.html":{}}}],["menos",{"_index":265,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["menu",{"_index":1661,"title":{},"body":{"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"modules/SerSelectModule.html":{},"coverage.html":{}}}],["merchantability",{"_index":2731,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2708,"title":{},"body":{"license.html":{}}}],["mergeobjs",{"_index":1107,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["mergeobjs(defaultoptions",{"_index":1649,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["mergeobjs(pad",{"_index":1141,"title":{},"body":{"classes/LeafletMap.html":{}}}],["mergeobjs(this.options",{"_index":1109,"title":{},"body":{"classes/LeafletMap.html":{}}}],["metadata",{"_index":201,"title":{},"body":{"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["methods",{"_index":22,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/WhenScrolledDirective.html":{}}}],["metodo",{"_index":791,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{}}}],["mg",{"_index":547,"title":{},"body":{"classes/CustomValidators.html":{}}}],["middle",{"_index":373,"title":{},"body":{"classes/Color.html":{}}}],["middlepoint",{"_index":1278,"title":{},"body":{"injectables/MapService.html":{}}}],["middlepoint(options",{"_index":1309,"title":{},"body":{"injectables/MapService.html":{}}}],["min",{"_index":317,"title":{},"body":{"classes/Color.html":{},"interfaces/RandomPasswordOps.html":{}}}],["minfilesize",{"_index":495,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["minfilesize(size",{"_index":551,"title":{},"body":{"classes/CustomValidators.html":{}}}],["minhue",{"_index":281,"title":{},"body":{"classes/Color.html":{}}}],["minlight",{"_index":282,"title":{},"body":{"classes/Color.html":{}}}],["minsat",{"_index":283,"title":{},"body":{"classes/Color.html":{}}}],["minúsculas",{"_index":1618,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["miscellaneous",{"_index":2759,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2683,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1602,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["model",{"_index":135,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["modelo",{"_index":504,"title":{},"body":{"classes/CustomValidators.html":{}}}],["modify",{"_index":2707,"title":{},"body":{"license.html":{}}}],["modifyoverflowstyleofparentscroll",{"_index":2005,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["modo",{"_index":865,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["module",{"_index":18,"title":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{}},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":34,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["more",{"_index":2357,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["mousedown",{"_index":1204,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mousedown(event",{"_index":1214,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mouseevent",{"_index":1215,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mouseevent).button",{"_index":1263,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mousemove",{"_index":1205,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mousemove(event",{"_index":1218,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mouseposition",{"_index":1106,"title":{},"body":{"classes/LeafletMap.html":{}}}],["mousepositionoptions",{"_index":1178,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["mouseup",{"_index":1206,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mouseup(event",{"_index":1220,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mousex",{"_index":1189,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mousey",{"_index":1190,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mozcancelfullscreen",{"_index":848,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["mozfullscreenelement",{"_index":849,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["mozrequestfullscreen",{"_index":858,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{}}}],["msexitfullscreen",{"_index":850,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["msfullscreenelement",{"_index":851,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["msg",{"_index":1308,"title":{},"body":{"injectables/MapService.html":{}}}],["msj",{"_index":1947,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["msrequestfullscreen",{"_index":857,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["multi",{"_index":1369,"title":{},"body":{"components/PinInputComponent.html":{}}}],["máximo",{"_index":1640,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["método",{"_index":121,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["mínimo",{"_index":553,"title":{},"body":{"classes/CustomValidators.html":{},"interfaces/RandomPasswordOps.html":{}}}],["módulo",{"_index":41,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["n",{"_index":1658,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["name",{"_index":30,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["name.charat(0",{"_index":376,"title":{},"body":{"classes/Color.html":{},"directives/SerErrorsDirective.html":{}}}],["navegador",{"_index":431,"title":{},"body":{"injectables/CookiesService.html":{},"injectables/FullscreenService.html":{}}}],["navigator",{"_index":1322,"title":{},"body":{"injectables/MapService.html":{}}}],["navigator.geolocation.getcurrentposition((position",{"_index":1323,"title":{},"body":{"injectables/MapService.html":{}}}],["necessary",{"_index":2359,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["new",{"_index":102,"title":{},"body":{"injectables/AwsService.html":{},"classes/Color.html":{},"directives/CopyToClipboardDirective.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpadding",{"_index":2546,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["newscrolllength",{"_index":2548,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["newtween",{"_index":2215,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["newtween.update(time",{"_index":2227,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["newtween['isplaying",{"_index":2226,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["next",{"_index":177,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["next(position",{"_index":1301,"title":{},"body":{"injectables/MapService.html":{}}}],["ng",{"_index":2060,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ng_fsdk_config",{"_index":713,"title":{},"body":{"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng_gapi_config",{"_index":944,"title":{},"body":{"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng_value_accessor",{"_index":1366,"title":{},"body":{"components/PinInputComponent.html":{}}}],["ngafterviewinit",{"_index":1378,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SerErrorsDirective.html":{}}}],["ngcontrol",{"_index":1007,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"directives/SerControlDirective.html":{}}}],["ngdocheck",{"_index":1726,"title":{},"body":{"directives/SerErrorDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["ngmodule",{"_index":36,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["ngonchanges",{"_index":188,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/SerErrorsDirective.html":{}}}],["ngonchanges(changes",{"_index":2167,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ngondestroy",{"_index":827,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["ngoninit",{"_index":999,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["ngx",{"_index":2668,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngzone",{"_index":2019,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["nico",{"_index":1630,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["nodatalabel",{"_index":642,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["node",{"_index":802,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.async",{"_index":807,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.defer",{"_index":808,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.id",{"_index":809,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.onload",{"_index":811,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.src",{"_index":803,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.type",{"_index":805,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["nombre",{"_index":244,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{}}}],["noninfringement",{"_index":2735,"title":{},"body":{"license.html":{}}}],["noop",{"_index":2586,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":2327,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["notice",{"_index":2719,"title":{},"body":{"license.html":{}}}],["notinarray",{"_index":2617,"title":{},"body":{"coverage.html":{}}}],["nowrap",{"_index":2068,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["null",{"_index":569,"title":{},"body":{"classes/CustomValidators.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"components/PinInputComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["number",{"_index":136,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"interfaces/CenterPoint.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["numberofknownwrapgroupchildsizes",{"_index":2563,"title":{},"body":{"interfaces/WrapGroupDimensions.html":{}}}],["numberofwrapgroups",{"_index":2521,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["numbers",{"_index":1613,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["numunknownchildsizes",{"_index":2524,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["número",{"_index":1639,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["números",{"_index":1620,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["o",{"_index":109,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{}}}],["obj",{"_index":1287,"title":{},"body":{"injectables/MapService.html":{},"components/PinInputComponent.html":{}}}],["obj.tostring().split",{"_index":1438,"title":{},"body":{"components/PinInputComponent.html":{}}}],["obj[0",{"_index":1345,"title":{},"body":{"injectables/MapService.html":{}}}],["object",{"_index":1623,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["objecttographparams",{"_index":2605,"title":{},"body":{"coverage.html":{}}}],["objeto",{"_index":82,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/CenterPoint.html":{},"injectables/CookiesService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["objhasvalue",{"_index":2623,"title":{},"body":{"coverage.html":{}}}],["observa",{"_index":1521,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["observable",{"_index":143,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/Color.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"directives/SerErrorDirective.html":{}}}],["observable((observer",{"_index":758,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{}}}],["observable(observer",{"_index":346,"title":{},"body":{"classes/Color.html":{}}}],["observable.combinelatest([states",{"_index":1772,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["observar",{"_index":1558,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["observer",{"_index":740,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["observer.complete",{"_index":382,"title":{},"body":{"classes/Color.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["observer.error('geolocation",{"_index":1328,"title":{},"body":{"injectables/MapService.html":{}}}],["observer.error(err",{"_index":984,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["observer.error(error",{"_index":1327,"title":{},"body":{"injectables/MapService.html":{}}}],["observer.next",{"_index":991,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["observer.next(facebookprofile",{"_index":784,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["observer.next(googleprofile",{"_index":982,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["observer.next(position",{"_index":1324,"title":{},"body":{"injectables/MapService.html":{}}}],["observer.next(result",{"_index":381,"title":{},"body":{"classes/Color.html":{}}}],["observer.next(true",{"_index":814,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["obtaining",{"_index":2697,"title":{},"body":{"license.html":{}}}],["obtener",{"_index":122,"title":{},"body":{"injectables/AwsService.html":{},"injectables/CookiesService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["obtiene",{"_index":387,"title":{},"body":{"injectables/CookiesService.html":{},"injectables/FullscreenService.html":{},"injectables/MapService.html":{}}}],["of(control.value).pipe",{"_index":154,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["of(null",{"_index":163,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["offset",{"_index":1095,"title":{},"body":{"classes/LeafletMap.html":{},"modules/VirtualScrollerModule.html":{}}}],["offset[0",{"_index":1159,"title":{},"body":{"classes/LeafletMap.html":{}}}],["offset[1",{"_index":1161,"title":{},"body":{"classes/LeafletMap.html":{}}}],["offset_x",{"_index":212,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{}}}],["offset_y",{"_index":213,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{}}}],["offsetleft",{"_index":2296,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["offsettop",{"_index":2305,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["okay",{"_index":2371,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["old",{"_index":902,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["oldparentscrolloverflow",{"_index":2145,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldrefreshcompletedcallback",{"_index":2387,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldstartitem",{"_index":2391,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldstartitemindex",{"_index":2393,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldviewport",{"_index":2385,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldviewport.scrolllength",{"_index":2390,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldviewportitems",{"_index":2386,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldviewportitems[0",{"_index":2392,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["onblur",{"_index":1702,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["onchange",{"_index":1379,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onchange(_",{"_index":1403,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onchanges",{"_index":168,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["onchangevalue",{"_index":1680,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["onchangevalue(value",{"_index":1689,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["onclick",{"_index":1380,"title":{},"body":{"components/PinInputComponent.html":{},"directives/ToggleClassDirective.html":{}}}],["onclick(e",{"_index":1406,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onclick(val",{"_index":464,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["ondestroy",{"_index":823,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["onfocus",{"_index":1699,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["oninit",{"_index":996,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["oninput",{"_index":1381,"title":{},"body":{"components/PinInputComponent.html":{}}}],["oninput(e",{"_index":1408,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onkeydown",{"_index":1383,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onkeydown(e",{"_index":1410,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onload",{"_index":745,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["onlongpress",{"_index":1197,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onlongpressend",{"_index":1198,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onlongpressing",{"_index":1199,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onlynumber",{"_index":1391,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onmousedown(event",{"_index":1239,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onmousemove(event",{"_index":1267,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onmouseup(event",{"_index":1262,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onscroll",{"_index":2113,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["onshortpress",{"_index":1200,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onstop",{"_index":2221,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ontouch",{"_index":1384,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onupdate((data",{"_index":2218,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["opacity",{"_index":2074,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["opcional",{"_index":508,"title":{},"body":{"classes/CustomValidators.html":{}}}],["open",{"_index":1970,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["open(opts",{"_index":1950,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["openid",{"_index":219,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{}}}],["openidclient",{"_index":1346,"title":{"interfaces/OpenIdClient.html":{}},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{}}}],["openiddata",{"_index":232,"title":{"interfaces/OpenIdData.html":{}},"body":{"injectables/ClaimsService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{}}}],["openiddata(value",{"_index":260,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["openstreetmap",{"_index":2827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opera",{"_index":905,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["operativo",{"_index":1576,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["optional",{"_index":31,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["options",{"_index":1049,"title":{},"body":{"classes/LeafletMap.html":{},"injectables/MapService.html":{},"interfaces/RandomPasswordOps.html":{},"modules/VirtualScrollerModule.html":{}}}],["options.checkresizeinterval",{"_index":2248,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.from.lat",{"_index":1335,"title":{},"body":{"injectables/MapService.html":{}}}],["options.from.lng",{"_index":1340,"title":{},"body":{"injectables/MapService.html":{}}}],["options.lng",{"_index":1174,"title":{},"body":{"classes/LeafletMap.html":{}}}],["options.modifyoverflowstyleofparentscroll",{"_index":2251,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.preserve_zoom",{"_index":1175,"title":{},"body":{"classes/LeafletMap.html":{}}}],["options.resizebypassrefreshthreshold",{"_index":2250,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.scrollanimationtime",{"_index":2242,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.scrollbarheight",{"_index":2246,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.scrollbarwidth",{"_index":2244,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.scrolldebouncetime",{"_index":2241,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.scrollthrottlingtime",{"_index":2240,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.stripedtable",{"_index":2253,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["opts",{"_index":1959,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["opts.msj",{"_index":1962,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["ordering",{"_index":2018,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["original",{"_index":538,"title":{},"body":{"classes/CustomValidators.html":{}}}],["originalpathfield",{"_index":537,"title":{},"body":{"classes/CustomValidators.html":{}}}],["os",{"_index":1523,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["oscuro",{"_index":1593,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["otherwise",{"_index":2746,"title":{},"body":{"license.html":{}}}],["otro",{"_index":517,"title":{},"body":{"classes/CustomValidators.html":{}}}],["out",{"_index":1847,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":460,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/GoogleSDKService.html":{},"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["outputs",{"_index":448,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/LongPressDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["overflow",{"_index":2045,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["overview",{"_index":2754,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owasp",{"_index":426,"title":{},"body":{"injectables/CookiesService.html":{}}}],["package",{"_index":2644,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":1137,"title":{},"body":{"classes/LeafletMap.html":{}}}],["pad.paddingbottomright.x",{"_index":1149,"title":{},"body":{"classes/LeafletMap.html":{}}}],["pad.paddingbottomright.y",{"_index":1150,"title":{},"body":{"classes/LeafletMap.html":{}}}],["pad.paddingtopleft.x",{"_index":1147,"title":{},"body":{"classes/LeafletMap.html":{}}}],["pad.paddingtopleft.y",{"_index":1148,"title":{},"body":{"classes/LeafletMap.html":{}}}],["padding",{"_index":1043,"title":{},"body":{"interfaces/IViewport.html":{},"classes/LeafletMap.html":{},"modules/VirtualScrollerModule.html":{}}}],["paddingbottomright",{"_index":1140,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["paddingchanged",{"_index":2408,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["paddingtopleft",{"_index":1138,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["pagecount_fractional",{"_index":1029,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{}}}],["pageinfo",{"_index":2077,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.endindex",{"_index":2080,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.endindexwithbuffer",{"_index":2085,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.maxscrollposition",{"_index":2083,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.scrollendposition",{"_index":2082,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.scrollstartposition",{"_index":2081,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.startindex",{"_index":2079,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.startindexwithbuffer",{"_index":2084,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pagexoffset",{"_index":2298,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageyoffset",{"_index":2306,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pantalla",{"_index":866,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["panto",{"_index":1053,"title":{},"body":{"classes/LeafletMap.html":{}}}],["panto(latlng",{"_index":1093,"title":{},"body":{"classes/LeafletMap.html":{}}}],["para",{"_index":42,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/String.html":{}}}],["param",{"_index":126,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/MapService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/String.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["parametrizar",{"_index":711,"title":{},"body":{"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["parametros",{"_index":1645,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["parentscroll",{"_index":2039,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["parentscroll(value",{"_index":2148,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["parseint(styles['margin",{"_index":2260,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["particular",{"_index":2733,"title":{},"body":{"license.html":{}}}],["password",{"_index":1441,"title":{},"body":{"components/PinInputComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":405,"title":{},"body":{"injectables/CookiesService.html":{},"classes/CustomValidators.html":{}}}],["pending",{"_index":1678,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["perfil",{"_index":757,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["performance",{"_index":2347,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["permiso",{"_index":245,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["permisos",{"_index":110,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["permission",{"_index":2691,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2714,"title":{},"body":{"license.html":{}}}],["person",{"_index":2696,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2715,"title":{},"body":{"license.html":{}}}],["pic",{"_index":770,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["pic.data.url",{"_index":783,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["pic?.data?.url",{"_index":781,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["picture",{"_index":816,"title":{},"body":{"interfaces/FacebookUserProfile.html":{},"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{}}}],["pin",{"_index":1370,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["pin/pin",{"_index":1904,"title":{},"body":{"modules/SerFormModule.html":{}}}],["pininputcomponent",{"_index":1357,"title":{"components/PinInputComponent.html":{}},"body":{"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pipe(take(1)).subscribe",{"_index":1965,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["platform_id",{"_index":2022,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["platformid",{"_index":2235,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["play",{"_index":320,"title":{},"body":{"classes/Color.html":{}}}],["plugins",{"_index":2649,"title":{},"body":{"dependencies.html":{}}}],["plugins/leaflet",{"_index":1105,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["point",{"_index":1162,"title":{},"body":{"classes/LeafletMap.html":{}}}],["popup",{"_index":786,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["por",{"_index":559,"title":{},"body":{"classes/CustomValidators.html":{}}}],["portions",{"_index":2723,"title":{},"body":{"license.html":{}}}],["posisión",{"_index":1296,"title":{},"body":{"injectables/MapService.html":{}}}],["position",{"_index":1081,"title":{},"body":{"classes/LeafletMap.html":{},"injectables/MapService.html":{},"modules/VirtualScrollerModule.html":{}}}],["positioncontrol",{"_index":1076,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["positionerror",{"_index":1326,"title":{},"body":{"injectables/MapService.html":{}}}],["precision",{"_index":1285,"title":{},"body":{"injectables/MapService.html":{}}}],["preferscolorschemeservice",{"_index":1512,"title":{"injectables/PrefersColorSchemeService.html":{}},"body":{"injectables/PrefersColorSchemeService.html":{},"coverage.html":{}}}],["prepended",{"_index":2382,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["preserve_zoom",{"_index":214,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{}}}],["press",{"_index":1233,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive",{"_index":1942,"title":{},"body":{"modules/SerUiModule.html":{}}}],["press.directive.ts",{"_index":1186,"title":{},"body":{"directives/LongPressDirective.html":{},"coverage.html":{}}}],["press.directive.ts:10",{"_index":1207,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:12",{"_index":1211,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:13",{"_index":1208,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:14",{"_index":1210,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:15",{"_index":1209,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:17",{"_index":1229,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:18",{"_index":1226,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:19",{"_index":1230,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:20",{"_index":1227,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:21",{"_index":1228,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:24",{"_index":1213,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:27",{"_index":1212,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:31",{"_index":1217,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:57",{"_index":1225,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:66",{"_index":1222,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:72",{"_index":1223,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:86",{"_index":1221,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:96",{"_index":1219,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["pressduration",{"_index":1196,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["pressing",{"_index":1191,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["prevent",{"_index":2379,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["previous",{"_index":2331,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["previousscrollboundingrect",{"_index":2272,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["primarykey",{"_index":643,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["principio",{"_index":86,"title":{},"body":{"injectables/AwsService.html":{}}}],["privado",{"_index":792,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["private",{"_index":67,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["probably",{"_index":2341,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["profile",{"_index":948,"title":{},"body":{"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{}}}],["profile.getemail",{"_index":980,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["profile.getfamilyname",{"_index":979,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["profile.getgivenname",{"_index":978,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["profile.getid",{"_index":976,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["profile.getimageurl().replace('=s96",{"_index":981,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["project",{"_index":2680,"title":{},"body":{"index.html":{}}}],["prop",{"_index":597,"title":{},"body":{"injectables/DataService.html":{},"directives/SerErrorsDirective.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/AwsData.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"interfaces/SnackbarOpts.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{}}}],["property",{"_index":2034,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["propertyname",{"_index":2480,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["propiedad",{"_index":507,"title":{},"body":{"classes/CustomValidators.html":{}}}],["protected",{"_index":2087,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["proveidos",{"_index":534,"title":{},"body":{"classes/CustomValidators.html":{}}}],["provide",{"_index":51,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"components/PinInputComponent.html":{},"modules/VirtualScrollerModule.html":{}}}],["provided",{"_index":2724,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":114,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["provider",{"_index":26,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["providers",{"_index":57,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"classes/LeafletMap.html":{},"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["provides",{"_index":1319,"title":{},"body":{"injectables/MapService.html":{}}}],["public",{"_index":69,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["public_profile,email",{"_index":790,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["publish",{"_index":1321,"title":{},"body":{"injectables/MapService.html":{},"license.html":{}}}],["puntos",{"_index":1294,"title":{},"body":{"injectables/MapService.html":{}}}],["purpose",{"_index":2734,"title":{},"body":{"license.html":{}}}],["quality",{"_index":345,"title":{},"body":{"classes/Color.html":{}}}],["que",{"_index":217,"title":{},"body":{"interfaces/CenterPoint.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["querylist",{"_index":1426,"title":{},"body":{"components/PinInputComponent.html":{}}}],["quit",{"_index":2351,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["randomnum",{"_index":288,"title":{},"body":{"classes/Color.html":{}}}],["randomnum(min",{"_index":314,"title":{},"body":{"classes/Color.html":{}}}],["randompasswordops",{"_index":1609,"title":{"interfaces/RandomPasswordOps.html":{}},"body":{"interfaces/RandomPasswordOps.html":{},"coverage.html":{}}}],["re",{"_index":2334,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["reactiveformsmodule",{"_index":1849,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{}}}],["read",{"_index":2158,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["readasarraybuffer",{"_index":2579,"title":{},"body":{"coverage.html":{}}}],["readasdataurl",{"_index":172,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{}}}],["readasdataurl(this.image.file).pipe(take(1)).subscribe((result",{"_index":193,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["readonly",{"_index":722,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"modules/VirtualScrollerModule.html":{}}}],["ready",{"_index":1783,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["realizar",{"_index":111,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{}}}],["recalculating",{"_index":2330,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["redirect",{"_index":769,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["redo",{"_index":331,"title":{},"body":{"classes/Color.html":{}}}],["refresh_internal(itemsarraymodified",{"_index":2324,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["refreshcompletedcallback",{"_index":2325,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["registeronchange",{"_index":1385,"title":{},"body":{"components/PinInputComponent.html":{}}}],["registeronchange(fn",{"_index":1414,"title":{},"body":{"components/PinInputComponent.html":{}}}],["registerontouched",{"_index":1386,"title":{},"body":{"components/PinInputComponent.html":{}}}],["registerontouched(fn",{"_index":1417,"title":{},"body":{"components/PinInputComponent.html":{}}}],["registro",{"_index":511,"title":{},"body":{"classes/CustomValidators.html":{}}}],["relative",{"_index":2041,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["remote",{"_index":571,"title":{},"body":{"classes/CustomValidators.html":{}}}],["removescrolleventhandlers",{"_index":2460,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["remueve",{"_index":1581,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["rename",{"_index":1818,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["render",{"_index":2335,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["rendered",{"_index":186,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["rendered.listen(this._elementref.nativeelement",{"_index":837,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["renderer",{"_index":1996,"title":{},"body":{"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["renderer2",{"_index":171,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["representa",{"_index":218,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["requestanimationframe",{"_index":2398,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["requestanimationframe(animate",{"_index":2230,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["requestbody",{"_index":152,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{}}}],["requestbody).pipe",{"_index":160,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["requestbody.value",{"_index":158,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["require",{"_index":2611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiredfiletype",{"_index":496,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["requiredfiletype(ext",{"_index":554,"title":{},"body":{"classes/CustomValidators.html":{}}}],["requiredpermission",{"_index":243,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["requiredpermissions",{"_index":235,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["res",{"_index":765,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["res.email",{"_index":780,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["res.first_name",{"_index":776,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["res.getauthresponse().id_token",{"_index":977,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["res.getbasicprofile",{"_index":974,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["res.id",{"_index":772,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["res.last_name",{"_index":778,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["reset",{"_index":1846,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["resize",{"_index":2455,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["resizebypassrefreshthreshold",{"_index":2006,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["response.authresponse.accesstoken",{"_index":774,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["response.status",{"_index":760,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["restriction",{"_index":2702,"title":{},"body":{"license.html":{}}}],["result",{"_index":15,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.bottom",{"_index":2267,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result.height",{"_index":2271,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result.left",{"_index":2268,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result.right",{"_index":2269,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result.top",{"_index":2266,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result.width",{"_index":2270,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result['cancel",{"_index":2315,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["results",{"_index":17,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retryifneeded",{"_index":2197,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["return",{"_index":61,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{}}}],["returns",{"_index":33,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/WhenScrolledDirective.html":{}}}],["returntype",{"_index":834,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["retval",{"_index":1657,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["revertparentoverscroll",{"_index":2138,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["right",{"_index":2265,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["right/middle",{"_index":1241,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["rightcmd",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rights",{"_index":2705,"title":{},"body":{"license.html":{}}}],["root",{"_index":115,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["rotate",{"_index":310,"title":{},"body":{"classes/Color.html":{}}}],["round",{"_index":2528,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["rows",{"_index":1016,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["rules",{"_index":1724,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["runs",{"_index":2358,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ruta",{"_index":80,"title":{},"body":{"injectables/AwsService.html":{},"injectables/CookiesService.html":{}}}],["rxjs",{"_index":144,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/Color.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"injectables/MapService.html":{},"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"dependencies.html":{}}}],["rxjs/add/observable/combinelatest",{"_index":1750,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/add/operator/distinctuntilchanged",{"_index":1749,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/add/operator/filter",{"_index":1747,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/add/operator/map",{"_index":1748,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/behaviorsubject",{"_index":1816,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["rxjs/observable",{"_index":1744,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/operators",{"_index":149,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["rxjs/subject",{"_index":1745,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/subscription",{"_index":1746,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["s3",{"_index":9,"title":{"interfaces/S3.html":{}},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/S3.html":{},"coverage.html":{}}}],["s4",{"_index":1628,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"coverage.html":{}}}],["sa",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safari",{"_index":904,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["salir",{"_index":891,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["same",{"_index":2384,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["samesite",{"_index":418,"title":{},"body":{"injectables/CookiesService.html":{}}}],["sat",{"_index":284,"title":{},"body":{"classes/Color.html":{}}}],["savedvalue",{"_index":1009,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["scale",{"_index":335,"title":{},"body":{"classes/Color.html":{}}}],["scalelight",{"_index":285,"title":{},"body":{"classes/Color.html":{}}}],["schemas",{"_index":56,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["scheme",{"_index":1532,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme(value",{"_index":1562,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts",{"_index":1515,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{},"coverage.html":{}}}],["scheme.service.ts:111",{"_index":1540,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:123",{"_index":1541,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:16",{"_index":1543,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:17",{"_index":1547,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:20",{"_index":1549,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:24",{"_index":1545,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:25",{"_index":1551,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:28",{"_index":1553,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:32",{"_index":1544,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:33",{"_index":1555,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:36",{"_index":1557,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:40",{"_index":1535,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:52",{"_index":1539,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:65",{"_index":1538,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:77",{"_index":1536,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:93",{"_index":1537,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme/prefers",{"_index":1514,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{},"coverage.html":{}}}],["schemedarkclassname",{"_index":1534,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["schemedarkclassname(value",{"_index":1566,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["schemelightclassname",{"_index":1533,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["schemelightclassname(value",{"_index":1564,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scope",{"_index":789,"title":{},"body":{"injectables/FacebookSDKService.html":{},"modules/GoogleSDKModule.html":{},"classes/LeafletMap.html":{}}}],["scopes",{"_index":1350,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["script",{"_index":677,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["script.service.ts",{"_index":660,"title":{},"body":{"injectables/ExternalScriptService.html":{},"coverage.html":{}}}],["script.service.ts:16",{"_index":665,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["script.service.ts:20",{"_index":668,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["script/external",{"_index":659,"title":{},"body":{"injectables/ExternalScriptService.html":{},"coverage.html":{}}}],["scritps",{"_index":671,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["scroll",{"_index":1926,"title":{},"body":{"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["scroll.ts",{"_index":2016,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["scroll/defaultoptions.ts",{"_index":2003,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"coverage.html":{}}}],["scroll/idimension.ts",{"_index":1022,"title":{},"body":{"interfaces/IDimensions.html":{},"coverage.html":{}}}],["scroll/ipageinfo.ts",{"_index":1034,"title":{},"body":{"interfaces/IPageInfo.html":{},"coverage.html":{}}}],["scroll/iviewport.ts",{"_index":1042,"title":{},"body":{"interfaces/IViewport.html":{},"coverage.html":{}}}],["scroll/virtual",{"_index":1925,"title":{},"body":{"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["scroll/wrapgroupdimension.ts",{"_index":2560,"title":{},"body":{"interfaces/WrapGroupDimension.html":{},"coverage.html":{}}}],["scroll/wrapgroupdimensions.ts",{"_index":2561,"title":{},"body":{"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["scrollable",{"_index":2052,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollanimationtime",{"_index":2007,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrollbarheight",{"_index":2008,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrollbarwidth",{"_index":2009,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrollclientrect",{"_index":2468,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollclientrect.left",{"_index":2471,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollclientrect.top",{"_index":2473,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolldebouncetime",{"_index":2010,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrolldebouncetime(value",{"_index":2112,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolled.directive",{"_index":1933,"title":{},"body":{"modules/SerUiModule.html":{}}}],["scrolled.directive.ts",{"_index":2553,"title":{},"body":{"directives/WhenScrolledDirective.html":{},"coverage.html":{}}}],["scrolled.directive.ts:10",{"_index":2554,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["scrolled.directive.ts:20",{"_index":2556,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["scrolled.directive.ts:9",{"_index":2555,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["scrollelement",{"_index":2139,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollelement.style['overflow",{"_index":2142,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollelement[this._scrolltype",{"_index":2214,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollendposition",{"_index":1037,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["scroller",{"_index":2237,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scroller,[virtualscroller",{"_index":1488,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrolling",{"_index":2046,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollinto(item",{"_index":2188,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollleft",{"_index":2304,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolllength",{"_index":1030,"title":{},"body":{"interfaces/IDimensions.html":{},"interfaces/IViewport.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrolllengthchanged",{"_index":2406,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolllengthdelta",{"_index":2388,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolloffset",{"_index":2503,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolloffsettoremove",{"_index":2511,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollposition",{"_index":2206,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollpositionchanged",{"_index":2411,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollstartposition",{"_index":1038,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrollthrottlingtime",{"_index":2011,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrollthrottlingtime(value",{"_index":2108,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolltoindex(index",{"_index":2195,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolltop",{"_index":2308,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolltoposition(scrollposition",{"_index":2205,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["sd",{"_index":1495,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{}}}],["sdbadgedirective",{"_index":1494,"title":{"directives/SDBadgeDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sdbadgeitemdirective",{"_index":1497,"title":{"directives/SDBadgeItemDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sditemdirective",{"_index":1500,"title":{"directives/SDItemDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sdk",{"_index":675,"title":{},"body":{"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"dependencies.html":{}}}],["sdk.config",{"_index":739,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["sdk.config.ts",{"_index":689,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{},"coverage.html":{}}}],["sdk.config.ts:10",{"_index":693,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["sdk.config.ts:4",{"_index":694,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["sdk.config.ts:5",{"_index":696,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["sdk.config.ts:8",{"_index":698,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["sdk.module.ts",{"_index":705,"title":{},"body":{"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["sdk.module.ts:30",{"_index":940,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["sdk.module.ts:32",{"_index":707,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["sdk.service",{"_index":710,"title":{},"body":{"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["sdk.service.ts",{"_index":720,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sdk.service.ts:19",{"_index":731,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["sdk.service.ts:20",{"_index":729,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:21",{"_index":733,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["sdk.service.ts:24",{"_index":735,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:25",{"_index":958,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:28",{"_index":726,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:32",{"_index":956,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:33",{"_index":960,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:36",{"_index":962,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:38",{"_index":952,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:43",{"_index":728,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["sdk.service.ts:53",{"_index":954,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:83",{"_index":953,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:85",{"_index":727,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["se",{"_index":797,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["searchautofocus",{"_index":644,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["searchby",{"_index":580,"title":{},"body":{"injectables/DataService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["searchby.length",{"_index":594,"title":{},"body":{"injectables/DataService.html":{}}}],["searchplaceholdertext",{"_index":645,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["secret",{"_index":1351,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["secure",{"_index":417,"title":{},"body":{"injectables/CookiesService.html":{}}}],["segoe",{"_index":367,"title":{},"body":{"classes/Color.html":{}}}],["segura",{"_index":425,"title":{},"body":{"injectables/CookiesService.html":{}}}],["según",{"_index":1596,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["selbox",{"_index":465,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.focus",{"_index":477,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.select",{"_index":478,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.style.left",{"_index":471,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.style.opacity",{"_index":473,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.style.position",{"_index":467,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.style.top",{"_index":472,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.style.zindex",{"_index":469,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.value",{"_index":474,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["select",{"_index":1660,"title":{},"body":{"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"modules/SerSelectModule.html":{},"coverage.html":{}}}],["select'},{'name",{"_index":1485,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["select.component",{"_index":1923,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["select.component.ts",{"_index":2589,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["select.interface.ts",{"_index":624,"title":{},"body":{"interfaces/DropdownSettings.html":{},"coverage.html":{}}}],["select.module",{"_index":1907,"title":{},"body":{"modules/SerFormModule.html":{}}}],["select.module.ts",{"_index":1921,"title":{},"body":{"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["select.service",{"_index":1924,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["select.service.ts",{"_index":575,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["select.service.ts:23",{"_index":581,"title":{},"body":{"injectables/DataService.html":{}}}],["select.service.ts:9",{"_index":584,"title":{},"body":{"injectables/DataService.html":{}}}],["select/ser",{"_index":1906,"title":{},"body":{"modules/SerFormModule.html":{}}}],["selectalltext",{"_index":646,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["selectgroup",{"_index":647,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["selector",{"_index":179,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["sell",{"_index":2712,"title":{},"body":{"license.html":{}}}],["ser",{"_index":53,"title":{},"body":{"modules/AwsModule.html":{},"interfaces/CenterPoint.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"index.html":{},"license.html":{}}}],["sercontrol",{"_index":1673,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["sercontrol]'},{'name",{"_index":1502,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["sercontroldirective",{"_index":1501,"title":{"directives/SerControlDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sererror",{"_index":1721,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["sererror(value",{"_index":1754,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["sererror]'},{'name",{"_index":1504,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["sererrordirective",{"_index":1503,"title":{"directives/SerErrorDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sererrors",{"_index":1782,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["sererrors]'},{'name",{"_index":1506,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["sererrorsdirective",{"_index":1505,"title":{"directives/SerErrorsDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["serfiltercomponent",{"_index":1480,"title":{},"body":{"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serfiltermodule",{"_index":1840,"title":{"modules/SerFilterModule.html":{}},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules.html":{},"overview.html":{}}}],["serformelementcomponent",{"_index":1482,"title":{"components/SerFormElementComponent.html":{}},"body":{"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["serformmodule",{"_index":1896,"title":{"modules/SerFormModule.html":{}},"body":{"modules/SerFormModule.html":{},"modules.html":{},"overview.html":{}}}],["serselectcomponent",{"_index":1484,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serselectmodule",{"_index":1900,"title":{"modules/SerSelectModule.html":{}},"body":{"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules.html":{},"overview.html":{}}}],["sersol/leaflet",{"_index":1104,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"dependencies.html":{}}}],["sersol/ngx",{"_index":48,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["seruimodule",{"_index":1927,"title":{"modules/SerUiModule.html":{}},"body":{"modules/SerUiModule.html":{},"modules.html":{},"overview.html":{}}}],["servicio",{"_index":45,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{}}}],["sesión",{"_index":754,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["set",{"_index":117,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerErrorDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["set(name",{"_index":414,"title":{},"body":{"injectables/CookiesService.html":{}}}],["setawsdata(value",{"_index":93,"title":{},"body":{"injectables/AwsService.html":{}}}],["setbowserclasses",{"_index":2621,"title":{},"body":{"coverage.html":{}}}],["setclientconfig(value",{"_index":697,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["setconfig(value",{"_index":734,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["setdisabledstate",{"_index":1387,"title":{},"body":{"components/PinInputComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1419,"title":{},"body":{"components/PinInputComponent.html":{}}}],["setea",{"_index":393,"title":{},"body":{"injectables/CookiesService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["setenabled",{"_index":894,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["setenabled(e",{"_index":912,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["setgoogleauth(value",{"_index":961,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["setinterval",{"_index":2458,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["setisenabled(value",{"_index":887,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["setopeniddata(value",{"_index":253,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["setscheme",{"_index":1597,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["setscheme(value",{"_index":1548,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["setschemedarkclassname(value",{"_index":1556,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["setschemelightclassname(value",{"_index":1552,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["setsererror(value",{"_index":1742,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["settimeout",{"_index":841,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerErrorsDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["settings",{"_index":319,"title":{},"body":{"classes/Color.html":{}}}],["setvalueanderrors(this",{"_index":1988,"title":{},"body":{"interfaces/String.html":{}}}],["setview",{"_index":1054,"title":{},"body":{"classes/LeafletMap.html":{}}}],["setview(latlng",{"_index":1099,"title":{},"body":{"classes/LeafletMap.html":{}}}],["setwhen(value",{"_index":1743,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["shall",{"_index":2720,"title":{},"body":{"license.html":{}}}],["shift",{"_index":2817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["short",{"_index":2377,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["show",{"_index":1435,"title":{},"body":{"components/PinInputComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["showcheckbox",{"_index":648,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["shrink",{"_index":2070,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["si",{"_index":105,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["simple",{"_index":1317,"title":{},"body":{"injectables/MapService.html":{}}}],["sin",{"_index":84,"title":{},"body":{"injectables/AwsService.html":{}}}],["singleselection",{"_index":649,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["sistema",{"_index":1575,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["size",{"_index":545,"title":{},"body":{"classes/CustomValidators.html":{}}}],["sizechanged",{"_index":2276,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["sized",{"_index":2361,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["sizing",{"_index":2063,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["sliced",{"_index":2337,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["snackbar",{"_index":1954,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["snackbaropts",{"_index":1943,"title":{"interfaces/SnackbarOpts.html":{}},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["snackbarservice",{"_index":1949,"title":{"injectables/SnackbarService.html":{}},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["software",{"_index":2698,"title":{},"body":{"license.html":{}}}],["soluciones",{"_index":2688,"title":{},"body":{"license.html":{}}}],["son",{"_index":535,"title":{},"body":{"classes/CustomValidators.html":{},"injectables/MapService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{}}}],["space",{"_index":2067,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["spec\\.ts",{"_index":2809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specialchars",{"_index":1614,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["split",{"_index":434,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src",{"_index":667,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["src/.../array.ts",{"_index":2771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../aws.service.ts",{"_index":2764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../facebook",{"_index":2769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google",{"_index":2770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../keyboard",{"_index":2767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../patterns.ts",{"_index":2765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../providers.ts",{"_index":2768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ser",{"_index":2762,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/aws/aws.module.ts",{"_index":21,"title":{},"body":{"modules/AwsModule.html":{}}}],["src/aws/aws.module.ts:32",{"_index":28,"title":{},"body":{"modules/AwsModule.html":{}}}],["src/aws/aws.service.ts",{"_index":64,"title":{},"body":{"injectables/AwsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/aws/aws.service.ts:18",{"_index":90,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/aws.service.ts:19",{"_index":92,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/aws.service.ts:22",{"_index":94,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/aws.service.ts:24",{"_index":75,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/aws.service.ts:38",{"_index":89,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/aws.service.ts:54",{"_index":78,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/iaws.ts",{"_index":6,"title":{},"body":{"interfaces/AwsData.html":{},"interfaces/S3.html":{},"coverage.html":{}}}],["src/cookie/cookies.service.ts",{"_index":384,"title":{},"body":{"injectables/CookiesService.html":{},"coverage.html":{}}}],["src/cookie/cookies.service.ts:136",{"_index":407,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/cookie/cookies.service.ts:145",{"_index":409,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/cookie/cookies.service.ts:17",{"_index":403,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/cookie/cookies.service.ts:26",{"_index":412,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/cookie/cookies.service.ts:64",{"_index":411,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/cookie/cookies.service.ts:85",{"_index":421,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/external",{"_index":658,"title":{},"body":{"injectables/ExternalScriptService.html":{},"coverage.html":{}}}],["src/facebook/config/facebook",{"_index":688,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"coverage.html":{}}}],["src/facebook/facebook",{"_index":704,"title":{},"body":{"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/facebook/ifacebook.ts",{"_index":815,"title":{},"body":{"interfaces/FacebookUserProfile.html":{},"coverage.html":{}}}],["src/file/read.ts",{"_index":2577,"title":{},"body":{"coverage.html":{}}}],["src/form/address/address",{"_index":2581,"title":{},"body":{"coverage.html":{}}}],["src/form/filter/ser",{"_index":818,"title":{},"body":{"interfaces/FilterSettings.html":{},"modules/SerFilterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/form/grow",{"_index":994,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"coverage.html":{}}}],["src/form/pin/pin",{"_index":1362,"title":{},"body":{"components/PinInputComponent.html":{},"coverage.html":{}}}],["src/form/select/ser",{"_index":574,"title":{},"body":{"injectables/DataService.html":{},"interfaces/DropdownSettings.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/form/select/virtual",{"_index":1021,"title":{},"body":{"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["src/form/ser",{"_index":652,"title":{},"body":{"interfaces/ErrorDetails.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/form/validations/comparison.ts",{"_index":2599,"title":{},"body":{"coverage.html":{}}}],["src/form/validations/custom",{"_index":483,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["src/form/validations/file.ts",{"_index":2601,"title":{},"body":{"coverage.html":{}}}],["src/form/validations/match.ts",{"_index":2602,"title":{},"body":{"coverage.html":{}}}],["src/form/validations/remote.ts",{"_index":132,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"coverage.html":{}}}],["src/fullscreen/fullscreen",{"_index":844,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"coverage.html":{}}}],["src/fullscreen/fullscreen.service.ts",{"_index":861,"title":{},"body":{"injectables/FullscreenService.html":{},"coverage.html":{}}}],["src/fullscreen/fullscreen.service.ts:106",{"_index":883,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:19",{"_index":884,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:20",{"_index":886,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:23",{"_index":888,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:25",{"_index":877,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:67",{"_index":882,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:86",{"_index":881,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/google/config/google",{"_index":936,"title":{},"body":{"classes/GoogleSDKConfig.html":{},"coverage.html":{}}}],["src/google/google",{"_index":938,"title":{},"body":{"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/google/igoogle.ts",{"_index":931,"title":{},"body":{"classes/GoogleClientConfig.html":{},"interfaces/GoogleUserProfile.html":{},"coverage.html":{}}}],["src/graphql/utils.ts",{"_index":2604,"title":{},"body":{"coverage.html":{}}}],["src/interfaces/string.extensions.ts",{"_index":1972,"title":{},"body":{"interfaces/String.html":{},"coverage.html":{}}}],["src/interfaces/string.extensions.ts:3",{"_index":1975,"title":{},"body":{"interfaces/String.html":{}}}],["src/map/leaflet/main.ts",{"_index":1045,"title":{},"body":{"classes/LeafletMap.html":{},"coverage.html":{}}}],["src/map/leaflet/main.ts:112",{"_index":1085,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:12",{"_index":1061,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:125",{"_index":1098,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:13",{"_index":1064,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:137",{"_index":1101,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:14",{"_index":1063,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:149",{"_index":1087,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:15",{"_index":1059,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:16",{"_index":1083,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:36",{"_index":1057,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:59",{"_index":1092,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:66",{"_index":1091,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/providers.ts",{"_index":2606,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/map/leaflet/types.ts",{"_index":1177,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"coverage.html":{}}}],["src/map/map.service.ts",{"_index":1273,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/map/map.service.ts:22",{"_index":1295,"title":{},"body":{"injectables/MapService.html":{}}}],["src/map/map.service.ts:44",{"_index":1280,"title":{},"body":{"injectables/MapService.html":{}}}],["src/map/map.service.ts:52",{"_index":1289,"title":{},"body":{"injectables/MapService.html":{}}}],["src/map/map.service.ts:58",{"_index":1286,"title":{},"body":{"injectables/MapService.html":{}}}],["src/map/map.service.ts:67",{"_index":1310,"title":{},"body":{"injectables/MapService.html":{}}}],["src/map/types.ts",{"_index":209,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"coverage.html":{}}}],["src/open",{"_index":226,"title":{},"body":{"injectables/ClaimsService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{}}}],["src/prefers",{"_index":1513,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{},"coverage.html":{}}}],["src/test.ts",{"_index":2609,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/ui/bg",{"_index":165,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{}}}],["src/ui/copy",{"_index":445,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"coverage.html":{}}}],["src/ui/download.service.ts",{"_index":601,"title":{},"body":{"injectables/DownloadService.html":{},"coverage.html":{}}}],["src/ui/download.service.ts:20",{"_index":605,"title":{},"body":{"injectables/DownloadService.html":{}}}],["src/ui/download.service.ts:8",{"_index":603,"title":{},"body":{"injectables/DownloadService.html":{}}}],["src/ui/finish",{"_index":821,"title":{},"body":{"directives/FinishTypingDirective.html":{},"coverage.html":{}}}],["src/ui/long",{"_index":1185,"title":{},"body":{"directives/LongPressDirective.html":{},"coverage.html":{}}}],["src/ui/ser",{"_index":1931,"title":{},"body":{"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/ui/snackbar.service.ts",{"_index":1944,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["src/ui/snackbar.service.ts:18",{"_index":1971,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/ui/toggle",{"_index":1993,"title":{},"body":{"directives/ToggleClassDirective.html":{},"coverage.html":{}}}],["src/ui/when",{"_index":2552,"title":{},"body":{"directives/WhenScrolledDirective.html":{},"coverage.html":{}}}],["src/utils/array.ts",{"_index":2613,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/avatar.ts",{"_index":274,"title":{},"body":{"classes/Color.html":{},"coverage.html":{}}}],["src/utils/avatar.ts:10",{"_index":295,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:11",{"_index":293,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:13",{"_index":302,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:14",{"_index":297,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:16",{"_index":306,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:17",{"_index":301,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:19",{"_index":304,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:20",{"_index":299,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:22",{"_index":291,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:46",{"_index":316,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:51",{"_index":311,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:57",{"_index":313,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:8",{"_index":294,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:9",{"_index":307,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/bowser.ts",{"_index":2620,"title":{},"body":{"coverage.html":{}}}],["src/utils/check.ts",{"_index":2622,"title":{},"body":{"coverage.html":{}}}],["src/utils/keyboard",{"_index":2624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/navigator.ts",{"_index":2627,"title":{},"body":{"coverage.html":{}}}],["src/utils/object.ts",{"_index":2631,"title":{},"body":{"coverage.html":{}}}],["src/utils/patterns.ts",{"_index":2632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/random.ts",{"_index":1610,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"coverage.html":{}}}],["src/utils/rx",{"_index":2638,"title":{},"body":{"coverage.html":{}}}],["ssrchildheight",{"_index":2096,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ssrchildwidth",{"_index":2095,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ssrviewportheight",{"_index":2099,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ssrviewportwidth",{"_index":2097,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["start",{"_index":2223,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["startchanged",{"_index":2400,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["started",{"_index":2679,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":1039,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["startindexwithbuffer",{"_index":1040,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["state",{"_index":1989,"title":{},"body":{"interfaces/String.html":{}}}],["statements",{"_index":2569,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1725,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["states.indexof(rule",{"_index":1770,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["static",{"_index":23,"title":{},"body":{"modules/AwsModule.html":{},"classes/CustomValidators.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["stopped",{"_index":2370,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["street",{"_index":1078,"title":{},"body":{"classes/LeafletMap.html":{},"miscellaneous/variables.html":{}}}],["strict",{"_index":420,"title":{},"body":{"injectables/CookiesService.html":{}}}],["string",{"_index":14,"title":{"interfaces/String.html":{}},"body":{"interfaces/AwsData.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string.prototype.tocapitalize",{"_index":1981,"title":{},"body":{"interfaces/String.html":{}}}],["stripedtable",{"_index":2012,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["styles",{"_index":2040,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["su",{"_index":561,"title":{},"body":{"classes/CustomValidators.html":{}}}],["subject",{"_index":1737,"title":{},"body":{"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"license.html":{}}}],["sublicense",{"_index":2710,"title":{},"body":{"license.html":{}}}],["subscribe(([states",{"_index":1773,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["subscription",{"_index":1008,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"components/SerFormElementComponent.html":{}}}],["substantial",{"_index":2722,"title":{},"body":{"license.html":{}}}],["substring(1",{"_index":1638,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["sumofknownwrapgroupchildheights",{"_index":2564,"title":{},"body":{"interfaces/WrapGroupDimensions.html":{}}}],["sumofknownwrapgroupchildwidths",{"_index":2565,"title":{},"body":{"interfaces/WrapGroupDimensions.html":{}}}],["sumofvisiblemaxheights",{"_index":2510,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["sumofvisiblemaxwidths",{"_index":2509,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["support",{"_index":2752,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2753,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":148,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["switchmap((value",{"_index":156,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["t",{"_index":596,"title":{},"body":{"injectables/DataService.html":{}}}],["tab",{"_index":2826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":174,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["tamaño",{"_index":541,"title":{},"body":{"classes/CustomValidators.html":{},"interfaces/RandomPasswordOps.html":{}}}],["target",{"_index":1462,"title":{},"body":{"components/PinInputComponent.html":{}}}],["target.value",{"_index":1465,"title":{},"body":{"components/PinInputComponent.html":{}}}],["targetlatlng",{"_index":1170,"title":{},"body":{"classes/LeafletMap.html":{}}}],["targetpathfield",{"_index":513,"title":{},"body":{"classes/CustomValidators.html":{}}}],["targetpoint",{"_index":1167,"title":{},"body":{"classes/LeafletMap.html":{}}}],["targetzoom",{"_index":1100,"title":{},"body":{"classes/LeafletMap.html":{}}}],["targetzoom).subtract(offset",{"_index":1169,"title":{},"body":{"classes/LeafletMap.html":{}}}],["tema",{"_index":1592,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["template",{"_index":1359,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{}}}],["templateref",{"_index":1664,"title":{},"body":{"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{}}}],["templateurl",{"_index":1371,"title":{},"body":{"components/PinInputComponent.html":{}}}],["text",{"_index":1442,"title":{},"body":{"components/PinInputComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["text/javascript",{"_index":806,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["textarea",{"_index":1015,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["think",{"_index":2356,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["third_id",{"_index":1352,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["this._awsdata",{"_index":116,"title":{},"body":{"injectables/AwsService.html":{}}}],["this._bufferamount",{"_index":2103,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._checkresizeinterval",{"_index":2123,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._childscrolldim",{"_index":2299,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._clientconfig",{"_index":700,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["this._config",{"_index":743,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["this._elementref.nativeelement.nodename",{"_index":1014,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["this._elementref.nativeelement.rows",{"_index":1019,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["this._enableunequalchildrensizes",{"_index":2090,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._form.control.get(this.controlname",{"_index":1836,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this._googleauth",{"_index":967,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["this._horizontal",{"_index":2135,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._invisiblepaddingproperty",{"_index":2294,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._isenabled",{"_index":892,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this._items",{"_index":2128,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._margindir",{"_index":2300,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._ngcontrol?.control?.dirty",{"_index":1709,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._ngcontrol?.control?.disabled",{"_index":1711,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._ngcontrol?.control?.invalid",{"_index":1707,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._ngcontrol?.control?.pending",{"_index":1713,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._ngcontrol?.control?.valid",{"_index":1705,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._ngcontrol?.control?.valuechanges.subscribe((value",{"_index":1716,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._offsettype",{"_index":2295,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._openiddata",{"_index":259,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this._pageoffsettype",{"_index":2297,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._parentscroll",{"_index":2147,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._renderer?.listen(this._elementref.nativeelement",{"_index":1013,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["this._scheme",{"_index":1561,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this._schemedarkclassname",{"_index":1565,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this._schemelightclassname",{"_index":1563,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this._scrolldebouncetime",{"_index":2111,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._scrollthrottlingtime",{"_index":2107,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._scrolltype",{"_index":2212,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._sererrors.control",{"_index":1778,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this._sererrors.subject",{"_index":1764,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this._states",{"_index":1761,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this._states.asobservable().distinctuntilchanged",{"_index":1763,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this._states.next",{"_index":1776,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this._translatedir",{"_index":2302,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._translatedir}(${offset}px",{"_index":2431,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._translatedir}(${viewport.padding}px",{"_index":2423,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.addscrolleventhandlers",{"_index":2125,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.applyfilter(item",{"_index":590,"title":{},"body":{"injectables/DataService.html":{}}}],["this.aws.gets3bgurl(this.image.url",{"_index":198,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["this.awsdata",{"_index":120,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.awsservice.gets3url(&#39;assets/file.png&#39",{"_index":87,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.awsservice.gets3url('assets/file.png",{"_index":127,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.bufferamount",{"_index":2538,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.cacheditemslength",{"_index":2169,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.calculatedimensions",{"_index":2200,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.calculatepadding(index",{"_index":2201,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.calculatepadding(pageinfo.startindexwithbuffer",{"_index":2547,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.calculatepageinfo(scrollstartposition",{"_index":2545,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.calculateviewport",{"_index":2399,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.callback.emit",{"_index":842,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["this.caninputvalue(e.key.tolowercase",{"_index":1471,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.caninputvalue(value",{"_index":1467,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.changedetectorref.markforcheck",{"_index":2443,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.checkpropstate('invalid",{"_index":1824,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.checkpropstate('valid",{"_index":1825,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.checkresizeinterval",{"_index":2247,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.checkscrollelementresized",{"_index":2459,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.checkscrollelementresizedtimer",{"_index":2457,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.checkstatus",{"_index":1837,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.childheight",{"_index":2488,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.childwidth",{"_index":2487,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.claimsservice.atleastpermissions([&#39;users.view&#39",{"_index":238,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimsservice.atleastpermissions(['users.view",{"_index":268,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimsservice.haspermission(&#39;users.view&#39",{"_index":246,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimsservice.haspermission('users.view",{"_index":262,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimsservice.haspermissions([&#39;users.view&#39",{"_index":249,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.clientconfig",{"_index":702,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["this.codeinputs",{"_index":1443,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.codelength",{"_index":1460,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.compareitems(oldstartitem",{"_index":2395,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.config",{"_index":747,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["this.containerelementref",{"_index":2463,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.containerelementref.nativeelement",{"_index":2464,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.containerelementref.nativeelement[this._offsettype",{"_index":2465,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.contentelementref.nativeelement).children",{"_index":2482,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.control",{"_index":1832,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control.errors",{"_index":1822,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control.geterror(name",{"_index":1826,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control.haserror(name",{"_index":1831,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control.statuschanges.subscribe(this.checkstatus.bind(this",{"_index":1838,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control[condition",{"_index":1829,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control[prop",{"_index":1830,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.cookiesservice.delete('test",{"_index":394,"title":{},"body":{"injectables/CookiesService.html":{}}}],["this.cookiesservice.deleteall",{"_index":396,"title":{},"body":{"injectables/CookiesService.html":{}}}],["this.cookiesservice.get('test",{"_index":386,"title":{},"body":{"injectables/CookiesService.html":{}}}],["this.cookiesservice.set('test",{"_index":391,"title":{},"body":{"injectables/CookiesService.html":{}}}],["this.copied.emit(this.valtocopy",{"_index":481,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["this.currenttween",{"_index":2209,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.currenttween.stop",{"_index":2210,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.dark",{"_index":1587,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.debounce",{"_index":2117,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.dirty",{"_index":1708,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.disable",{"_index":928,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.disabled",{"_index":1710,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.dismiss",{"_index":1271,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.disposeresizehandler",{"_index":2454,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.disposescrollhandler",{"_index":2452,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.downloadelement",{"_index":607,"title":{},"body":{"injectables/DownloadService.html":{}}}],["this.downloadelement.click",{"_index":621,"title":{},"body":{"injectables/DownloadService.html":{}}}],["this.downloadelement.setattribute('download",{"_index":619,"title":{},"body":{"injectables/DownloadService.html":{}}}],["this.downloadelement.setattribute('href",{"_index":618,"title":{},"body":{"injectables/DownloadService.html":{}}}],["this.downloadelement.setattribute('target",{"_index":609,"title":{},"body":{"injectables/DownloadService.html":{}}}],["this.el.nativeelement",{"_index":2000,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["this.element.nativeelement",{"_index":2151,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.enable",{"_index":929,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.enabledark",{"_index":1578,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.enablelight",{"_index":1579,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.enableunequalchildrensizes",{"_index":2104,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.endpress",{"_index":1264,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.errornames",{"_index":1755,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.errornames.indexof(obj.errorname",{"_index":1767,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.errors",{"_index":1823,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.errors.hasownproperty(errorname",{"_index":1834,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.executerefreshoutsideangularzone",{"_index":2445,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.externalscriptservice.insert('google",{"_index":661,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["this.focus",{"_index":1700,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.formelement?.dirty",{"_index":1889,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.disabled",{"_index":1882,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.focus",{"_index":1884,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.hasvalue",{"_index":1887,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.invalid",{"_index":1893,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.pending",{"_index":1895,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.valid",{"_index":1891,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.fsdkurl",{"_index":804,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["this.fullscreenservice.disable",{"_index":868,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.fullscreenservice.enable",{"_index":863,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.fullscreenservice.isenabled",{"_index":870,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.gapiurl",{"_index":986,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["this.getelementsize(child",{"_index":2492,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getelementsize(scrollelement",{"_index":2469,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getelementsize(this.element.nativeelement",{"_index":2467,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getelementsize(this.getscrollelement",{"_index":2275,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getelementsoffset",{"_index":2207,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getscrollelement",{"_index":2140,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getscrollelement()[this._scrolltype",{"_index":2426,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getscrollstartposition",{"_index":2542,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.googleauth",{"_index":989,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["this.googleauth.signin().then((res",{"_index":972,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["this.hasvalue",{"_index":1703,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.headerelementref",{"_index":2425,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.headerelementref.nativeelement.clientheight",{"_index":2429,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.hidden",{"_index":1774,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.horizontal",{"_index":2152,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.hue",{"_index":328,"title":{},"body":{"classes/Color.html":{}}}],["this.image.file",{"_index":190,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["this.imageregex.test(this.image.file.type",{"_index":192,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["this.initmarkercluster",{"_index":1127,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.inputchangedpromise",{"_index":839,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["this.inputs.foreach((input",{"_index":1456,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.inputs.push(item.nativeelement",{"_index":1450,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.inputs[prev].focus",{"_index":1470,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.inputslist.foreach((item",{"_index":1445,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.invalid",{"_index":1706,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.invalidatecachedmeasurementatindex(index",{"_index":2179,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.isangularuniversalssr",{"_index":2238,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.iscodehidden",{"_index":1440,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.isenabled",{"_index":900,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.items.findindex(x",{"_index":2394,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.items.indexof(item",{"_index":2193,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.items.length",{"_index":2170,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.items.slice(viewport.startindexwithbuffer",{"_index":2439,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.layercontrol",{"_index":1113,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.listener",{"_index":836,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["this.loadsdk().subscribe",{"_index":749,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["this.longpressing",{"_index":1236,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.loop(event",{"_index":1252,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.map",{"_index":1110,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.addcontrol(new",{"_index":1116,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.addcontrol(this.layercontrol",{"_index":1118,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.addlayer(this.markercluster",{"_index":1130,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.containerpointtolatlng([x",{"_index":1163,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.fitbounds(group.getbounds",{"_index":1151,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.flyto([options.lat",{"_index":1173,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.flytobounds(group.getbounds",{"_index":1144,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.getzoom",{"_index":1165,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.latlngtocontainerpoint(latlng).x",{"_index":1158,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.latlngtocontainerpoint(latlng).y",{"_index":1160,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.project(latlng",{"_index":1168,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.setview([this.options.initialview.lat",{"_index":1121,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.setview(latlng",{"_index":1166,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.setview(point",{"_index":1164,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.setview(targetlatlng",{"_index":1172,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.unproject(targetpoint",{"_index":1171,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.mapservice.getcurrentposition().pipe(take(1)).subscribe",{"_index":1300,"title":{},"body":{"injectables/MapService.html":{}}}],["this.markercluster",{"_index":1128,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.markercluster.addlayer(this.markers[id",{"_index":1155,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.markers",{"_index":1134,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.markers[id",{"_index":1152,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.markers[id].addto(this.map",{"_index":1156,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.maxhue",{"_index":330,"title":{},"body":{"classes/Color.html":{}}}],["this.maxlight",{"_index":327,"title":{},"body":{"classes/Color.html":{}}}],["this.minlight",{"_index":325,"title":{},"body":{"classes/Color.html":{}}}],["this.minmeasuredchildheight",{"_index":2093,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.minmeasuredchildwidth",{"_index":2092,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.modifyoverflowstyleofparentscroll",{"_index":2150,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.mousex",{"_index":1244,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.mousey",{"_index":1246,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.observer",{"_index":1715,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.observer?.unsubscribe",{"_index":1718,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.oldparentscrolloverflow",{"_index":2141,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.oldparentscrolloverflow.x",{"_index":2144,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.oldparentscrolloverflow.y",{"_index":2143,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.onchangevalue(this._ngcontrol?.control?.value",{"_index":1714,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.onchangevalue(value",{"_index":1717,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.onload.emit",{"_index":752,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["this.onlongpress.emit(event",{"_index":1251,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.onlongpressend.emit(true",{"_index":1259,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.onlongpressing.emit(event",{"_index":1255,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.onlynumber",{"_index":1451,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.onscroll",{"_index":2116,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.onshortpress.emit",{"_index":1258,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.ontouch",{"_index":1466,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.openiddata.claims.indexof(requiredpermission",{"_index":263,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.options.clustermarkers.config",{"_index":1129,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.options.clustermarkers.enable",{"_index":1126,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.options.initialview.lng",{"_index":1122,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.options.initialview.zoom",{"_index":1123,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.options.layersoptions",{"_index":1115,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.options.mapoptions",{"_index":1112,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.parentscroll",{"_index":2448,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.pending",{"_index":1712,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.preferscolorschemeservice.init",{"_index":1517,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.preferscolorschemeservice.watch",{"_index":1520,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.pressduration",{"_index":1254,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.pressing",{"_index":1234,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.previousscrollboundingrect",{"_index":2277,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousscrollboundingrect.height",{"_index":2283,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousscrollboundingrect.width",{"_index":2280,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport",{"_index":2078,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.endindex",{"_index":2405,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.maxscrollposition",{"_index":2416,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.padding",{"_index":2410,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.scrollendposition",{"_index":2414,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.scrolllength",{"_index":2389,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.scrollstartposition",{"_index":2381,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.startindex",{"_index":2402,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.startindexwithbuffer",{"_index":2396,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.randomnum(this.minhue",{"_index":329,"title":{},"body":{"classes/Color.html":{}}}],["this.ready",{"_index":1821,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.refresh_internal(false",{"_index":2118,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.refresh_internal(indexlengthchanged",{"_index":2175,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.refresh_internal(true",{"_index":2130,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.removescrolleventhandlers",{"_index":2166,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.rendered.removestyle(this.el.nativeelement",{"_index":199,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["this.rendered.setstyle(this.el.nativeelement",{"_index":194,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["this.renderer.listen('window",{"_index":2453,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.renderer.listen(scrollelement",{"_index":2456,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.renderer.setproperty(scrollelement",{"_index":2211,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.renderer.setstyle(this.contentelementref.nativeelement",{"_index":2420,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.renderer.setstyle(this.headerelementref.nativeelement",{"_index":2430,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.renderer.setstyle(this.invisiblepaddingelementref.nativeelement",{"_index":2417,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.resetwrapgroupdimensions",{"_index":2254,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.resizebypassrefreshthreshold",{"_index":2249,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.revertparentoverscroll",{"_index":2149,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.rules",{"_index":1758,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.rules.every(rule",{"_index":1769,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.rules.filter((rule",{"_index":1777,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.scalelight",{"_index":340,"title":{},"body":{"classes/Color.html":{}}}],["this.scheme",{"_index":1567,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.addeventlistener",{"_index":1604,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.addeventlistener('change",{"_index":1605,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.addlistener",{"_index":1607,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.addlistener(setscheme",{"_index":1608,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.matches",{"_index":1577,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.onchange",{"_index":1603,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scrollanimationtime",{"_index":2198,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrollbarheight",{"_index":2245,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrollbarwidth",{"_index":2243,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrolldebouncetime",{"_index":2115,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrollthrottlingtime",{"_index":2119,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrolltoindex(index",{"_index":2194,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrolltoposition(scroll",{"_index":2204,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.setvalue(state",{"_index":1992,"title":{},"body":{"interfaces/String.html":{}}}],["this.ssrchildheight",{"_index":2477,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.ssrchildwidth",{"_index":2479,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.ssrviewportheight",{"_index":2476,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.ssrviewportwidth",{"_index":2478,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.states",{"_index":1762,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.stripedtable",{"_index":2252,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.subject.next",{"_index":1835,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.subject.unsubscribe",{"_index":1839,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.subscription",{"_index":1771,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.subscription.unsubscribe",{"_index":1780,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.throttletrailing",{"_index":2120,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.throttletrailing(func",{"_index":2312,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.timeout",{"_index":1250,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.type",{"_index":1439,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.updatedirection",{"_index":2137,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.updateonscrollfunction",{"_index":2109,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.usemargininsteadoftranslate",{"_index":2419,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.valid",{"_index":1704,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.valtocopy",{"_index":475,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["this.value",{"_index":1437,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.value[i",{"_index":1449,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.viewportitems",{"_index":2176,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.viewportitems.length",{"_index":2177,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.vschange.emit(changeeventarg",{"_index":2444,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.vsend.emit(changeeventarg",{"_index":2442,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.vsstart.emit(changeeventarg",{"_index":2441,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.vsupdate.emit(this.viewportitems",{"_index":2440,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.wrapgroupdimensions.maxchildsizeperwrapgroup[index",{"_index":2182,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.wrapgroupdimensions.numberofknownwrapgroupchildsizes",{"_index":2183,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.wrapgroupdimensions.sumofknownwrapgroupchildheights",{"_index":2186,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.wrapgroupdimensions.sumofknownwrapgroupchildwidths",{"_index":2184,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.zone.run(handlechanged",{"_index":2446,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.zone.runoutsideangular",{"_index":2229,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["throttled",{"_index":2311,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["throttled.apply(this",{"_index":2314,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["throttled['cancel",{"_index":2313,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["throttletrailing(func",{"_index":2316,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tiene",{"_index":108,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{}}}],["tilesize",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":2225,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["timeout",{"_index":1192,"title":{},"body":{"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["timer",{"_index":1948,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["timer(1000",{"_index":1964,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["timestamp",{"_index":423,"title":{},"body":{"injectables/CookiesService.html":{}}}],["toarray",{"_index":1753,"title":{},"body":{"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toarray(conditions).every((condition",{"_index":1828,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["toarray(value",{"_index":1756,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["tocapitalize",{"_index":1973,"title":{},"body":{"interfaces/String.html":{}}}],["tocapitalize(...args",{"_index":1974,"title":{},"body":{"interfaces/String.html":{}}}],["todas",{"_index":397,"title":{},"body":{"injectables/CookiesService.html":{}}}],["today",{"_index":1632,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["toggle",{"_index":875,"title":{},"body":{"injectables/FullscreenService.html":{},"injectables/PrefersColorSchemeService.html":{},"modules/SerUiModule.html":{}}}],["toggleclass",{"_index":1995,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["toggleclass]'},{'name",{"_index":1508,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["toggleclassdirective",{"_index":1507,"title":{"directives/ToggleClassDirective.html":{}},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"directives/ToggleClassDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":427,"title":{},"body":{"injectables/CookiesService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["tooltipster",{"_index":2673,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":2054,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["topright",{"_index":1082,"title":{},"body":{"classes/LeafletMap.html":{}}}],["tort",{"_index":2745,"title":{},"body":{"license.html":{}}}],["tostring(16",{"_index":1637,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["total",{"_index":2072,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["touch",{"_index":2047,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["touchevent",{"_index":1216,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["tradicional",{"_index":613,"title":{},"body":{"injectables/DownloadService.html":{}}}],["transform",{"_index":2422,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["translatex",{"_index":2303,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["translatey",{"_index":2307,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tree",{"_index":1361,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["trigger",{"_index":2438,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["true",{"_index":162,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"injectables/DataService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2675,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":176,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["tween",{"_index":2024,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tween.tween",{"_index":2320,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tween.tween(tweenconfigobj",{"_index":2216,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tweenconfigobj",{"_index":2213,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tweenconfigobj.scrollposition",{"_index":2228,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tweenjs/tween.js",{"_index":2025,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"dependencies.html":{}}}],["type",{"_index":10,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2760,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1344,"title":{},"body":{"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"modules/VirtualScrollerModule.html":{}}}],["types",{"_index":322,"title":{},"body":{"classes/Color.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{}}}],["types/facebook",{"_index":2651,"title":{},"body":{"dependencies.html":{}}}],["types/gapi",{"_index":2653,"title":{},"body":{"dependencies.html":{}}}],["types/gapi.auth2",{"_index":2655,"title":{},"body":{"dependencies.html":{}}}],["typically",{"_index":2350,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["typing.directive",{"_index":1935,"title":{},"body":{"modules/SerUiModule.html":{}}}],["typing.directive.ts",{"_index":822,"title":{},"body":{"directives/FinishTypingDirective.html":{},"coverage.html":{}}}],["typing.directive.ts:10",{"_index":835,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["typing.directive.ts:11",{"_index":830,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["typing.directive.ts:26",{"_index":833,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["typing.directive.ts:9",{"_index":832,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["ugly",{"_index":332,"title":{},"body":{"classes/Color.html":{}}}],["ui",{"_index":368,"title":{},"body":{"classes/Color.html":{},"index.html":{}}}],["ui.module.ts",{"_index":1932,"title":{},"body":{"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":261,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/String.html":{}}}],["una",{"_index":389,"title":{},"body":{"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/FullscreenService.html":{}}}],["undefined",{"_index":899,"title":{},"body":{"injectables/FullscreenService.html":{},"modules/VirtualScrollerModule.html":{}}}],["unicamente",{"_index":1571,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["uniqueid",{"_index":1631,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"coverage.html":{}}}],["unix",{"_index":422,"title":{},"body":{"injectables/CookiesService.html":{}}}],["unselectalltext",{"_index":650,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["until",{"_index":2369,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["up",{"_index":2529,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":2436,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["updatedirection",{"_index":2293,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["updateonscrollfunction",{"_index":2114,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["url",{"_index":123,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{}}}],["url(${result",{"_index":196,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["url(https://${this.awsdata.s3.bucket}.s3.amazonaws.com/${key",{"_index":130,"title":{},"body":{"injectables/AwsService.html":{}}}],["url.split('/').pop",{"_index":620,"title":{},"body":{"injectables/DownloadService.html":{}}}],["usado",{"_index":220,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["usagenotes",{"_index":1569,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["usando",{"_index":1299,"title":{},"body":{"injectables/MapService.html":{}}}],["usarse",{"_index":1570,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["use",{"_index":2706,"title":{},"body":{"license.html":{}}}],["useexisting",{"_index":1367,"title":{},"body":{"components/PinInputComponent.html":{}}}],["usefactory",{"_index":2551,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["usemargininsteadoftranslate",{"_index":2094,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["user",{"_index":788,"title":{},"body":{"injectables/FacebookSDKService.html":{},"modules/VirtualScrollerModule.html":{}}}],["users.add",{"_index":270,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["users.update",{"_index":269,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["usevalue",{"_index":52,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["usuario",{"_index":107,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/DownloadService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["utils.ts",{"_index":2639,"title":{},"body":{"coverage.html":{}}}],["utils/array",{"_index":258,"title":{},"body":{"injectables/ClaimsService.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{}}}],["utils/check",{"_index":101,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/DataService.html":{},"classes/LeafletMap.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{}}}],["utils/object",{"_index":1108,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["v11",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v6.0",{"_index":719,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["val.charat(0).touppercase",{"_index":1984,"title":{},"body":{"interfaces/String.html":{}}}],["val.slice(1",{"_index":1985,"title":{},"body":{"interfaces/String.html":{}}}],["valid",{"_index":1679,"title":{},"body":{"directives/SerControlDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{}}}],["validaciones",{"_index":485,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validationerrors",{"_index":141,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["validatorfn",{"_index":522,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts",{"_index":484,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["validators.ts:19",{"_index":531,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:28",{"_index":568,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:37",{"_index":528,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:46",{"_index":526,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:55",{"_index":524,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:64",{"_index":514,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:72",{"_index":540,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:80",{"_index":552,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:88",{"_index":555,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:98",{"_index":498,"title":{},"body":{"classes/CustomValidators.html":{}}}],["valor",{"_index":388,"title":{},"body":{"injectables/CookiesService.html":{},"classes/CustomValidators.html":{}}}],["valtocopy",{"_index":462,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["value",{"_index":95,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["value.split",{"_index":1982,"title":{},"body":{"interfaces/String.html":{}}}],["values",{"_index":1320,"title":{},"body":{"injectables/MapService.html":{},"components/PinInputComponent.html":{},"interfaces/String.html":{}}}],["values.join",{"_index":1461,"title":{},"body":{"components/PinInputComponent.html":{},"interfaces/String.html":{}}}],["values.length",{"_index":1459,"title":{},"body":{"components/PinInputComponent.html":{}}}],["values.push(input.value.trim",{"_index":1458,"title":{},"body":{"components/PinInputComponent.html":{}}}],["var",{"_index":1474,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["variable",{"_index":2572,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2763,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vastly",{"_index":2360,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["verifica",{"_index":499,"title":{},"body":{"classes/CustomValidators.html":{},"injectables/MapService.html":{}}}],["verificar",{"_index":104,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{}}}],["verifynit",{"_index":497,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["verifynit(control",{"_index":566,"title":{},"body":{"classes/CustomValidators.html":{}}}],["version",{"_index":718,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["viewchild",{"_index":2020,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewchild('content",{"_index":2157,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewchild('invisiblepadding",{"_index":2160,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewchildren",{"_index":1433,"title":{},"body":{"components/PinInputComponent.html":{}}}],["viewchildren('input",{"_index":1428,"title":{},"body":{"components/PinInputComponent.html":{}}}],["viewencapsulation",{"_index":1879,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["viewencapsulation.none",{"_index":1859,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["viewport",{"_index":2338,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.endindex",{"_index":2404,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.endindexwithbuffer",{"_index":2434,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.maxscrollposition",{"_index":2415,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.padding",{"_index":2409,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.padding}px",{"_index":2421,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.scrollendposition",{"_index":2413,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.scrolllength",{"_index":2407,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.scrolllength}px",{"_index":2418,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.scrollstartposition",{"_index":2412,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.startindex",{"_index":2401,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.startindexwithbuffer",{"_index":2433,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewportheight",{"_index":2490,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewportinfo",{"_index":2076,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewportitems",{"_index":2075,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewportlength",{"_index":1031,"title":{},"body":{"interfaces/IDimensions.html":{}}}],["viewportwidth",{"_index":2489,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["vigente",{"_index":424,"title":{},"body":{"injectables/CookiesService.html":{}}}],["virtual",{"_index":1487,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["virtual_scroller_default_options_factory",{"_index":2029,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["virtualscroller",{"_index":2032,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["virtualscrollercomponent",{"_index":1486,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{},"overview.html":{}}}],["virtualscrollerdefaultoptions",{"_index":2002,"title":{"interfaces/VirtualScrollerDefaultOptions.html":{}},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["virtualscrollermodule",{"_index":1920,"title":{"modules/VirtualScrollerModule.html":{}},"body":{"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"modules.html":{},"overview.html":{}}}],["visible",{"_index":2049,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["void",{"_index":96,"title":{},"body":{"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["vschange",{"_index":2154,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["vsend",{"_index":2156,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["vsstart",{"_index":2155,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["vsupdate",{"_index":2153,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["válidas",{"_index":1283,"title":{},"body":{"injectables/MapService.html":{}}}],["wait",{"_index":2310,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["want",{"_index":2376,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["warranties",{"_index":2730,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2725,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1531,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["web",{"_index":432,"title":{},"body":{"injectables/CookiesService.html":{},"injectables/FullscreenService.html":{}}}],["webkit",{"_index":2044,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["webkitexitfullscreen",{"_index":852,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["webkitfullscreenelement",{"_index":853,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["webkitrequestfullscreen",{"_index":859,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["webkittransform",{"_index":2424,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["when(value",{"_index":1757,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["whenscrolled",{"_index":1510,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"directives/WhenScrolledDirective.html":{}}}],["whenscrolleddirective",{"_index":1509,"title":{"directives/WhenScrolledDirective.html":{}},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"directives/WhenScrolledDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":2742,"title":{},"body":{"license.html":{}}}],["white",{"_index":2066,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["width",{"_index":767,"title":{},"body":{"injectables/FacebookSDKService.html":{},"modules/VirtualScrollerModule.html":{}}}],["widthchange",{"_index":2278,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["window",{"_index":800,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["window.matchmedia('(prefers",{"_index":1568,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["within",{"_index":338,"title":{},"body":{"classes/Color.html":{}}}],["without",{"_index":2344,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"license.html":{}}}],["wrapgroup",{"_index":2531,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["wrapgroupdimension",{"_index":2027,"title":{"interfaces/WrapGroupDimension.html":{}},"body":{"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["wrapgroupdimensions",{"_index":2026,"title":{"interfaces/WrapGroupDimensions.html":{}},"body":{"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["wrapgroupindex",{"_index":2505,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["wrapgroupsperpage",{"_index":1032,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{}}}],["writevalue",{"_index":1388,"title":{},"body":{"components/PinInputComponent.html":{}}}],["writevalue(obj",{"_index":1421,"title":{},"body":{"components/PinInputComponent.html":{}}}],["x",{"_index":1139,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"modules/VirtualScrollerModule.html":{}}}],["x01",{"_index":2779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x08\\x0b\\x0c\\x0e",{"_index":2780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x09\\x0b\\x0c\\x0e",{"_index":2784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21",{"_index":2797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21\\x23",{"_index":2781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5a\\x53",{"_index":2798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5b\\x5d",{"_index":2782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f",{"_index":2799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f])*\")@(?:(?:[a",{"_index":2785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f]|\\\\[\\x01",{"_index":2783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xfbml",{"_index":717,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["xthres",{"_index":1268,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["y",{"_index":429,"title":{},"body":{"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/FullscreenService.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"modules/VirtualScrollerModule.html":{}}}],["yes",{"_index":292,"title":{},"body":{"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/LeafletMap.html":{}}}],["ythres",{"_index":1269,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["z",{"_index":2801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z0",{"_index":2774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[a",{"_index":2806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])).{6",{"_index":2807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]+$/.test(value.tostring",{"_index":1455,"title":{},"body":{"components/PinInputComponent.html":{}}}],["za",{"_index":1454,"title":{},"body":{"components/PinInputComponent.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":2233,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["zone.js",{"_index":2677,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1070,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["zoomcontrol",{"_index":1079,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["zoomoffset",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AwsData.html":{"url":"interfaces/AwsData.html","title":"interface - AwsData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AwsData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/aws/Iaws.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        s3\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        s3\n                                    \n                                \n                                \n                                    \n                                        s3:         S3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         S3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AwsData {\n  s3: S3;\n}\n\nexport interface S3 {\n  bucket: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AwsModule.html":{"url":"modules/AwsModule.html","title":"module - AwsModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/aws/aws.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(ConfigProvider: Provider)\n                \n            \n\n\n            \n                \n                    Defined in src/aws/aws.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ConfigProvider\n                                    \n                                                Provider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { AwsService } from './aws.service';\n\n/**\n * @description\n * Módulo para inicializar el servicio AwsService\n * @example\n * import { AWS_CONFIG, AwsModule } from '@sersol/ngx';\n *\n * @NgModule({\n    imports: [\n      ...,\n      AwsModule.forRoot({\n          provide: AWS_CONFIG,\n          useValue: {\n              s3: {\n                bucket: 'ser-app'\n              }\n          }\n      }),\n      ...\n    ],\n    declarations: [...],\n    schemas: [...],\n    providers: [...],\n    bootstrap: [...]\n})\nexport class AppModule { }\n */\n@NgModule()\nexport class AwsModule {\n  static forRoot(ConfigProvider: Provider): ModuleWithProviders {\n    return {\n      ngModule: AwsModule,\n      providers: [\n        ConfigProvider,\n        AwsService\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsService.html":{"url":"injectables/AwsService.html","title":"injectable - AwsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AwsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/aws/aws.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n                        \n                            constructor(private claimsService: ClaimsService) { }\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _awsData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getS3BgUrl\n                            \n                            \n                                    Public\n                                getS3Url\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    awsData\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AwsData)\n                    \n                \n                        \n                            \n                                Defined in src/aws/aws.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AwsData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getS3BgUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getS3BgUrl(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/aws/aws.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRuta del objeto en el bucket (Sin '/' al principio)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.awsService.getS3Url(&#39;assets/file.png&#39;);\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getS3Url\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getS3Url(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/aws/aws.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRuta del objeto en el bucket (Sin '/' al principio)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.awsService.getS3Url(&#39;assets/file.png&#39;);\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _awsData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AwsData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/aws/aws.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        awsData\n                    \n                \n\n                \n                    \n                        getawsData()\n                    \n                \n                            \n                                \n                                    Defined in src/aws/aws.service.ts:19\n                                \n                            \n\n                \n                    \n                        setawsData(value)\n                    \n                \n                            \n                                \n                                    Defined in src/aws/aws.service.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { AwsData } from './Iaws';\nimport { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { hasValue } from '../utils/check';\n\nexport let AWS_CONFIG: InjectionToken = new InjectionToken('aws.config');\n\n/**\n * @description\n * Servicio para verificar si es usuario tiene o no permisos para realizar ciertas acciones\n * @example\n * constructor(private claimsService: ClaimsService) { }\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class AwsService {\n\n    private _awsData: AwsData;\n    public get awsData(): AwsData {\n        return this._awsData;\n    }\n    public set awsData(value: AwsData) {\n        this._awsData = value;\n    }\n\n    constructor(@Inject(AWS_CONFIG) config: AwsData) {\n        this.awsData = config;\n    }\n\n    /**\n     * @description\n     * Método obtener url de assets en S3\n     * @param {string} key - Ruta del objeto en el bucket (Sin '/' al principio)\n     * @example\n     * this.awsService.getS3Url('assets/file.png');\n     * @returns {string}\n     */\n    public getS3Url(key: string): string {\n        if (hasValue(key)) {\n            return `https://${this.awsData.s3.bucket}.s3.amazonaws.com/${key}`;\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * @description\n     * Método obtener url de assets en S3\n     * @param {string} key - Ruta del objeto en el bucket (Sin '/' al principio)\n     * @example\n     * this.awsService.getS3Url('assets/file.png');\n     * @returns {string}\n     */\n    public getS3BgUrl(key: string): string {\n        if (hasValue(key)) {\n            return `url(https://${this.awsData.s3.bucket}.s3.amazonaws.com/${key})`;\n        } else {\n            return '';\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseValidationModel.html":{"url":"interfaces/BaseValidationModel.html","title":"interface - BaseValidationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseValidationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/validations/remote.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Field\n                                \n                                \n                                            Optional\n                                        Id\n                                \n                                \n                                        Model\n                                \n                                \n                                            Optional\n                                        Value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Field\n                                    \n                                \n                                \n                                    \n                                        Field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Model\n                                    \n                                \n                                \n                                    \n                                        Model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Value\n                                    \n                                \n                                \n                                    \n                                        Value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { AsyncValidatorFn, FormControl, ValidationErrors } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { catchError, delay, map, switchMap } from 'rxjs/operators';\nimport { hasValue } from '../../utils/check';\n\nexport interface BaseValidationModel {\n    Model: string;\n    Field: string;\n    Id?: string | number;\n    Value?: any;\n}\n\nexport function alreadyExist(http: HttpClient, url: string, requestBody: BaseValidationModel): AsyncValidatorFn {\n    return (control: FormControl): Observable => {\n\n        return of(control.value).pipe(\n            delay(1000),\n            switchMap((value) => {\n                if (hasValue(value)) {\n\n                    requestBody.Value = value;\n\n                    return http.post(url, requestBody).pipe(\n                      map(() => ({ alreadyExist: true })),\n                      catchError(() => of(null))\n                    );\n                }\n\n                return of(null);\n            }\n        ));\n    };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BgImage.html":{"url":"interfaces/BgImage.html","title":"interface - BgImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BgImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ui/bg-image.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        file\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, OnChanges, Input, ElementRef, Renderer2 } from '@angular/core';\nimport { readAsDataURL } from '../file/read';\nimport { take } from 'rxjs/operators';\nimport { AwsService } from '../aws/aws.service';\nimport { hasValue } from '../utils/check';\n\ninterface BgImage {\n    url?: string;\n    file?: File;\n}\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[bgImage]'\n})\nexport class BgImageDirective implements OnChanges {\n\n    @Input('bgImage')\n    image: BgImage;\n    imageRegex = /(image\\/(jpe?g|png|gif|bmp))/i;\n\n    constructor(private el: ElementRef, private rendered: Renderer2, private aws: AwsService) { }\n\n    ngOnChanges() {\n        if (hasValue(this.image.file) && this.image.file instanceof File && this.imageRegex.test(this.image.file.type)) {\n\n            readAsDataURL(this.image.file).pipe(take(1)).subscribe((result) => {\n                this.rendered.setStyle(this.el.nativeElement, 'background-image', `url(${result})`);\n            });\n\n        } else if (hasValue(this.image.url)) {\n            this.rendered.setStyle(this.el.nativeElement, 'background-image', this.aws.getS3BgUrl(this.image.url));\n        } else {\n            this.rendered.removeStyle(this.el.nativeElement, 'background-image');\n        }\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BgImageDirective.html":{"url":"directives/BgImageDirective.html","title":"directive - BgImageDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  BgImageDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ui/bg-image.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [bgImage]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imageRegex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bgImage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, rendered: Renderer2, aws: AwsService)\n                    \n                \n                        \n                            \n                                Defined in src/ui/bg-image.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendered\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        aws\n                                                  \n                                                        \n                                                                        AwsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        bgImage\n                    \n                \n                \n                    \n                        Type :         BgImage\n\n                    \n                \n                        \n                            \n                                    Defined in src/ui/bg-image.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/ui/bg-image.directive.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageRegex\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /(image\\/(jpe?g|png|gif|bmp))/i\n                        \n                    \n                        \n                            \n                                    Defined in src/ui/bg-image.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnChanges, Input, ElementRef, Renderer2 } from '@angular/core';\nimport { readAsDataURL } from '../file/read';\nimport { take } from 'rxjs/operators';\nimport { AwsService } from '../aws/aws.service';\nimport { hasValue } from '../utils/check';\n\ninterface BgImage {\n    url?: string;\n    file?: File;\n}\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[bgImage]'\n})\nexport class BgImageDirective implements OnChanges {\n\n    @Input('bgImage')\n    image: BgImage;\n    imageRegex = /(image\\/(jpe?g|png|gif|bmp))/i;\n\n    constructor(private el: ElementRef, private rendered: Renderer2, private aws: AwsService) { }\n\n    ngOnChanges() {\n        if (hasValue(this.image.file) && this.image.file instanceof File && this.imageRegex.test(this.image.file.type)) {\n\n            readAsDataURL(this.image.file).pipe(take(1)).subscribe((result) => {\n                this.rendered.setStyle(this.el.nativeElement, 'background-image', `url(${result})`);\n            });\n\n        } else if (hasValue(this.image.url)) {\n            this.rendered.setStyle(this.el.nativeElement, 'background-image', this.aws.getS3BgUrl(this.image.url));\n        } else {\n            this.rendered.removeStyle(this.el.nativeElement, 'background-image');\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CenterPoint.html":{"url":"interfaces/CenterPoint.html","title":"interface - CenterPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CenterPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/map/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lat\n                                \n                                \n                                        lng\n                                \n                                \n                                            Optional\n                                        offset_x\n                                \n                                \n                                            Optional\n                                        offset_y\n                                \n                                \n                                            Optional\n                                        preserve_zoom\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset_x\n                                    \n                                \n                                \n                                    \n                                        offset_x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset_y\n                                    \n                                \n                                \n                                    \n                                        offset_y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserve_zoom\n                                    \n                                \n                                \n                                    \n                                        preserve_zoom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LatLng {\n    lat: number;\n    lng: number;\n}\n\n/**\n * @description\n * Interface que representa al objeto OpenId usado para autenticarse con la API de SER\n */\nexport interface LatLng2LatLngOptions {\n    from: {\n        lat: number,\n        lng: number\n    };\n    to: {\n        lat: number,\n        lng: number\n    };\n}\n\nexport interface CenterPoint {\n    lat: number;\n    lng: number;\n    offset_x?: number;\n    offset_y?: number;\n    preserve_zoom?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClaimsService.html":{"url":"injectables/ClaimsService.html","title":"injectable - ClaimsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClaimsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/open-id/claims.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n                        \n                            constructor(private claimsService: ClaimsService) { }\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _openIdData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                atLeastPermissions\n                            \n                            \n                                    Public\n                                hasPermission\n                            \n                            \n                                    Public\n                                hasPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    openIdData\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            atLeastPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atLeastPermissions(requiredPermissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/open-id/claims.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    requiredPermissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nArreglo de permisos a consultar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.claimsService.atLeastPermissions([&#39;users.view&#39;, &#39;users.update&#39;, &#39;users.add&#39;]);\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasPermission\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasPermission(requiredPermission: string)\n                \n            \n\n\n            \n                \n                    Defined in src/open-id/claims.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    requiredPermission\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNombre del permiso a consultar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.claimsService.hasPermission(&#39;users.view&#39;);\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasPermissions(requiredPermissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/open-id/claims.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    requiredPermissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nArreglo de permisos a consultar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.claimsService.hasPermissions([&#39;users.view&#39;, &#39;users.update&#39;, &#39;users.add&#39;]);\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _openIdData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OpenIdData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/open-id/claims.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        openIdData\n                    \n                \n\n                \n                    \n                        getopenIdData()\n                    \n                \n                            \n                                \n                                    Defined in src/open-id/claims.service.ts:17\n                                \n                            \n\n                \n                    \n                        setopenIdData(value)\n                    \n                \n                            \n                                \n                                    Defined in src/open-id/claims.service.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { OpenIdData } from './Iopen-id-client';\nimport { Injectable } from '@angular/core';\nimport { inArray } from '../utils/array';\n\n/**\n * @description\n * Servicio para verificar si es usuario tiene o no permisos para realizar ciertas acciones\n * @example\n * constructor(private claimsService: ClaimsService) { }\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClaimsService {\n\n    private _openIdData: OpenIdData;\n    public get openIdData(): OpenIdData {\n        return this._openIdData;\n    }\n    public set openIdData(value: OpenIdData) {\n        this._openIdData = value;\n    }\n\n    /**\n     * @description\n     * Método para verificar si el usuario tiene un permiso\n     * @param {string} requiredPermission - Nombre del permiso a consultar\n     * @example\n     * this.claimsService.hasPermission('users.view');\n     * @returns {boolean}\n     */\n    public hasPermission(requiredPermission: string): boolean {\n        return this.openIdData.claims.indexOf(requiredPermission) !== -1;\n    }\n\n    /**\n     * @description\n     * Método para verificar si el usuario tiene un al menos un permiso del listado consultado\n     * @param {string[]} requiredPermissions - Arreglo de permisos a consultar\n     * @example\n     * this.claimsService.atLeastPermissions(['users.view', 'users.update', 'users.add']);\n     * @returns {boolean}\n     */\n    public atLeastPermissions(requiredPermissions: string[]): boolean {\n        for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Color.html":{"url":"classes/Color.html","title":"class - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/avatar.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hsl\n                            \n                            \n                                hue\n                            \n                            \n                                light\n                            \n                            \n                                maxHue\n                            \n                            \n                                maxLight\n                            \n                            \n                                maxSat\n                            \n                            \n                                minHue\n                            \n                            \n                                minLight\n                            \n                            \n                                minSat\n                            \n                            \n                                sat\n                            \n                            \n                                scaleLight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeHue\n                            \n                            \n                                changeLight\n                            \n                            \n                                randomNum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hue?: number, sat?: number, light?: number, lightBackground?: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/utils/avatar.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hue\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        sat\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        light\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightBackground\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hsl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/avatar.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/avatar.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            light\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/avatar.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxHue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 360\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/avatar.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxLight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 80\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/avatar.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxSat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/avatar.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minHue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/avatar.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minLight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 65\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/avatar.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minSat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 75\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/avatar.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/avatar.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaleLight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/avatar.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeHue\n                        \n                        \n                    \n                \n            \n            \n                \nchangeHue(hue: number, rotate: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/avatar.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hue\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rotate\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeLight\n                        \n                        \n                    \n                \n            \n            \n                \nchangeLight(light: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/avatar.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    light\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            randomNum\n                        \n                        \n                    \n                \n            \n            \n                \nrandomNum(min: number, max: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/avatar.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { hasValue } from './check';\n\nexport class Color {\n\n    // Settings\n    // Play with these to change the types of colors generated\n    hue: number;\n    sat: number;\n    light: number;\n    hsl: string;\n\n    minHue = 0;\n    maxHue = 360;\n\n    minSat = 75;\n    maxSat = 100;\n\n    minLight = 65;\n    maxLight = 80;\n\n    scaleLight = 15;\n\n    constructor(hue?: number, sat?: number, light?: number, lightBackground?: boolean) {\n\n        if (lightBackground) {\n            this.minLight = 40;\n            this.maxLight = 65;\n        }\n\n        this.hue = hue || this.randomNum(this.minHue, this.maxHue);\n\n        // Redo if ugly hue is generated\n        if (this.hue > 288 && this.hue  280 && this.hue  this.maxHue ?\n            (hue + rotate) - this.maxHue : hue + rotate;\n    }\n\n    // Scale lightness while keeping within limits\n    changeLight(light: number) {\n        return light + this.scaleLight > this.maxLight ? this.maxLight : light + this.scaleLight;\n    }\n\n}\n\nexport function generateDefaultImage(name: string, lastName?: string, type?: 'image/jpeg' | 'image/png', quality?: number): Observable {\n    return new Observable(observer => {\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\n        canvas.width = 200;\n        canvas.height = 200;\n        const ctx = canvas.getContext('2d');\n\n        const baseColor = new Color();\n\n        ctx.beginPath();\n        ctx.rect(0, 0, 200, 200);\n\n        ctx.fillStyle = new Color(\n            baseColor.changeHue(baseColor.hue, 0),\n            baseColor.sat,\n            baseColor.changeLight(baseColor.light)).hsl;\n\n        ctx.fill();\n\n        ctx.font = '500 70px Segoe UI';\n        ctx.fillStyle = 'black';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n\n        let initials: string;\n\n        if (hasValue(lastName)) {\n            initials = name.charAt(0) + lastName.charAt(0);\n        } else {\n            initials = name.charAt(0) + name.charAt(0);\n        }\n\n        ctx.fillText(initials.toUpperCase(), canvas.width / 2, canvas.height / 2);\n\n        canvas.toBlob(result => {\n            observer.next(result);\n            observer.complete();\n        }, type, quality);\n    });\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CookiesService.html":{"url":"injectables/CookiesService.html","title":"injectable - CookiesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CookiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cookie/cookies.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n                        \n                            constructor(cookiesService: CookiesService) { }\n\nthis.cookiesService.get('Test'); // Obtiene el valor de una cookie\nthis.cookiesService.set('Test', '123'); // Setea valor de una cookie\nthis.cookiesService.delete('Test'); // Elimina una cookie\nthis.cookiesService.deleteAll(); // Elimina todas las cookies\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                deleteAll\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/cookie/cookies.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(name: string, path?: string, domain?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cookie/cookies.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Ruta\n\n                                    \n                                \n                                \n                                    domain\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Dominio\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cookie/cookies.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cookie/cookies.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNombre de la cookie\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Valor de la cookie\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cookie/cookies.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(name: string, value: any, expires?: number | Date, path?: string, domain?: string, secure?: boolean, sameSite?: \"Lax\" | \"Strict\")\n                \n            \n\n\n            \n                \n                    Defined in src/cookie/cookies.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        valor\n\n                                    \n                                \n                                \n                                    expires\n                                    \n                                            number | Date\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Unix Timestamp en que será vigente la cookie o un objeto Date\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Ruta\n\n                                    \n                                \n                                \n                                    domain\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Dominio\n\n                                    \n                                \n                                \n                                    secure\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Cookie segura\n\n                                    \n                                \n                                \n                                    sameSite\n                                    \n                                            \"Lax\" | \"Strict\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        OWASP samesite token Lax ó Strict\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * @description\n * Servicio para obtener, actualizar y borrar cookies en el navegador web\n * @example\n * constructor(cookiesService: CookiesService) { }\n *\n * this.cookiesService.get('Test'); // Obtiene el valor de una cookie\n * this.cookiesService.set('Test', '123'); // Setea valor de una cookie\n * this.cookiesService.delete('Test'); // Elimina una cookie\n * this.cookiesService.deleteAll(); // Elimina todas las cookies\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookiesService {\n\n  constructor() { }\n\n  /**\n   * @description\n   * Obtiene todas las cookies\n   * @returns {}\n   */\n  public getAll(): {} {\n\n    const cookies: {} = {};\n\n    if (document.cookie && document.cookie !== '') {\n      const split: string[] = document.cookie.split('; ');\n\n      for (let i = 0; i  -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CopyToClipboardDirective.html":{"url":"directives/CopyToClipboardDirective.html","title":"directive - CopyToClipboardDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CopyToClipboardDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ui/copy-to-clipboard.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [copyToClipboard]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                copyToClipboard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                copied\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        copyToClipboard\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/ui/copy-to-clipboard.directive.ts:9\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        copied\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/ui/copy-to-clipboard.directive.ts:10\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(val: any)\n                \n            \n\n\n            \n                \n                    Defined in src/ui/copy-to-clipboard.directive.ts:12\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[copyToClipboard]'\n})\nexport class CopyToClipboardDirective {\n\n    @Input('copyToClipboard') valToCopy = '';\n    @Output() copied = new EventEmitter();\n\n    @HostListener('click', ['$event']) onClick(val: any) {\n        const selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.zIndex = '-1000';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = this.valToCopy;\n        document.body.appendChild(selBox);\n        selBox.focus();\n        selBox.select();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n\n        this.copied.emit(this.valToCopy);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomValidators.html":{"url":"classes/CustomValidators.html","title":"class - CustomValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/validations/custom-validators.ts\n        \n\n            \n                Description\n            \n            \n                Validaciones adicionales para Form Control's\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                alreadyExist\n                            \n                            \n                                    Static\n                                greaterOrEqualThan\n                            \n                            \n                                    Static\n                                greaterThan\n                            \n                            \n                                    Static\n                                lowerOrEqualThan\n                            \n                            \n                                    Static\n                                lowerThan\n                            \n                            \n                                    Static\n                                match\n                            \n                            \n                                    Static\n                                maxFileSize\n                            \n                            \n                                    Static\n                                minFileSize\n                            \n                            \n                                    Static\n                                requiredFileType\n                            \n                            \n                                    Static\n                                verifyNIT\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            alreadyExist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    alreadyExist(http: HttpClient, url: string, requestBody: BaseValidationModel)\n                \n            \n\n\n            \n                \n                    Defined in src/form/validations/custom-validators.ts:98\n                \n            \n\n\n            \n                \n                    Verifica si existe dicho valor en la DB si coincide con el modelo y el nombre de campo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                                HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    requestBody\n                                    \n                                                BaseValidationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        propiedad Id opcional para excluir de la busqueda un registro\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AsyncValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            greaterOrEqualThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    greaterOrEqualThan(BasePathField: string, TargetPathField: string)\n                \n            \n\n\n            \n                \n                    Defined in src/form/validations/custom-validators.ts:64\n                \n            \n\n\n            \n                \n                    Verifica si un campo es mayor o igual a otro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    BasePathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que debe ser mayor o igual\n\n                                    \n                                \n                                \n                                    TargetPathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que deberia ser menor o igual\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            greaterThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    greaterThan(BasePathField: string, TargetPathField: string)\n                \n            \n\n\n            \n                \n                    Defined in src/form/validations/custom-validators.ts:55\n                \n            \n\n\n            \n                \n                    Verifica si un campo es mayor a otro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    BasePathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que debe ser mayor\n\n                                    \n                                \n                                \n                                    TargetPathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que deberia ser menor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            lowerOrEqualThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lowerOrEqualThan(BasePathField: string, TargetPathField: string)\n                \n            \n\n\n            \n                \n                    Defined in src/form/validations/custom-validators.ts:46\n                \n            \n\n\n            \n                \n                    Verifica si un campo es menor o igual a otro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    BasePathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que debe ser menor o igual\n\n                                    \n                                \n                                \n                                    TargetPathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que deberia ser mayor o igual\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            lowerThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lowerThan(BasePathField: string, TargetPathField: string)\n                \n            \n\n\n            \n                \n                    Defined in src/form/validations/custom-validators.ts:37\n                \n            \n\n\n            \n                \n                    Verifica si un campo es menor a otro\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    BasePathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que debe ser menor\n\n                                    \n                                \n                                \n                                    TargetPathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que deberia ser mayor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            match\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    match(originalPathField: string, duplicatePathField: string)\n                \n            \n\n\n            \n                \n                    Defined in src/form/validations/custom-validators.ts:19\n                \n            \n\n\n            \n                \n                    Verifica si los campos proveidos son iguales\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    originalPathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo original\n\n                                    \n                                \n                                \n                                    duplicatePathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que deberia ser igual al original\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            maxFileSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    maxFileSize(size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/form/validations/custom-validators.ts:72\n                \n            \n\n\n            \n                \n                    Verifica si el tamaño no excede el tamaño maximo indicado\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tamaño en KB, MG ó GB (ejem: 100MB)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            minFileSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    minFileSize(size: string)\n                \n            \n\n\n            \n                \n                    Defined in src/form/validations/custom-validators.ts:80\n                \n            \n\n\n            \n                \n                    Verifica si el tamaño es mayor el tamaño mínimo indicado\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tamaño en KB, MG ó GB (ejem: 100MB)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            requiredFileType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    requiredFileType(ext: string | string[])\n                \n            \n\n\n            \n                \n                    Defined in src/form/validations/custom-validators.ts:88\n                \n            \n\n\n            \n                \n                    Verifica si el archivo tiene una extensión adminitida por medio de su cabecera\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Extensiones admitidas\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AsyncValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            verifyNIT\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyNIT(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/form/validations/custom-validators.ts:28\n                \n            \n\n\n            \n                \n                    Verifica si los campos proveidos son iguales\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { greaterOrEqualThan, greaterThan, lowerOrEqualThan, lowerThan } from './comparison';\nimport { match, verifyNIT } from './match';\nimport { maxFileSize, minFileSize, requiredFileType } from './file';\nimport { alreadyExist, BaseValidationModel } from './remote';\n\n// @dynamic\n/**\n * Validaciones adicionales para Form Control's\n */\nexport class CustomValidators {\n\n    /**\n     * Verifica si los campos proveidos son iguales\n     * @param originalPathField Path del campo original\n     * @param duplicatePathField Path del campo que deberia ser igual al original\n     */\n    static match(originalPathField: string, duplicatePathField: string): ValidatorFn {\n        return match(originalPathField, duplicatePathField);\n    }\n\n    /**\n     * Verifica si los campos proveidos son iguales\n     * @param originalPathField Path del campo original\n     * @param duplicatePathField Path del campo que deberia ser igual al original\n     */\n    static verifyNIT(control: AbstractControl): { [key: string]: any } | null {\n        return verifyNIT(control);\n    }\n\n    /**\n     * Verifica si un campo es menor a otro\n     * @param BasePathField Path del campo que debe ser menor\n     * @param TargetPathField Path del campo que deberia ser mayor\n     */\n    static lowerThan(BasePathField: string, TargetPathField: string): ValidatorFn {\n        return lowerThan(BasePathField, TargetPathField);\n    }\n\n    /**\n     * Verifica si un campo es menor o igual a otro\n     * @param BasePathField Path del campo que debe ser menor o igual\n     * @param TargetPathField Path del campo que deberia ser mayor o igual\n     */\n    static lowerOrEqualThan(BasePathField: string, TargetPathField: string): ValidatorFn {\n        return lowerOrEqualThan(BasePathField, TargetPathField);\n    }\n\n    /**\n     * Verifica si un campo es mayor a otro\n     * @param BasePathField Path del campo que debe ser mayor\n     * @param TargetPathField Path del campo que deberia ser menor\n     */\n    static greaterThan(BasePathField: string, TargetPathField: string): ValidatorFn {\n        return greaterThan(BasePathField, TargetPathField);\n    }\n\n    /**\n     * Verifica si un campo es mayor o igual a otro\n     * @param BasePathField Path del campo que debe ser mayor o igual\n     * @param TargetPathField Path del campo que deberia ser menor o igual\n     */\n    static greaterOrEqualThan(BasePathField: string, TargetPathField: string): ValidatorFn {\n        return greaterOrEqualThan(BasePathField, TargetPathField);\n    }\n\n    /**\n     * Verifica si el tamaño no excede el tamaño maximo indicado\n     * @param size Tamaño en KB, MG ó GB (ejem: 100MB)\n     */\n    static maxFileSize(size: string): ValidatorFn {\n        return maxFileSize(size);\n    }\n\n    /**\n     * Verifica si el tamaño es mayor el tamaño mínimo indicado\n     * @param size Tamaño en KB, MG ó GB (ejem: 100MB)\n     */\n    static minFileSize(size: string): ValidatorFn {\n        return minFileSize(size);\n    }\n\n    /**\n     * Verifica si el archivo tiene una extensión adminitida por medio de su cabecera\n     * @param ext Extensiones admitidas\n     */\n    static requiredFileType(ext: string | string[]): AsyncValidatorFn {\n        return requiredFileType(ext);\n    }\n\n    /**\n     * Verifica si existe dicho valor en la DB si coincide con el modelo y el nombre de campo\n     * @param http\n     * @param url\n     * @param requestBody propiedad Id opcional para excluir de la busqueda un registro\n     */\n    static alreadyExist(http: HttpClient, url: string, requestBody: BaseValidationModel): AsyncValidatorFn {\n        return alreadyExist(http, url, requestBody);\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/select/ser-select.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                filterData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(item: any, filter: any, searchBy: any)\n                \n            \n\n\n            \n                \n                    Defined in src/form/select/ser-select.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchBy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterData\n                        \n                        \n                    \n                \n            \n            \n                \nfilterData(data: any[], filter: any, searchBy: any)\n                \n            \n\n\n            \n                \n                    Defined in src/form/select/ser-select.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchBy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { hasValue } from '../../utils/check';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n\n    filterData(data: any[], filter: any, searchBy: any) {\n        if (!hasValue(data) || !hasValue(filter)) {\n            return data;\n        }\n\n        const filteredList = data.filter((item: any) => this.applyFilter(item, filter, searchBy));\n\n        if (hasValue(filteredList)) {\n            return filteredList;\n        } else {\n            return [];\n        }\n    }\n\n    applyFilter(item: any, filter: any, searchBy: any): boolean {\n        let found = false;\n        if (searchBy.length > 0) {\n            if (item.grpTitle) {\n                found = true;\n            } else {\n                for (let t = 0; t = 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n\n        } else {\n            if (item.grpTitle) {\n                found = true;\n            } else {\n                for (const prop in item) {\n                    if (filter && item[prop]) {\n                        if (item[prop].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return found;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DownloadService.html":{"url":"injectables/DownloadService.html","title":"injectable - DownloadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DownloadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ui/download.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                downloadElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/ui/download.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/ui/download.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url absoluta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ui/download.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DownloadService {\n\n    downloadElement: any;\n\n    constructor() {\n        this.downloadElement = document.createElement('a');\n        this.downloadElement.setAttribute('target', '_blank');\n        document.body.appendChild(this.downloadElement);\n    }\n\n    /**\n     * @description Descarga tradicional mediante un a[href] emulando un clic de usuario\n     * @param url Url absoluta\n     */\n    get(url: string) {\n        this.downloadElement.setAttribute('href', url);\n        this.downloadElement.setAttribute('download', url.split('/').pop());\n        this.downloadElement.click();\n        document.body.removeChild(this.downloadElement);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropdownSettings.html":{"url":"interfaces/DropdownSettings.html","title":"interface - DropdownSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropdownSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/select/ser-select.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        addNewButtonText\n                                \n                                \n                                            Optional\n                                        addNewItemOnFilter\n                                \n                                \n                                            Optional\n                                        badgeShowLimit\n                                \n                                \n                                            Optional\n                                        classes\n                                \n                                \n                                            Optional\n                                        clearAll\n                                \n                                \n                                            Optional\n                                        disabledKey\n                                \n                                \n                                            Optional\n                                        enableCheckAll\n                                \n                                \n                                            Optional\n                                        enableFilterSelectAll\n                                \n                                \n                                            Optional\n                                        enableSearchFilter\n                                \n                                \n                                            Optional\n                                        escapeToClose\n                                \n                                \n                                            Optional\n                                        filterSelectAllText\n                                \n                                \n                                            Optional\n                                        filterUnSelectAllText\n                                \n                                \n                                            Optional\n                                        groupBy\n                                \n                                \n                                            Optional\n                                        labelKey\n                                \n                                \n                                            Optional\n                                        lazyLoading\n                                \n                                \n                                            Optional\n                                        limitSelection\n                                \n                                \n                                            Optional\n                                        loading\n                                \n                                \n                                            Optional\n                                        maxHeight\n                                \n                                \n                                            Optional\n                                        noDataLabel\n                                \n                                \n                                            Optional\n                                        primaryKey\n                                \n                                \n                                            Optional\n                                        searchAutofocus\n                                \n                                \n                                            Optional\n                                        searchBy\n                                \n                                \n                                            Optional\n                                        searchPlaceholderText\n                                \n                                \n                                            Optional\n                                        selectAllText\n                                \n                                \n                                            Optional\n                                        selectGroup\n                                \n                                \n                                            Optional\n                                        showCheckbox\n                                \n                                \n                                            Optional\n                                        singleSelection\n                                \n                                \n                                            Optional\n                                        unSelectAllText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addNewButtonText\n                                    \n                                \n                                \n                                    \n                                        addNewButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addNewItemOnFilter\n                                    \n                                \n                                \n                                    \n                                        addNewItemOnFilter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        badgeShowLimit\n                                    \n                                \n                                \n                                    \n                                        badgeShowLimit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                    \n                                \n                                \n                                    \n                                        classes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clearAll\n                                    \n                                \n                                \n                                    \n                                        clearAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabledKey\n                                    \n                                \n                                \n                                    \n                                        disabledKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableCheckAll\n                                    \n                                \n                                \n                                    \n                                        enableCheckAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableFilterSelectAll\n                                    \n                                \n                                \n                                    \n                                        enableFilterSelectAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableSearchFilter\n                                    \n                                \n                                \n                                    \n                                        enableSearchFilter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        escapeToClose\n                                    \n                                \n                                \n                                    \n                                        escapeToClose:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterSelectAllText\n                                    \n                                \n                                \n                                    \n                                        filterSelectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterUnSelectAllText\n                                    \n                                \n                                \n                                    \n                                        filterUnSelectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupBy\n                                    \n                                \n                                \n                                    \n                                        groupBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelKey\n                                    \n                                \n                                \n                                    \n                                        labelKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lazyLoading\n                                    \n                                \n                                \n                                    \n                                        lazyLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limitSelection\n                                    \n                                \n                                \n                                    \n                                        limitSelection:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxHeight\n                                    \n                                \n                                \n                                    \n                                        maxHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDataLabel\n                                    \n                                \n                                \n                                    \n                                        noDataLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryKey\n                                    \n                                \n                                \n                                    \n                                        primaryKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchAutofocus\n                                    \n                                \n                                \n                                    \n                                        searchAutofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchBy\n                                    \n                                \n                                \n                                    \n                                        searchBy:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchPlaceholderText\n                                    \n                                \n                                \n                                    \n                                        searchPlaceholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectAllText\n                                    \n                                \n                                \n                                    \n                                        selectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectGroup\n                                    \n                                \n                                \n                                    \n                                        selectGroup:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCheckbox\n                                    \n                                \n                                \n                                    \n                                        showCheckbox:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleSelection\n                                    \n                                \n                                \n                                    \n                                        singleSelection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unSelectAllText\n                                    \n                                \n                                \n                                    \n                                        unSelectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DropdownSettings {\n    singleSelection?: boolean;\n    enableCheckAll?: boolean;\n    selectAllText?: string;\n    unSelectAllText?: string;\n    filterSelectAllText?: string;\n    filterUnSelectAllText?: string;\n    enableFilterSelectAll?: boolean;\n    enableSearchFilter?: boolean;\n    searchBy?: string[];\n    maxHeight?: number;\n    badgeShowLimit?: number;\n    classes?: string;\n    limitSelection?: number;\n    searchPlaceholderText?: string;\n    groupBy?: string;\n    showCheckbox?: boolean;\n    noDataLabel?: string;\n    searchAutofocus?: boolean;\n    lazyLoading?: boolean;\n    labelKey?: string;\n    primaryKey?: string;\n    disabledKey?: string;\n    loading?: boolean;\n    selectGroup?: boolean;\n    addNewItemOnFilter?: boolean;\n    addNewButtonText?: string;\n    escapeToClose?: boolean;\n    clearAll?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorDetails.html":{"url":"interfaces/ErrorDetails.html","title":"interface - ErrorDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/ser-errors/ser-errors.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        control\n                                \n                                \n                                        errorName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        control\n                                    \n                                \n                                \n                                    \n                                        control:         AbstractControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AbstractControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorName\n                                    \n                                \n                                \n                                    \n                                        errorName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\nexport type ErrorOptions = string | string[];\n\nexport interface ErrorDetails {\n  control: AbstractControl;\n  errorName: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExternalScriptService.html":{"url":"injectables/ExternalScriptService.html","title":"injectable - ExternalScriptService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExternalScriptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/external-script/external-script.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n                        \n                            constructor(private externalScriptService: ExternalScriptService) { }\n\nthis.externalScriptService.insert('google-jssdk', 'https://apis.google.com/js/platform.js?onload=googleSDKLoaded');\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                insert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/external-script/external-script.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(id: string, src: string)\n                \n            \n\n\n            \n                \n                    Defined in src/external-script/external-script.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * @description\n * Función para insertar scritps externos (ejem: gapi, facebook sdk)\n * @example\n * constructor(private externalScriptService: ExternalScriptService) { }\n *\n * this.externalScriptService.insert('google-jssdk', 'https://apis.google.com/js/platform.js?onload=googleSDKLoaded');\n * @param {string} id - Id para la etiqueta script\n * @param {string} src - url para la etiqueta script\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExternalScriptService {\n\n  constructor() { }\n\n  insert(id: string, src: string) {\n    const fjs = document.getElementsByTagName('script')[0];\n    if (document.getElementById(id)) { return; }\n    const js = document.createElement('script') as HTMLScriptElement;\n    js.id = id;\n    js.src = src;\n    fjs.parentNode.insertBefore(js, fjs);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FacebookSDKConfig.html":{"url":"classes/FacebookSDKConfig.html","title":"class - FacebookSDKConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FacebookSDKConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/facebook/config/facebook-sdk.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _clientConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clientConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientConfig: ClientConfig)\n                    \n                \n                        \n                            \n                                Defined in src/facebook/config/facebook-sdk.config.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientConfig\n                                                  \n                                                        \n                                                                    ClientConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _clientConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ClientConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/facebook/config/facebook-sdk.config.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        clientConfig\n                    \n                \n\n                \n                    \n                        getclientConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/facebook/config/facebook-sdk.config.ts:5\n                                \n                            \n\n                \n                    \n                        setclientConfig(value)\n                    \n                \n                            \n                                \n                                    Defined in src/facebook/config/facebook-sdk.config.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import ClientConfig = facebook.InitParams;\n\nexport class FacebookSDKConfig {\n  private _clientConfig: ClientConfig;\n  public get clientConfig(): ClientConfig {\n    return this._clientConfig;\n  }\n  public set clientConfig(value: ClientConfig) {\n    this._clientConfig = value;\n  }\n\n  constructor(clientConfig: ClientConfig) {\n    this.clientConfig = clientConfig;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FacebookSDKModule.html":{"url":"modules/FacebookSDKModule.html","title":"module - FacebookSDKModule","body":"\n                   \n\n\n\n\n    Modules\n    FacebookSDKModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/facebook/facebook-sdk.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(fsdkConfigProvider: Provider)\n                \n            \n\n\n            \n                \n                    Defined in src/facebook/facebook-sdk.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fsdkConfigProvider\n                                    \n                                                Provider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { FacebookSDKService } from './facebook-sdk.service';\n\n/**\n * @description\n * Módulo para parametrizar la autenticación con Facebook\n * @example\n * import { NG_FSDK_CONFIG, FacebookSDKModule } from '@sersol/ngx';\n * @NgModule({\n    imports: [\n      ...,\n      FacebookSDKModule.forRoot({\n          provide: NG_FSDK_CONFIG,\n          useValue: {\n              appId: FACEBOOK_CLIENT_ID,\n              cookie: true,\n              xfbml: true,\n              version: 'v6.0'\n          }\n      }),\n      ...\n    ],\n    declarations: [...],\n    schemas: [...],\n    providers: [...],\n    bootstrap: [...]\n})\nexport class AppModule { }\n */\n@NgModule()\nexport class FacebookSDKModule {\n  static forRoot(fsdkConfigProvider: Provider): ModuleWithProviders {\n    return {\n      ngModule: FacebookSDKModule,\n      providers: [\n        fsdkConfigProvider,\n        FacebookSDKService\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FacebookSDKService.html":{"url":"injectables/FacebookSDKService.html","title":"injectable - FacebookSDKService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FacebookSDKService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/facebook/facebook-sdk.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Private\n                                    Readonly\n                                fsdkUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadSDK\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: facebook.InitParams)\n                    \n                \n                        \n                            \n                                Defined in src/facebook/facebook-sdk.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    facebook.InitParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadSDK\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSDK()\n                \n            \n\n\n            \n                \n                    Defined in src/facebook/facebook-sdk.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/facebook/facebook-sdk.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FacebookSDKConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/facebook/facebook-sdk.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            fsdkUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://connect.facebook.net/en_US/sdk.js'\n                        \n                    \n                        \n                            \n                                    Defined in src/facebook/facebook-sdk.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in src/facebook/facebook-sdk.service.ts:21\n                                \n                            \n\n                \n                    \n                        setconfig(value)\n                    \n                \n                            \n                                \n                                    Defined in src/facebook/facebook-sdk.service.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { FacebookUserProfile } from './Ifacebook';\nimport { Observable } from 'rxjs';\nimport { Inject, Injectable, InjectionToken, Output, EventEmitter } from '@angular/core';\nimport { FacebookSDKConfig } from './config/facebook-sdk.config';\nimport { Observer } from 'rxjs';\n\nexport let NG_FSDK_CONFIG: InjectionToken = new InjectionToken('facebook.config');\n\n/**\n * @description\n * Servicio para interacturar con el SDK de Facebook\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacebookSDKService {\n  private readonly fsdkUrl: string = 'https://connect.facebook.net/en_US/sdk.js';\n  private _config: FacebookSDKConfig;\n  public get config(): FacebookSDKConfig {\n    return this._config;\n  }\n  public set config(value: FacebookSDKConfig) {\n    this._config = value;\n  }\n\n  @Output() onload: EventEmitter = new EventEmitter();\n\n  constructor(@Inject(NG_FSDK_CONFIG) config: facebook.InitParams) {\n    this.config = new FacebookSDKConfig(config);\n    this.loadSDK().subscribe(() => {\n      console.log('Facebook: SDK loaded');\n      this.onload.emit();\n    });\n  }\n\n  /**\n   * @description\n   * Método para obtener un token de inicio de sesión junto con la información de perfil\n   * @returns {Observable}\n   */\n  public login(): Observable {\n    return new Observable((observer: Observer) => {\n\n      FB.login((response: any) => {\n        if (response.status === 'connected') {\n          FB.api('/me', { fields: 'first_name,last_name,email' }, (res: any) => {\n\n            FB.api('/me/picture', {\n              width: 300,\n              redirect: 'false'\n            }, (pic: any) => {\n\n              const facebookProfile: FacebookUserProfile = {\n                id: res.id,\n                access_token: response.authResponse.accessToken,\n                first_name: res.first_name,\n                last_name: res.last_name,\n                email: res.email,\n              };\n\n              if (pic?.data?.url) {\n                facebookProfile.picture = pic.data.url;\n              }\n\n              observer.next(facebookProfile);\n              observer.complete();\n\n            });\n\n          });\n\n        } else {\n          console.warn('Facebook: Popup closed by user');\n        }\n      }, { scope: 'public_profile,email' });\n    });\n  }\n\n  /**\n   * @description\n   * Metodo privado que carga la libreria de Facebook, al cargarse correctamente, se emite el evento 'onload'\n   */\n  public loadSDK(): Observable {\n    return new Observable((observer: Observer) => {\n\n      if ((window as any).FB == null) {\n\n        const node = document.createElement('script');\n        node.src = this.fsdkUrl;\n        node.type = 'text/javascript';\n        node.async = true;\n        node.defer = true;\n        node.id = 'facebook-sdk';\n        document.getElementsByTagName('head')[0].appendChild(node);\n        node.onload = () => {\n          FB.init(this.config.clientConfig);\n          FB.AppEvents.logPageView();\n\n          observer.next(true);\n          observer.complete();\n        };\n\n      } else {\n        observer.next(true);\n        observer.complete();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FacebookUserProfile.html":{"url":"interfaces/FacebookUserProfile.html","title":"interface - FacebookUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FacebookUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/facebook/IFacebook.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                        first_name\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        last_name\n                                \n                                \n                                            Optional\n                                        picture\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FacebookUserProfile {\n  id: number;\n  access_token: string;\n  first_name: string;\n  last_name?: string;\n  email?: string;\n  picture?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterSettings.html":{"url":"interfaces/FilterSettings.html","title":"interface - FilterSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/filter/ser-filter.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classes\n                                \n                                \n                                            Optional\n                                        clearAll\n                                \n                                \n                                            Optional\n                                        disabledKey\n                                \n                                \n                                            Optional\n                                        enableCheckAll\n                                \n                                \n                                            Optional\n                                        labelKey\n                                \n                                \n                                            Optional\n                                        loading\n                                \n                                \n                                            Optional\n                                        maxHeight\n                                \n                                \n                                            Optional\n                                        noDataLabel\n                                \n                                \n                                            Optional\n                                        primaryKey\n                                \n                                \n                                            Optional\n                                        searchBy\n                                \n                                \n                                            Optional\n                                        searchPlaceholderText\n                                \n                                \n                                            Optional\n                                        selectAllText\n                                \n                                \n                                            Optional\n                                        unSelectAllText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                    \n                                \n                                \n                                    \n                                        classes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clearAll\n                                    \n                                \n                                \n                                    \n                                        clearAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabledKey\n                                    \n                                \n                                \n                                    \n                                        disabledKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableCheckAll\n                                    \n                                \n                                \n                                    \n                                        enableCheckAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelKey\n                                    \n                                \n                                \n                                    \n                                        labelKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxHeight\n                                    \n                                \n                                \n                                    \n                                        maxHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDataLabel\n                                    \n                                \n                                \n                                    \n                                        noDataLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryKey\n                                    \n                                \n                                \n                                    \n                                        primaryKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchBy\n                                    \n                                \n                                \n                                    \n                                        searchBy:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchPlaceholderText\n                                    \n                                \n                                \n                                    \n                                        searchPlaceholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectAllText\n                                    \n                                \n                                \n                                    \n                                        selectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unSelectAllText\n                                    \n                                \n                                \n                                    \n                                        unSelectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterSettings {\n    enableCheckAll?: boolean;\n    selectAllText?: string;\n    unSelectAllText?: string;\n    searchBy?: string[];\n    maxHeight?: number;\n    classes?: string;\n    searchPlaceholderText?: string;\n    noDataLabel?: string;\n    labelKey?: string;\n    primaryKey?: string;\n    disabledKey?: string;\n    loading?: boolean;\n    clearAll?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FinishTypingDirective.html":{"url":"directives/FinishTypingDirective.html","title":"directive - FinishTypingDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FinishTypingDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ui/finish-typing.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [finishTyping]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inputChangedPromise\n                            \n                            \n                                listener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                callback\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, rendered: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/ui/finish-typing.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendered\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        callback\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/ui/finish-typing.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/ui/finish-typing.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputChangedPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnType<>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ui/finish-typing.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listener\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ui/finish-typing.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, ElementRef, Renderer2, OnDestroy } from '@angular/core';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[finishTyping]'\n})\nexport class FinishTypingDirective implements OnDestroy {\n\n    @Output() callback: EventEmitter = new EventEmitter();\n    listener: any;\n    inputChangedPromise: ReturnType;\n\n    constructor(private _elementRef: ElementRef, rendered: Renderer2) {\n        this.listener = rendered.listen(this._elementRef.nativeElement, 'keyup', () => {\n\n            if (this.inputChangedPromise) {\n                clearTimeout(this.inputChangedPromise);\n            }\n\n            this.inputChangedPromise = setTimeout(() => {\n                this.callback.emit();\n            }, 500);\n        });\n    }\n\n    ngOnDestroy() {\n        this.listener();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FsDocument.html":{"url":"interfaces/FsDocument.html","title":"interface - FsDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FsDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fullscreen/fullscreen-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HTMLDocument\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        mozCancelFullScreen\n                                \n                                \n                                            Optional\n                                        mozFullScreenElement\n                                \n                                \n                                            Optional\n                                        msExitFullscreen\n                                \n                                \n                                            Optional\n                                        msFullscreenElement\n                                \n                                \n                                            Optional\n                                        webkitExitFullscreen\n                                \n                                \n                                            Optional\n                                        webkitFullscreenElement\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mozCancelFullScreen\n                                    \n                                \n                                \n                                    \n                                        mozCancelFullScreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mozFullScreenElement\n                                    \n                                \n                                \n                                    \n                                        mozFullScreenElement:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Element\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msExitFullscreen\n                                    \n                                \n                                \n                                    \n                                        msExitFullscreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msFullscreenElement\n                                    \n                                \n                                \n                                    \n                                        msFullscreenElement:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Element\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webkitExitFullscreen\n                                    \n                                \n                                \n                                    \n                                        webkitExitFullscreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webkitFullscreenElement\n                                    \n                                \n                                \n                                    \n                                        webkitFullscreenElement:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Element\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FsDocument extends HTMLDocument {\n  msFullscreenElement?: Element;\n  mozFullScreenElement?: Element;\n  webkitFullscreenElement?: Element;\n  msExitFullscreen?: () => void;\n  mozCancelFullScreen?: () => void;\n  webkitExitFullscreen?: () => void;\n}\n\nexport interface FsDocumentElement extends HTMLElement {\n  msRequestFullscreen?: () => void;\n  mozRequestFullScreen?: () => void;\n  webkitRequestFullscreen?: () => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FsDocumentElement.html":{"url":"interfaces/FsDocumentElement.html","title":"interface - FsDocumentElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FsDocumentElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fullscreen/fullscreen-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HTMLElement\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        mozRequestFullScreen\n                                \n                                \n                                            Optional\n                                        msRequestFullscreen\n                                \n                                \n                                            Optional\n                                        webkitRequestFullscreen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mozRequestFullScreen\n                                    \n                                \n                                \n                                    \n                                        mozRequestFullScreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msRequestFullscreen\n                                    \n                                \n                                \n                                    \n                                        msRequestFullscreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webkitRequestFullscreen\n                                    \n                                \n                                \n                                    \n                                        webkitRequestFullscreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FsDocument extends HTMLDocument {\n  msFullscreenElement?: Element;\n  mozFullScreenElement?: Element;\n  webkitFullscreenElement?: Element;\n  msExitFullscreen?: () => void;\n  mozCancelFullScreen?: () => void;\n  webkitExitFullscreen?: () => void;\n}\n\nexport interface FsDocumentElement extends HTMLElement {\n  msRequestFullscreen?: () => void;\n  mozRequestFullScreen?: () => void;\n  webkitRequestFullscreen?: () => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FullscreenService.html":{"url":"injectables/FullscreenService.html","title":"injectable - FullscreenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FullscreenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fullscreen/fullscreen.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n                        \n                            constructor(public fullscreenService: FullscreenService) { }\n\nthis.fullscreenService.enable(); // Habilita el modo pantalla completa\nthis.fullscreenService.disable(); // Deshabilita el modo pantalla completa\nthis.fullscreenService.isEnabled // Obtiene el estado del servicio\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/fullscreen/fullscreen.service.ts:25\n                            \n                        \n\n                \n                    \n                            Crea una instancia de Fullscreen\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Defined in src/fullscreen/fullscreen.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Defined in src/fullscreen/fullscreen.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/fullscreen/fullscreen.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/fullscreen/fullscreen.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Defined in src/fullscreen/fullscreen.service.ts:20\n                                \n                            \n\n                \n                    \n                        setisEnabled(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/fullscreen/fullscreen.service.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FsDocument, FsDocumentElement } from './fullscreen-interface';\n\n/**\n * @description\n * Clase para entrar y salir del modo pantalla completa en el navegador web\n * @example\n * constructor(public fullscreenService: FullscreenService) { }\n *\n * this.fullscreenService.enable(); // Habilita el modo pantalla completa\n * this.fullscreenService.disable(); // Deshabilita el modo pantalla completa\n * this.fullscreenService.isEnabled // Obtiene el estado del servicio\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FullscreenService {\n\n  private _isEnabled: boolean;\n  public get isEnabled(): boolean {\n    return this._isEnabled;\n  }\n  public set isEnabled(value: boolean) {\n    this._isEnabled = value;\n  }\n\n  /**\n   * Crea una instancia de Fullscreen\n   */\n  constructor () {\n\n    const setEnabled = (e: Event) => {\n\n      const fsDoc =  document;\n\n      if (fsDoc.fullscreenElement !== undefined) {\n        this.isEnabled = !(fsDoc.fullscreenElement === null);\n\n      } else if (fsDoc.webkitFullscreenElement !== undefined) { /* Old Chrome, Safari and Opera */\n        this.isEnabled = !(fsDoc.webkitFullscreenElement === null);\n\n      } else if (fsDoc.msFullscreenElement !== undefined) { /* IE / Edge */\n        this.isEnabled = !(fsDoc.msFullscreenElement === null);\n\n      } else if (fsDoc.mozFullScreenElement !== undefined) { /* Firefox */\n        this.isEnabled = !(fsDoc.mozFullScreenElement === null);\n\n      }\n    };\n\n    document.addEventListener('fullscreenchange', e => setEnabled(e));\n\n    /* Chrome, Safari and Opera */\n    document.addEventListener('webkitfullscreenchange', e => setEnabled(e));\n\n    /* IE / Edge */\n    document.addEventListener('msfullscreenchange', e => setEnabled(e));\n\n    /* Firefox */\n    document.addEventListener('mozfullscreenchange', e => setEnabled(e));\n  }\n\n  /**\n   * @description\n   * Habilita el modo pantalla completa\n   */\n  enable(): void {\n\n    const elem =  document.documentElement;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.webkitRequestFullscreen) { /* Old Chrome, Safari and Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) { /* IE/Edge */\n      elem.msRequestFullscreen();\n    } else if ('mozRequestFullScreen' in elem) { /* Firefox */\n      elem.mozRequestFullScreen();\n    }\n  }\n\n  /**\n   * @description\n   * Deshabilita el modo pantalla completa\n   */\n  disable(): void {\n\n    const fsDoc =  document;\n\n    if (this.isEnabled && fsDoc.exitFullscreen) {\n      fsDoc.exitFullscreen();\n    } else if (this.isEnabled && fsDoc.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n      fsDoc.webkitExitFullscreen();\n    } else if (this.isEnabled && fsDoc.msExitFullscreen) { /* IE/Edge */\n      fsDoc.msExitFullscreen();\n    } else if (this.isEnabled && fsDoc.mozCancelFullScreen) { /* Firefox */\n      fsDoc.mozCancelFullScreen();\n    }\n\n  }\n\n  /**\n   * @description\n   * Habilita/Deshablita el modo pantalla completa\n   */\n  toggle(): void {\n    if (this.isEnabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleClientConfig.html":{"url":"classes/GoogleClientConfig.html","title":"class - GoogleClientConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleClientConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/google/IGoogle.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface GoogleUserProfile {\n  id: string;\n  id_token: string;\n  first_name: string;\n  last_name?: string;\n  email?: string;\n  picture?: string;\n}\n\nexport class GoogleClientConfig implements gapi.auth2.ClientConfig { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleSDKConfig.html":{"url":"classes/GoogleSDKConfig.html","title":"class - GoogleSDKConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleSDKConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/google/config/google-sdk.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _clientConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clientConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientConfig: gapi.auth2.ClientConfig)\n                    \n                \n                        \n                            \n                                Defined in src/google/config/google-sdk.config.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientConfig\n                                                  \n                                                        \n                                                                    gapi.auth2.ClientConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _clientConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     gapi.auth2.ClientConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/google/config/google-sdk.config.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        clientConfig\n                    \n                \n\n                \n                    \n                        getclientConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/google/config/google-sdk.config.ts:5\n                                \n                            \n\n                \n                    \n                        setclientConfig(value)\n                    \n                \n                            \n                                \n                                    Defined in src/google/config/google-sdk.config.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        export class GoogleSDKConfig {\n  private _clientConfig: gapi.auth2.ClientConfig;\n  public get clientConfig(): gapi.auth2.ClientConfig {\n    return this._clientConfig;\n  }\n  public set clientConfig(value: gapi.auth2.ClientConfig) {\n    this._clientConfig = value;\n  }\n\n  constructor(clientConfig: gapi.auth2.ClientConfig) {\n    this.clientConfig = clientConfig;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GoogleSDKModule.html":{"url":"modules/GoogleSDKModule.html","title":"module - GoogleSDKModule","body":"\n                   \n\n\n\n\n    Modules\n    GoogleSDKModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/google/google-sdk.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(gapiConfigProvider: Provider)\n                \n            \n\n\n            \n                \n                    Defined in src/google/google-sdk.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gapiConfigProvider\n                                    \n                                                Provider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { GoogleSDKService } from './google-sdk.service';\n\n/**\n * @description\n * Módulo para parametrizar la autenticación con Google\n * @example\n * import { NG_GAPI_CONFIG, GoogleSDKModule } from '@sersol/ngx';\n * @NgModule({\n *  imports: [\n *    ...,\n *    GoogleSDKModule.forRoot({\n *        provide: NG_GAPI_CONFIG,\n *        useValue: {\n *            client_id: GOOGLE_CLIENT_ID,\n *            scope: 'profile email'\n *        }\n *    }),\n *    ...\n *  ],\n *  declarations: [...],\n *  schemas: [...],\n *  providers: [...],\n *  bootstrap: [...]\n * })\n * export class AppModule { }\n */\n@NgModule()\nexport class GoogleSDKModule {\n  static forRoot(gapiConfigProvider: Provider): ModuleWithProviders {\n    return {\n      ngModule: GoogleSDKModule,\n      providers: [\n        gapiConfigProvider,\n        GoogleSDKService\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleSDKService.html":{"url":"injectables/GoogleSDKService.html","title":"injectable - GoogleSDKService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleSDKService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/google/google-sdk.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Private\n                                _GoogleAuth\n                            \n                            \n                                    Private\n                                    Readonly\n                                gapiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadSDK\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                                \n                                    GoogleAuth\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: GoogleClientConfig)\n                    \n                \n                        \n                            \n                                Defined in src/google/google-sdk.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        GoogleClientConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadSDK\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSDK()\n                \n            \n\n\n            \n                \n                    Defined in src/google/google-sdk.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/google/google-sdk.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GoogleSDKConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/google/google-sdk.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _GoogleAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     gapi.auth2.GoogleAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/google/google-sdk.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            gapiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://apis.google.com/js/api.js'\n                        \n                    \n                        \n                            \n                                    Defined in src/google/google-sdk.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in src/google/google-sdk.service.ts:25\n                                \n                            \n\n                \n                    \n                        setconfig(value)\n                    \n                \n                            \n                                \n                                    Defined in src/google/google-sdk.service.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        GoogleAuth\n                    \n                \n\n                \n                    \n                        getGoogleAuth()\n                    \n                \n                            \n                                \n                                    Defined in src/google/google-sdk.service.ts:33\n                                \n                            \n\n                \n                    \n                        setGoogleAuth(value)\n                    \n                \n                            \n                                \n                                    Defined in src/google/google-sdk.service.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Inject, Injectable, InjectionToken, Output, EventEmitter } from '@angular/core';\nimport { Observer } from 'rxjs';\nimport { GoogleSDKConfig } from './config/google-sdk.config';\nimport { GoogleUserProfile, GoogleClientConfig } from './Igoogle';\n\nexport let NG_GAPI_CONFIG: InjectionToken = new InjectionToken('google.config');\n\n/**\n * @description\n * Servicio para interactuar con la API de Google\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleSDKService {\n  private readonly gapiUrl: string = 'https://apis.google.com/js/api.js';\n\n  @Output() onload: EventEmitter = new EventEmitter();\n\n  private _config: GoogleSDKConfig;\n  public get config(): GoogleSDKConfig {\n    return this._config;\n  }\n  public set config(value: GoogleSDKConfig) {\n    this._config = value;\n  }\n\n  private _GoogleAuth: gapi.auth2.GoogleAuth;\n  public get GoogleAuth(): gapi.auth2.GoogleAuth {\n    return this._GoogleAuth;\n  }\n  public set GoogleAuth(value: gapi.auth2.GoogleAuth) {\n    this._GoogleAuth = value;\n  }\n\n  constructor(@Inject(NG_GAPI_CONFIG) config: GoogleClientConfig) {\n    this.config = new GoogleSDKConfig(config);\n    this.loadSDK().subscribe(() => {\n      console.log('Google: SDK loaded');\n      this.onload.emit();\n    });\n  }\n\n  /**\n   * @description\n   * Método para obtener un token de inicio de sesión junto con la información de perfil\n   * @returns {Observable}\n   */\n  public login(): Observable {\n    return new Observable((observer: Observer) => {\n\n      this.GoogleAuth.signIn().then((res: gapi.auth2.GoogleUser) => {\n\n        const profile = res.getBasicProfile();\n\n        const googleProfile: GoogleUserProfile = {\n          id: profile.getId(),\n          id_token: res.getAuthResponse().id_token,\n          first_name: profile.getGivenName(),\n          last_name: profile.getFamilyName(),\n          email: profile.getEmail(),\n          picture: profile.getImageUrl().replace('=s96-', '=-')\n        };\n\n        observer.next(googleProfile);\n        observer.complete();\n\n      }, (err: any) => {\n          return observer.error(err);\n      });\n\n    });\n  }\n\n  /**\n   * @description\n   * Metodo privado que carga la libreria de Google, al cargarse correctamente, se emite el evento 'onload'\n   */\n  private loadSDK(): Observable {\n    return new Observable((observer: Observer) => {\n\n      if ((window as any).gapi == null) {\n\n        const node = document.createElement('script');\n        node.src = this.gapiUrl;\n        node.type = 'text/javascript';\n        node.async = true;\n        node.defer = true;\n        node.id = 'google-api';\n        document.getElementsByTagName('head')[0].appendChild(node);\n        node.onload = () => {\n          gapi.load('auth2', () => {\n            gapi.auth2.init(this.config.clientConfig).then((auth: gapi.auth2.GoogleAuth) => {\n              this.GoogleAuth = auth;\n              observer.next();\n              observer.complete();\n            }).catch((err: any) => observer.error(err));\n          });\n        };\n\n      } else {\n        observer.next();\n        observer.complete();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleUserProfile.html":{"url":"interfaces/GoogleUserProfile.html","title":"interface - GoogleUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/google/IGoogle.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                        first_name\n                                \n                                \n                                        id\n                                \n                                \n                                        id_token\n                                \n                                \n                                            Optional\n                                        last_name\n                                \n                                \n                                            Optional\n                                        picture\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token\n                                    \n                                \n                                \n                                    \n                                        id_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleUserProfile {\n  id: string;\n  id_token: string;\n  first_name: string;\n  last_name?: string;\n  email?: string;\n  picture?: string;\n}\n\nexport class GoogleClientConfig implements gapi.auth2.ClientConfig { }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/GrowOnInputDirective.html":{"url":"directives/GrowOnInputDirective.html","title":"directive - GrowOnInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  GrowOnInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/grow-on-input.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [growOnInput]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScrollHeight\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, _renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/form/grow-on-input.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScrollHeight\n                        \n                        \n                    \n                \n            \n            \n                \ngetScrollHeight(elm: any)\n                \n            \n\n\n            \n                \n                    Defined in src/form/grow-on-input.directive.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elm\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/form/grow-on-input.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/form/grow-on-input.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listener\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/form/grow-on-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, OnInit, OnDestroy, ElementRef, Renderer2 } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[growOnInput]'\n})\nexport class GrowOnInputDirective implements OnInit, OnDestroy {\n    listener;\n\n    constructor(private _elementRef: ElementRef, private _renderer: Renderer2) { }\n\n    getScrollHeight(elm: any) {\n        const savedValue = elm.value;\n        elm.value = '';\n        elm._baseScrollHeight = elm.scrollHeight;\n        elm.value = savedValue;\n    }\n\n    ngOnInit() {\n        this.listener = this._renderer?.listen(this._elementRef.nativeElement, 'keyup', () => {\n\n            if (this._elementRef.nativeElement.nodeName !== 'TEXTAREA') {\n                return;\n            }\n\n            const rows = Math.ceil(this._elementRef.nativeElement.scrollHeight / 16);\n            this._elementRef.nativeElement.rows = 1 + rows;\n\n        });\n    }\n\n    ngOnDestroy() {\n        this.listener();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDimensions.html":{"url":"interfaces/IDimensions.html","title":"interface - IDimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/select/virtual-scroll/idimension.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        childHeight\n                                \n                                \n                                        childWidth\n                                \n                                \n                                        itemCount\n                                \n                                \n                                        itemsPerPage\n                                \n                                \n                                        itemsPerWrapGroup\n                                \n                                \n                                        maxScrollPosition\n                                \n                                \n                                        pageCount_fractional\n                                \n                                \n                                        scrollLength\n                                \n                                \n                                        viewportLength\n                                \n                                \n                                        wrapGroupsPerPage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        childHeight\n                                    \n                                \n                                \n                                    \n                                        childHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        childWidth\n                                    \n                                \n                                \n                                    \n                                        childWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerWrapGroup\n                                    \n                                \n                                \n                                    \n                                        itemsPerWrapGroup:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxScrollPosition\n                                    \n                                \n                                \n                                    \n                                        maxScrollPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount_fractional\n                                    \n                                \n                                \n                                    \n                                        pageCount_fractional:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollLength\n                                    \n                                \n                                \n                                    \n                                        scrollLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewportLength\n                                    \n                                \n                                \n                                    \n                                        viewportLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wrapGroupsPerPage\n                                    \n                                \n                                \n                                    \n                                        wrapGroupsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDimensions {\n\titemCount: number;\n\titemsPerWrapGroup: number;\n\twrapGroupsPerPage: number;\n\titemsPerPage: number;\n\tpageCount_fractional: number;\n\tchildWidth: number;\n\tchildHeight: number;\n\tscrollLength: number;\n\tviewportLength: number;\n\tmaxScrollPosition: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPageInfo.html":{"url":"interfaces/IPageInfo.html","title":"interface - IPageInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPageInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/select/virtual-scroll/ipageinfo.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endIndex\n                                \n                                \n                                        endIndexWithBuffer\n                                \n                                \n                                        maxScrollPosition\n                                \n                                \n                                        scrollEndPosition\n                                \n                                \n                                        scrollStartPosition\n                                \n                                \n                                        startIndex\n                                \n                                \n                                        startIndexWithBuffer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endIndex\n                                    \n                                \n                                \n                                    \n                                        endIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endIndexWithBuffer\n                                    \n                                \n                                \n                                    \n                                        endIndexWithBuffer:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxScrollPosition\n                                    \n                                \n                                \n                                    \n                                        maxScrollPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollEndPosition\n                                    \n                                \n                                \n                                    \n                                        scrollEndPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollStartPosition\n                                    \n                                \n                                \n                                    \n                                        scrollStartPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startIndex\n                                    \n                                \n                                \n                                    \n                                        startIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startIndexWithBuffer\n                                    \n                                \n                                \n                                    \n                                        startIndexWithBuffer:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPageInfo {\n\tstartIndex: number;\n\tendIndex: number;\n\tscrollStartPosition: number;\n\tscrollEndPosition: number;\n\tstartIndexWithBuffer: number;\n\tendIndexWithBuffer: number;\n\tmaxScrollPosition: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IViewport.html":{"url":"interfaces/IViewport.html","title":"interface - IViewport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IViewport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/select/virtual-scroll/iviewport.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IPageInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        padding\n                                \n                                \n                                        scrollLength\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        padding\n                                    \n                                \n                                \n                                    \n                                        padding:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollLength\n                                    \n                                \n                                \n                                    \n                                        scrollLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IPageInfo } from './ipageinfo';\n\nexport interface IViewport extends IPageInfo {\n\tpadding: number;\n\tscrollLength: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LatLng.html":{"url":"interfaces/LatLng.html","title":"interface - LatLng","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LatLng\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/map/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lat\n                                \n                                \n                                        lng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LatLng {\n    lat: number;\n    lng: number;\n}\n\n/**\n * @description\n * Interface que representa al objeto OpenId usado para autenticarse con la API de SER\n */\nexport interface LatLng2LatLngOptions {\n    from: {\n        lat: number,\n        lng: number\n    };\n    to: {\n        lat: number,\n        lng: number\n    };\n}\n\nexport interface CenterPoint {\n    lat: number;\n    lng: number;\n    offset_x?: number;\n    offset_y?: number;\n    preserve_zoom?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LatLng2LatLngOptions.html":{"url":"interfaces/LatLng2LatLngOptions.html","title":"interface - LatLng2LatLngOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LatLng2LatLngOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/map/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LatLng {\n    lat: number;\n    lng: number;\n}\n\n/**\n * @description\n * Interface que representa al objeto OpenId usado para autenticarse con la API de SER\n */\nexport interface LatLng2LatLngOptions {\n    from: {\n        lat: number,\n        lng: number\n    };\n    to: {\n        lat: number,\n        lng: number\n    };\n}\n\nexport interface CenterPoint {\n    lat: number;\n    lng: number;\n    offset_x?: number;\n    offset_y?: number;\n    preserve_zoom?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeafletMap.html":{"url":"classes/LeafletMap.html","title":"class - LeafletMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeafletMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/map/leaflet/main.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                layerControl\n                            \n                            \n                                map\n                            \n                            \n                                markerCluster\n                            \n                            \n                                markers\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMarker\n                            \n                            \n                                centerPoint\n                            \n                            \n                                fitMarkersBounds\n                            \n                            \n                                initMarkerCluster\n                            \n                            \n                                panTo\n                            \n                            \n                                setView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: LeafletMapOptions)\n                    \n                \n                        \n                            \n                                Defined in src/map/leaflet/main.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        LeafletMapOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layerControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Control.Layers\n\n                        \n                    \n                        \n                            \n                                    Defined in src/map/leaflet/main.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/map/leaflet/main.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerCluster\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.MarkerClusterGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/map/leaflet/main.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/map/leaflet/main.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LeafletMapOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        container: 'leaflet-map',\n        initialView: {\n            lat: 4.6288702,\n            lng: -74.1193724,\n            zoom: 11\n        },\n        clusterMarkers: {\n            enable: true,\n            config: {}\n        },\n        layers: LEAFLET_MAP_LAYERS,\n        mapOptions: {\n            positionControl: true,\n            layers: [LEAFLET_MAP_LAYERS['Mapbox Street']],\n            zoomControl: false\n        },\n        layersOptions: {\n            position: 'topright'\n        }\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/map/leaflet/main.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \naddMarker(latLng: LatLng, id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/map/leaflet/main.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                                LatLng\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            centerPoint\n                        \n                        \n                    \n                \n            \n            \n                \ncenterPoint(options: CenterPoint)\n                \n            \n\n\n            \n                \n                    Defined in src/map/leaflet/main.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CenterPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fitMarkersBounds\n                        \n                        \n                    \n                \n            \n            \n                \nfitMarkersBounds(padding?: LeafletPadding, flyTo?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/map/leaflet/main.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    padding\n                                    \n                                                LeafletPadding\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    flyTo\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initMarkerCluster\n                        \n                        \n                    \n                \n            \n            \n                \ninitMarkerCluster()\n                \n            \n\n\n            \n                \n                    Defined in src/map/leaflet/main.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            panTo\n                        \n                        \n                    \n                \n            \n            \n                \npanTo(latlng: L.LatLng, offset?: L.PointExpression, options?: L.ZoomPanOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/map/leaflet/main.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latlng\n                                    \n                                                L.LatLng\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offset\n                                    \n                                            L.PointExpression\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            L.ZoomPanOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setView\n                        \n                        \n                    \n                \n            \n            \n                \nsetView(latlng: L.LatLng, targetZoom: number, offset?: L.PointExpression, options?: L.ZoomPanOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/map/leaflet/main.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    latlng\n                                    \n                                                L.LatLng\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetZoom\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offset\n                                    \n                                            L.PointExpression\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            L.ZoomPanOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport '@sersol/leaflet-plugins/leaflet-fullscreen';\nimport '@sersol/leaflet-plugins/leaflet-mouseposition';\nimport { mergeObjs } from '../../utils/object';\nimport { hasValue } from '../../utils/check';\nimport { LeafletMapOptions, LeafletPadding } from './types';\nimport { CenterPoint, LatLng } from '../types';\nimport { LEAFLET_MAP_LAYERS } from './providers';\n\nexport class LeafletMap {\n    map: L.Map;\n    markers: any = {};\n    markerCluster: L.MarkerClusterGroup;\n    layerControl: L.Control.Layers;\n    options: LeafletMapOptions = {\n        container: 'leaflet-map',\n        initialView: {\n            lat: 4.6288702,\n            lng: -74.1193724,\n            zoom: 11\n        },\n        clusterMarkers: {\n            enable: true,\n            config: {}\n        },\n        layers: LEAFLET_MAP_LAYERS,\n        mapOptions: {\n            positionControl: true,\n            layers: [LEAFLET_MAP_LAYERS['Mapbox Street']],\n            zoomControl: false\n        },\n        layersOptions: {\n            position: 'topright'\n        }\n    };\n\n    constructor(options: LeafletMapOptions) {\n\n        mergeObjs(this.options, options);\n\n        this.map = new L.Map(this.options.container, this.options.mapOptions);\n\n        this.layerControl = new L.Control.Layers(this.options.layers, null, this.options.layersOptions);\n        this.map.addControl(new L.Control.MousePosition(this.options.mousePositionOptions));\n        this.map.addControl(this.layerControl);\n        this.map.addControl(new L.Control.Fullscreen(this.options.fullscreen));\n        this.map.addControl(new L.Control.Zoom(this.options.zoom));\n\n        this.map.setView([this.options.initialView.lat, this.options.initialView.lng], this.options.initialView.zoom);\n\n        // Create cluster and scope\n        if (this.options.clusterMarkers.enable) {\n            this.initMarkerCluster();\n        }\n\n    }\n\n    initMarkerCluster() {\n        if (L.MarkerClusterGroup) {\n            this.markerCluster = new L.MarkerClusterGroup([], this.options.clusterMarkers.config);\n            this.map.addLayer(this.markerCluster);\n        }\n    }\n\n    fitMarkersBounds(padding?: LeafletPadding, flyTo?: boolean) {\n\n        if (hasValue(this.markers)) {\n\n            const groupWrapper = [];\n\n            // tslint:disable-next-line: forin\n            for (const key in this.markers) {\n                groupWrapper.push(this.markers[key]);\n            }\n\n            if (hasValue(groupWrapper)) {\n\n                const pad: LeafletPadding = {\n                    paddingTopLeft: {\n                        x: 0,\n                        y: 0\n                    },\n                    paddingBottomRight: {\n                        x: 0,\n                        y: 0\n                    }\n                };\n\n                mergeObjs(pad, padding);\n\n                const group = L.featureGroup(groupWrapper);\n\n                if (flyTo) {\n                    this.map.flyToBounds(group.getBounds(), {\n                        duration: 0.5,\n                        paddingTopLeft: [pad.paddingTopLeft.x, pad.paddingTopLeft.y],\n                        paddingBottomRight: [pad.paddingBottomRight.x, pad.paddingBottomRight.y]\n                    });\n                } else {\n                    this.map.fitBounds(group.getBounds(), {\n                        paddingTopLeft: [pad.paddingTopLeft.x, pad.paddingTopLeft.y],\n                        paddingBottomRight: [pad.paddingBottomRight.x, pad.paddingBottomRight.y]\n                    });\n                }\n            }\n\n        }\n\n    }\n\n    addMarker(latLng: LatLng, id: any) {\n\n        this.markers[id] = L.marker([latLng.lat, latLng.lng]);\n\n        if (this.options.clusterMarkers.enable) {\n            this.markerCluster.addLayer(this.markers[id]);\n        } else {\n            this.markers[id].addTo(this.map);\n        }\n\n        return this.markers[id];\n    }\n\n    panTo(latlng: L.LatLng, offset?: L.PointExpression, options?: L.ZoomPanOptions) {\n\n        if (hasValue(offset)) {\n            const x = this.map.latLngToContainerPoint(latlng).x - offset[0];\n            const y = this.map.latLngToContainerPoint(latlng).y - offset[1];\n            const point = this.map.containerPointToLatLng([x, y]);\n            return this.map.setView(point, this.map.getZoom(), options);\n        } else {\n            return this.map.setView(latlng, this.map.getZoom(), options);\n        }\n    }\n\n    setView(latlng: L.LatLng, targetZoom: number, offset?: L.PointExpression, options?: L.ZoomPanOptions) {\n\n        if (hasValue(offset)) {\n            const targetPoint = this.map.project(latlng, targetZoom).subtract(offset);\n            const targetLatLng = this.map.unproject(targetPoint, targetZoom);\n            return this.map.setView(targetLatLng, targetZoom, options);\n        } else {\n            return this.map.setView(latlng, targetZoom, options);\n        }\n\n    }\n\n    centerPoint(options: CenterPoint) {\n        this.map.flyTo([options.lat, options.lng], options.preserve_zoom ? this.map.getZoom() : 19, {\n            duration: 0.5\n        });\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeafletMapOptions.html":{"url":"interfaces/LeafletMapOptions.html","title":"interface - LeafletMapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LeafletMapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/map/leaflet/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        clusterMarkers\n                                \n                                \n                                        container\n                                \n                                \n                                            Optional\n                                        fullscreen\n                                \n                                \n                                            Optional\n                                        initialView\n                                \n                                \n                                            Optional\n                                        layers\n                                \n                                \n                                            Optional\n                                        layersOptions\n                                \n                                \n                                            Optional\n                                        mapOptions\n                                \n                                \n                                            Optional\n                                        mousePositionOptions\n                                \n                                \n                                            Optional\n                                        zoom\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clusterMarkers\n                                    \n                                \n                                \n                                    \n                                        clusterMarkers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullscreen\n                                    \n                                \n                                \n                                    \n                                        fullscreen:     L.Control.FullscreenOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     L.Control.FullscreenOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialView\n                                    \n                                \n                                \n                                    \n                                        initialView:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layers\n                                    \n                                \n                                \n                                    \n                                        layers:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layersOptions\n                                    \n                                \n                                \n                                    \n                                        layersOptions:     L.Control.LayersOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     L.Control.LayersOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapOptions\n                                    \n                                \n                                \n                                    \n                                        mapOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mousePositionOptions\n                                    \n                                \n                                \n                                    \n                                        mousePositionOptions:     L.Control.MousePositionOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     L.Control.MousePositionOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                    \n                                \n                                \n                                    \n                                        zoom:     L.Control.ZoomOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     L.Control.ZoomOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport '@sersol/leaflet-plugins/leaflet-fullscreen';\n\nexport interface LeafletMapOptions {\n    container: string;\n    initialView?: {\n        lat?: number;\n        lng?: number;\n        zoom?: number;\n    };\n    clusterMarkers?: {\n        enable?: boolean;\n        config?: L.MarkerClusterGroupOptions;\n    };\n    layers?: any;\n    mapOptions?: {\n        positionControl?: boolean;\n        layers?: any[];\n        zoomControl: any\n    };\n    fullscreen?: L.Control.FullscreenOptions;\n    zoom?: L.Control.ZoomOptions;\n    layersOptions?: L.Control.LayersOptions;\n    mousePositionOptions?: L.Control.MousePositionOptions;\n}\n\nexport interface LeafletPadding {\n    paddingTopLeft?: {\n        x?: number;\n        y?: number;\n    };\n    paddingBottomRight?: {\n        x?: number;\n        y?: number;\n    };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeafletPadding.html":{"url":"interfaces/LeafletPadding.html","title":"interface - LeafletPadding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LeafletPadding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/map/leaflet/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        paddingBottomRight\n                                \n                                \n                                            Optional\n                                        paddingTopLeft\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        paddingBottomRight\n                                    \n                                \n                                \n                                    \n                                        paddingBottomRight:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paddingTopLeft\n                                    \n                                \n                                \n                                    \n                                        paddingTopLeft:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport '@sersol/leaflet-plugins/leaflet-fullscreen';\n\nexport interface LeafletMapOptions {\n    container: string;\n    initialView?: {\n        lat?: number;\n        lng?: number;\n        zoom?: number;\n    };\n    clusterMarkers?: {\n        enable?: boolean;\n        config?: L.MarkerClusterGroupOptions;\n    };\n    layers?: any;\n    mapOptions?: {\n        positionControl?: boolean;\n        layers?: any[];\n        zoomControl: any\n    };\n    fullscreen?: L.Control.FullscreenOptions;\n    zoom?: L.Control.ZoomOptions;\n    layersOptions?: L.Control.LayersOptions;\n    mousePositionOptions?: L.Control.MousePositionOptions;\n}\n\nexport interface LeafletPadding {\n    paddingTopLeft?: {\n        x?: number;\n        y?: number;\n    };\n    paddingBottomRight?: {\n        x?: number;\n        y?: number;\n    };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LongPressDirective.html":{"url":"directives/LongPressDirective.html","title":"directive - LongPressDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  LongPressDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ui/long-press.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [longPress]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                longPressing\n                            \n                            \n                                    Private\n                                mouseX\n                            \n                            \n                                    Private\n                                mouseY\n                            \n                            \n                                    Private\n                                pressing\n                            \n                            \n                                    Private\n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                endPress\n                            \n                            \n                                loop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pressDuration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onLongPress\n                            \n                            \n                                onLongPressEnd\n                            \n                            \n                                onLongPressing\n                            \n                            \n                                onShortPress\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.longpress\n                            \n                            \n                                class.press\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mousedown\n                            \n                            \n                                mousemove\n                            \n                            \n                                mouseup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        pressDuration\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:10\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        onLongPress\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLongPressEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLongPressing\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onShortPress\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:12\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.longpress\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.press\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mousedown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousedown(event: MouseEvent | TouchEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/ui/long-press.directive.ts:31\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousemove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousemove(event: MouseEvent | TouchEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/ui/long-press.directive.ts:96\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseup(event: MouseEvent | TouchEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/ui/long-press.directive.ts:86\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/ui/long-press.directive.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endPress\n                        \n                        \n                    \n                \n            \n            \n                \nendPress()\n                \n            \n\n\n            \n                \n                    Defined in src/ui/long-press.directive.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loop\n                        \n                        \n                    \n                \n            \n            \n                \nloop(event)\n                \n            \n\n\n            \n                \n                    Defined in src/ui/long-press.directive.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            longPressing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mouseX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mouseY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pressing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ui/long-press.directive.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: '[longPress]'\n})\nexport class LongPressDirective {\n\n    @Input() pressDuration = 500;\n\n    @Output() onShortPress: EventEmitter = new EventEmitter();\n    @Output() onLongPress: EventEmitter = new EventEmitter();\n    @Output() onLongPressing: EventEmitter = new EventEmitter();\n    @Output() onLongPressEnd: EventEmitter = new EventEmitter();\n\n    private pressing: boolean;\n    private longPressing: boolean;\n    private timeout: any;\n    private mouseX: number;\n    private mouseY: number;\n\n    @HostBinding('class.press')\n    get press() { return this.pressing; }\n\n    @HostBinding('class.longpress')\n    get longPress() { return this.longPressing; }\n\n    @HostListener('mousedown', ['$event'])\n    @HostListener('touchstart', ['$event'])\n    onMouseDown(event: MouseEvent | TouchEvent) {\n\n        // don't do right/middle clicks\n        if (event instanceof MouseEvent && event.button !== 0) { return; }\n\n        if (event instanceof MouseEvent) {\n            this.mouseX = event.clientX;\n            this.mouseY = event.clientY;\n        } else if (event instanceof TouchEvent) {\n            this.mouseX = event.touches[0].clientX;\n            this.mouseY = event.touches[0].clientY;\n        }\n\n        this.pressing = true;\n        this.longPressing = false;\n\n        this.timeout = setTimeout(() => {\n            this.longPressing = true;\n            this.onLongPress.emit(event);\n            this.loop(event);\n            event.preventDefault();\n        }, this.pressDuration);\n\n        this.loop(event);\n    }\n\n    loop(event) {\n        if (this.longPressing) {\n            this.timeout = setTimeout(() => {\n                this.onLongPressing.emit(event);\n                this.loop(event);\n            }, 50);\n        }\n    }\n\n    dismiss() {\n        clearTimeout(this.timeout);\n        this.longPressing = false;\n        this.pressing = false;\n    }\n\n    endPress() {\n        clearTimeout(this.timeout);\n\n        if (!this.longPressing) {\n            this.onShortPress.emit();\n        }\n\n        this.longPressing = false;\n        this.pressing = false;\n        this.onLongPressEnd.emit(true);\n    }\n\n    @HostListener('mouseup', ['$event'])\n    @HostListener('touchend', ['$event'])\n    onMouseUp(event: MouseEvent | TouchEvent) {\n\n        // don't do right/middle clicks\n        if ((event as MouseEvent).button !== 0) { return; }\n\n        this.endPress();\n    }\n\n    @HostListener('mousemove', ['$event'])\n    @HostListener('touchmove', ['$event'])\n    onMouseMove(event: MouseEvent | TouchEvent) {\n\n        if (this.pressing && !this.longPressing) {\n            let xThres = false;\n            let yThres = false;\n\n            if (event instanceof MouseEvent) {\n                xThres = (event.clientX - this.mouseX) > 10;\n                yThres = (event.clientY - this.mouseY) > 10;\n            } else if (event instanceof TouchEvent) {\n                xThres = (event.touches[0].clientX - this.mouseX) > 10;\n                yThres = (event.touches[0].clientY - this.mouseY) > 10;\n            }\n\n            if (xThres || yThres) {\n                this.dismiss();\n            }\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/map/map.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLatLog\n                            \n                            \n                                cutPrecision\n                            \n                            \n                                distancePoints\n                            \n                            \n                                getCurrentPosition\n                            \n                            \n                                middlePoint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkLatLog\n                        \n                        \n                    \n                \n            \n            \n                \ncheckLatLog(lat: number, lng: number)\n                \n            \n\n\n            \n                \n                    Defined in src/map/map.service.ts:44\n                \n            \n\n\n            \n                \n                    Verifica si la latitud y longitud son válidas\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lat\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Latitud\n\n                                    \n                                \n                                \n                                    lng\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Longitud\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cutPrecision\n                        \n                        \n                    \n                \n            \n            \n                \ncutPrecision(obj: any, precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/map/map.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            distancePoints\n                        \n                        \n                    \n                \n            \n            \n                \ndistancePoints(options: LatLng2LatLngOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/map/map.service.ts:52\n                \n            \n\n\n            \n                \n                    Obtiene la distancia en km entre dos puntos LatLng\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                LatLng2LatLngOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/map/map.service.ts:22\n                \n            \n\n\n            \n                \n                    Metodo para obtener la posisión GPS actual usando Observable\n\n\n                    \n                        Example :\n                        \n                            this.mapService.getCurrentPosition().pipe(take(1)).subscribe({\nnext(position) {\nconsole.log(&#39;Current Position: &#39;, position);\n},\nerror(msg) {\nconsole.log(&#39;Error Getting Location: &#39;, msg);\n}\n});\n                        \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            middlePoint\n                        \n                        \n                    \n                \n            \n            \n                \nmiddlePoint(options: LatLng2LatLngOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/map/map.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                LatLng2LatLngOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     false | { longitude: any; Latitude: any; angle: number; distance: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LatLng2LatLngOptions } from './types';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MapService {\n\n    /**\n     * Metodo para obtener la posisión GPS actual usando Observable\n     * @example\n     * this.mapService.getCurrentPosition().pipe(take(1)).subscribe({\n     *      next(position) {\n     *        console.log('Current Position: ', position);\n     *      },\n     *      error(msg) {\n     *        console.log('Error Getting Location: ', msg);\n     *      }\n     *   });\n     */\n    getCurrentPosition(): Observable {\n\n        return new Observable((observer) => {\n\n            // Simple geolocation API check provides values to publish\n            if ('geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition((position: Position) => {\n                    observer.next(position);\n                }, (error: PositionError) => {\n                    observer.error(error);\n                });\n            } else {\n                observer.error('Geolocation not available');\n            }\n        });\n    }\n\n    /**\n     * Verifica si la latitud y longitud son válidas\n     * @param lat Latitud\n     * @param lng Longitud\n     */\n    checkLatLog(lat: number, lng: number) {\n        return (-90 = lat) && (-180 = lng);\n    }\n\n    /**\n     * Obtiene la distancia en km entre dos puntos LatLng\n     * @param lon1 Latitud\n     */\n    distancePoints(options: LatLng2LatLngOptions) {\n        // tslint:disable-next-line: max-line-length\n        const a = Math.sin(((options.to.lat - options.from.lat) * Math.PI / 180) / 2) * Math.sin(((options.to.lat - options.from.lat) * Math.PI / 180) / 2) + Math.cos(options.from.lat * Math.PI / 180) * Math.cos(options.to.lat * Math.PI / 180) * Math.sin(((options.to.lng - options.from.lng) * Math.PI / 180) / 2) * Math.sin(((options.to.lng - options.from.lng) * Math.PI / 180) / 2);\n        return (6371 * (2 * Math.asin(Math.sqrt(a)))) * 1.60934;\n    }\n\n    cutPrecision(obj: any, precision: number) {\n        if ('number' === typeof obj[0]) {\n            for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenIdClient.html":{"url":"interfaces/OpenIdClient.html","title":"interface - OpenIdClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenIdClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/open-id/Iopen-id-client.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        credential_id\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        scopes\n                                \n                                \n                                        secret\n                                \n                                \n                                            Optional\n                                        third_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credential_id\n                                    \n                                \n                                \n                                    \n                                        credential_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes\n                                    \n                                \n                                \n                                    \n                                        scopes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        third_id\n                                    \n                                \n                                \n                                    \n                                        third_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OpenIdClient {\n    id: string;\n    third_id?: string;\n    credential_id?: string;\n    secret: string;\n    scopes?: string;\n}\n\n/**\n * @description\n * Interface que representa al objeto OpenIdData usado para contener los permisos del usuario\n */\nexport interface OpenIdData {\n  claims: string[];\n  isSuperUser: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenIdData.html":{"url":"interfaces/OpenIdData.html","title":"interface - OpenIdData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenIdData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/open-id/Iopen-id-client.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        claims\n                                \n                                \n                                        isSuperUser\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        claims\n                                    \n                                \n                                \n                                    \n                                        claims:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuperUser\n                                    \n                                \n                                \n                                    \n                                        isSuperUser:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OpenIdClient {\n    id: string;\n    third_id?: string;\n    credential_id?: string;\n    secret: string;\n    scopes?: string;\n}\n\n/**\n * @description\n * Interface que representa al objeto OpenIdData usado para contener los permisos del usuario\n */\nexport interface OpenIdData {\n  claims: string[];\n  isSuperUser: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PinInputComponent.html":{"url":"components/PinInputComponent.html","title":"component - PinInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PinInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/form/pin/pin-input.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => PinInputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                pin-input\n            \n\n\n\n\n            \n                templateUrl\n                ./pin-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeInputs\n                            \n                            \n                                    Private\n                                inputs\n                            \n                            \n                                inputsList\n                            \n                            \n                                isDisabled\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canInputValue\n                            \n                            \n                                generateValue\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                onClick\n                            \n                            \n                                onInput\n                            \n                            \n                                    Async\n                                onKeydown\n                            \n                            \n                                onTouch\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                codeLength\n                            \n                            \n                                isCodeHidden\n                            \n                            \n                                onlyNumber\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.show\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        codeLength\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in src/form/pin/pin-input.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isCodeHidden\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/form/pin/pin-input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyNumber\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/form/pin/pin-input.component.ts:25\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.show\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/form/pin/pin-input.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            canInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canInputValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateValue\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateValue()\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string | number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(_: any)\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInput\n                        \n                        \n                    \n                \n            \n            \n                \nonInput(e: any, i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onKeydown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onKeydown(e: KeyboardEvent, i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTouch\n                        \n                        \n                    \n                \n            \n            \n                \nonTouch()\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in src/form/pin/pin-input.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/form/pin/pin-input.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLInputElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/form/pin/pin-input.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('input')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/form/pin/pin-input.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/form/pin/pin-input.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/form/pin/pin-input.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/form/pin/pin-input.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, forwardRef, HostBinding, Input, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { hasValue } from '../../utils/check';\n\n@Component({\n    selector: 'pin-input',\n    templateUrl: './pin-input.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => PinInputComponent),\n            multi: true\n        }\n    ]\n})\nexport class PinInputComponent implements AfterViewInit, OnInit, ControlValueAccessor {\n\n    @ViewChildren('input') inputsList: QueryList;\n    @HostBinding('class.show') show = false;\n\n    private inputs: HTMLInputElement[] = [];\n\n    @Input() codeLength = 4;\n    @Input() onlyNumber = true;\n    @Input() isCodeHidden = false;\n\n    codeInputs: any[];\n    value = [];\n    type: string;\n    isDisabled = false;\n\n    writeValue(obj: any) {\n        if (hasValue(obj)) {\n            this.value = obj.toString().split('');\n        }\n    }\n\n    ngOnInit() {\n        this.type = (this.isCodeHidden) ? 'password' : 'text';\n        this.codeInputs = Array(this.codeLength);\n    }\n\n    ngAfterViewInit() {\n        this.inputsList.forEach((item, i) => {\n\n            if (hasValue(this.value[i])) {\n                (item.nativeElement as HTMLInputElement).value = this.value[i];\n            }\n\n            this.inputs.push(item.nativeElement);\n        });\n    }\n\n    private canInputValue(value: any): boolean {\n        if (!hasValue(value)) {\n            return true;\n        }\n\n        if (this.onlyNumber) {\n            return /^[0-9]+$/.test(value.toString());\n        } else {\n            return /^[0-9a-zA-Z]+$/.test(value.toString());\n        }\n    }\n\n    generateValue(): string | number {\n        const values: string[] = [];\n\n        this.inputs.forEach((input) => {\n\n            if (hasValue(input.value)) {\n                values.push(input.value.trim());\n            }\n\n        });\n\n        if (values.length === this.codeLength) {\n            return values.join('');\n        } else {\n            return null;\n        }\n\n    }\n\n    onInput(e: any, i: number) {\n        const next = i + 1;\n        const target = e.target;\n        const value = e.data || target.value;\n\n        this.onTouch();\n\n        if (!this.canInputValue(value)) {\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n\n        if (next = 0) {\n\n                setTimeout(() => {\n                    this.inputs[prev].focus();\n                });\n            }\n\n            return;\n\n        }\n\n        if (!this.canInputValue(e.key.toLowerCase())) {\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n\n        if (hasValue(value)) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (next \n    \n\n    \n        \n\n    \n\n     -->\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         -->'\n    var COMPONENTS = [{'name': 'AddressColComponent', 'selector': 'address-col-input'},{'name': 'PinInputComponent', 'selector': 'pin-input'},{'name': 'SerFilterComponent', 'selector': 'ser-filter'},{'name': 'SerFormElementComponent', 'selector': 'ser-form-element'},{'name': 'SerSelectComponent', 'selector': 'ser-select'},{'name': 'VirtualScrollerComponent', 'selector': 'virtual-scroller,[virtualScroller]'}];\n    var DIRECTIVES = [{'name': 'BgImageDirective', 'selector': '[bgImage]'},{'name': 'CopyToClipboardDirective', 'selector': '[copyToClipboard]'},{'name': 'FinishTypingDirective', 'selector': '[finishTyping]'},{'name': 'GrowOnInputDirective', 'selector': '[growOnInput]'},{'name': 'LongPressDirective', 'selector': '[longPress]'},{'name': 'SDBadgeDirective', 'selector': '[sd-badge]'},{'name': 'SDBadgeItemDirective', 'selector': '[sd-badge-item]'},{'name': 'SDItemDirective', 'selector': '[sd-item]'},{'name': 'SerControlDirective', 'selector': '[serControl]'},{'name': 'SerErrorDirective', 'selector': '[serError]'},{'name': 'SerErrorsDirective', 'selector': '[serErrors]'},{'name': 'ToggleClassDirective', 'selector': '[toggleClass]'},{'name': 'WhenScrolledDirective', 'selector': '[whenScrolled]'}];\n    var ACTUAL_COMPONENT = {'name': 'PinInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrefersColorSchemeService.html":{"url":"injectables/PrefersColorSchemeService.html","title":"injectable - PrefersColorSchemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PrefersColorSchemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prefers-color-scheme/prefers-color-scheme.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n                        \n                            constructor(prefersColorSchemeService: PrefersColorSchemeService) { }\n\nthis.prefersColorSchemeService.init(); // Setea el esquema inicial\nthis.prefersColorSchemeService.watch(); // Observa cambio de esquema en OS\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _Scheme\n                            \n                            \n                                    Private\n                                _SchemeDarkClassName\n                            \n                            \n                                    Private\n                                _SchemeLightClassName\n                            \n                            \n                                dark\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                enableDark\n                            \n                            \n                                enableLight\n                            \n                            \n                                get\n                            \n                            \n                                init\n                            \n                            \n                                toggle\n                            \n                            \n                                watch\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Scheme\n                                \n                                \n                                    SchemeLightClassName\n                                \n                                \n                                    SchemeDarkClassName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:40\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableDark\n                        \n                        \n                    \n                \n            \n            \n                \nenableDark()\n                \n            \n\n\n            \n                \n                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableLight\n                        \n                        \n                    \n                \n            \n            \n                \nenableLight()\n                \n            \n\n\n            \n                \n                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Esquema de color\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            watch\n                        \n                        \n                    \n                \n            \n            \n                \nwatch()\n                \n            \n\n\n            \n                \n                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _Scheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MediaQueryList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _SchemeDarkClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'scheme-dark'\n                        \n                    \n                        \n                            \n                                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _SchemeLightClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'scheme-light'\n                        \n                    \n                        \n                            \n                                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dark\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Scheme\n                    \n                \n\n                \n                    \n                        getScheme()\n                    \n                \n                            \n                                \n                                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:17\n                                \n                            \n\n                \n                    \n                        setScheme(value)\n                    \n                \n                            \n                                \n                                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        SchemeLightClassName\n                    \n                \n\n                \n                    \n                        getSchemeLightClassName()\n                    \n                \n                            \n                                \n                                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:25\n                                \n                            \n\n                \n                    \n                        setSchemeLightClassName(value)\n                    \n                \n                            \n                                \n                                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        SchemeDarkClassName\n                    \n                \n\n                \n                    \n                        getSchemeDarkClassName()\n                    \n                \n                            \n                                \n                                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:33\n                                \n                            \n\n                \n                    \n                        setSchemeDarkClassName(value)\n                    \n                \n                            \n                                \n                                    Defined in src/prefers-color-scheme/prefers-color-scheme.service.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * @description\n * Clase para obtener, observar y cambiar el esquema de color claro/oscuro\n * @example\n * constructor(prefersColorSchemeService: PrefersColorSchemeService) { }\n *\n * this.prefersColorSchemeService.init(); // Setea el esquema inicial\n * this.prefersColorSchemeService.watch(); // Observa cambio de esquema en OS\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class PrefersColorSchemeService {\n    private _Scheme: MediaQueryList;\n    public get Scheme(): MediaQueryList {\n        return this._Scheme;\n    }\n    public set Scheme(value: MediaQueryList) {\n        this._Scheme = value;\n    }\n\n    private _SchemeLightClassName = 'scheme-light';\n    public get SchemeLightClassName() {\n        return this._SchemeLightClassName;\n    }\n    public set SchemeLightClassName(value) {\n        this._SchemeLightClassName = value;\n    }\n\n    private _SchemeDarkClassName = 'scheme-dark';\n    public get SchemeDarkClassName() {\n        return this._SchemeDarkClassName;\n    }\n    public set SchemeDarkClassName(value) {\n        this._SchemeDarkClassName = value;\n    }\n\n    dark = false;\n\n    constructor() {\n        this.Scheme = window.matchMedia('(prefers-color-scheme: dark)');\n    }\n\n    /**\n     * @description\n     * Inicializar el esquema de color\n     * @usageNotes\n     * Usarse unicamente si se desea aplicar el esquema de color acorde al esquema de color del sistema operativo\n     */\n    init() {\n        if (this.Scheme.matches) {\n            this.enableDark();\n        } else {\n            this.enableLight();\n        }\n    }\n\n    /**\n     * @description\n     * Obtener el esquema de color actual del SO\n     * @returns {string} Esquema de color\n     */\n    get(): string {\n        if (this.Scheme.matches) {\n            return 'dark';\n        } else {\n            return 'light';\n        }\n    }\n\n    /**\n     * @description\n     * Agrega SchemeDarkClassName y remueve SchemeLightClassName a la etiqueta body\n     */\n    enableDark() {\n        const body = document.getElementsByTagName('body')[0];\n\n        if (body.classList.contains(this.SchemeLightClassName)) {\n            body.classList.remove(this.SchemeLightClassName);\n        }\n\n        body.classList.add(this.SchemeDarkClassName);\n\n        this.dark = true;\n    }\n\n    /**\n     * @description\n     * Agrega SchemeLightClassName y remueve SchemeDarkClassName a la etiqueta body\n     */\n    enableLight() {\n        const body = document.getElementsByTagName('body')[0];\n\n        if (body.classList.contains(this.SchemeDarkClassName)) {\n            body.classList.remove(this.SchemeDarkClassName);\n        }\n\n        body.classList.add(this.SchemeLightClassName);\n\n        this.dark = false;\n    }\n\n    /**\n     * @description\n     * Alternar entre tema oscuro ó claro\n     * @usageNotes\n     * Usarse unicamente si se desea aplicar el esquema de color acorde al esquema de color del sistema operativo\n     */\n    toggle() {\n        if (this.dark) {\n            this.enableLight();\n        } else {\n            this.enableDark();\n        }\n    }\n\n    /**\n     * @description\n     * Habilita el cambio automatico de esquema de color según el cambio de esquema de color del SO\n     */\n    watch() {\n\n        const setScheme = (ev: MediaQueryListEvent) => {\n            if (ev.matches) {\n                console.log('Changed to dark mode');\n                this.enableDark();\n            } else {\n                console.log('Changed to light mode');\n                this.enableLight();\n            }\n        };\n\n        if (typeof this.Scheme.onchange === 'function') {\n\n            this.Scheme.onchange = setScheme;\n\n        } else if (typeof this.Scheme.addEventListener === 'function') {\n\n            this.Scheme.addEventListener('change', setScheme);\n\n            // tslint:disable-next-line: deprecation\n        } else if (typeof this.Scheme.addListener === 'function') {\n\n            // tslint:disable-next-line: deprecation\n            this.Scheme.addListener(setScheme);\n\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RandomPasswordOps.html":{"url":"interfaces/RandomPasswordOps.html","title":"interface - RandomPasswordOps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RandomPasswordOps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/random.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        length\n                                \n                                \n                                            Optional\n                                        lettersLowerCase\n                                \n                                \n                                            Optional\n                                        lettersUpperCase\n                                \n                                \n                                            Optional\n                                        numbers\n                                \n                                \n                                            Optional\n                                        specialChars\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tamaño de la contraseña\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lettersLowerCase\n                                    \n                                \n                                \n                                    \n                                        lettersLowerCase:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Habilita si se incluyen letras en minúsculas\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lettersUpperCase\n                                    \n                                \n                                \n                                    \n                                        lettersUpperCase:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Habilita si se incluyen letras en mayúsculas\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numbers\n                                    \n                                \n                                \n                                    \n                                        numbers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    *\nHabilita si se incluyen números\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        specialChars\n                                    \n                                \n                                \n                                    \n                                        specialChars:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Habilita si se incluyen caracteres especiales\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { mergeObjs } from './object';\n\n/**\n * @description\n * Función para generar un código GUID aleatorio\n * @returns {string}\n */\nexport function guid(): string {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\n/**\n * @description\n * Función para generar un código alfanúmerico único\n * @returns {string}\n */\nexport function uniqueId(): string {\n  const today = new Date();\n  return s4() + s4() + s4() + s4() + s4() + s4() + s4() + s4() + Math.floor((today.getTime() * Math.random()));\n}\n\nfunction s4(): string {\n  return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n}\n\n/**\n * @description\n * Función para obtener un número aleatorio\n * @param {number} min Número mínimo\n * @param {number} max Número máximo\n * @returns {number}\n */\nexport function getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\nexport interface RandomPasswordOps {\n    /**\n     * Tamaño de la contraseña\n     */\n    length?: number;\n\n    /***\n     * Habilita si se incluyen números\n     */\n    numbers?: boolean;\n\n    /**\n     * Habilita si se incluyen caracteres especiales\n     */\n    specialChars?: boolean;\n\n    /**\n     * Habilita si se incluyen letras en mayúsculas\n     */\n    lettersUpperCase?: boolean;\n\n    /**\n     * Habilita si se incluyen letras en minúsculas\n     */\n    lettersLowerCase?: boolean;\n}\n\n/**\n * Función para generar contraseñas aleatorias\n * @param options Parametros de contraseña\n */\nexport function generatePassword(options?: RandomPasswordOps) {\n\n    const defaultOptions: RandomPasswordOps = {\n        length: 8,\n        numbers: true,\n        specialChars: false,\n        lettersLowerCase: true,\n        lettersUpperCase: true\n    };\n\n    mergeObjs(defaultOptions, options);\n\n    let charset = '';\n\n    if (defaultOptions?.numbers) {\n        charset += '0123456789';\n    }\n\n    if (defaultOptions?.lettersLowerCase) {\n        charset += 'abcdefghijklmnopqrstuvwxyz';\n    }\n\n    if (defaultOptions?.lettersUpperCase) {\n        charset += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    }\n\n    if (defaultOptions?.specialChars) {\n        charset += '!#$%&\\()*+,-./:;?@^[\\\\]^_`{|}~';\n    }\n\n    let retVal = '';\n\n    for (let i = 0, n = charset.length; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/S3.html":{"url":"interfaces/S3.html","title":"interface - S3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  S3\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/aws/Iaws.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucket\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AwsData {\n  s3: S3;\n}\n\nexport interface S3 {\n  bucket: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SDBadgeDirective.html":{"url":"directives/SDBadgeDirective.html","title":"directive - SDBadgeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SDBadgeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/select/ser-select-menu-item.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [sd-badge]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/form/select/ser-select-menu-item.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/form/select/ser-select-menu-item.directive.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { TemplateRef, Directive } from '@angular/core';\n\n@Directive({\n  selector: '[sd-item]'\n})\nexport class SDItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge]'\n})\nexport class SDBadgeDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge-item]'\n})\nexport class SDBadgeItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SDBadgeItemDirective.html":{"url":"directives/SDBadgeItemDirective.html","title":"directive - SDBadgeItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SDBadgeItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/select/ser-select-menu-item.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [sd-badge-item]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/form/select/ser-select-menu-item.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/form/select/ser-select-menu-item.directive.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { TemplateRef, Directive } from '@angular/core';\n\n@Directive({\n  selector: '[sd-item]'\n})\nexport class SDItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge]'\n})\nexport class SDBadgeDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge-item]'\n})\nexport class SDBadgeItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SDItemDirective.html":{"url":"directives/SDItemDirective.html","title":"directive - SDItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SDItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/select/ser-select-menu-item.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [sd-item]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/form/select/ser-select-menu-item.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/form/select/ser-select-menu-item.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { TemplateRef, Directive } from '@angular/core';\n\n@Directive({\n  selector: '[sd-item]'\n})\nexport class SDItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge]'\n})\nexport class SDBadgeDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge-item]'\n})\nexport class SDBadgeItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SerControlDirective.html":{"url":"directives/SerControlDirective.html","title":"directive - SerControlDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SerControlDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/ser-form-element/ser-control.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [serControl]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dirty\n                            \n                            \n                                disabled\n                            \n                            \n                                focus\n                            \n                            \n                                hasValue\n                            \n                            \n                                invalid\n                            \n                            \n                                observer\n                            \n                            \n                                pending\n                            \n                            \n                                valid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/form/ser-form-element/ser-control.directive.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            blur\n                        \n                        \n                    \n                \n            \n            \n                \nblur()\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-form-element/ser-control.directive.ts:28\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-form-element/ser-control.directive.ts:23\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-form-element/ser-control.directive.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-form-element/ser-control.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeValue\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-form-element/ser-control.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dirty\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-control.directive.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-control.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-control.directive.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-control.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalid\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-control.directive.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-control.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-control.directive.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valid\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-control.directive.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, OnInit, OnDestroy } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { hasValue } from '../../utils/check';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[serControl]'\n})\nexport class SerControlDirective implements OnInit, OnDestroy {\n    disabled = false;\n    focus = false;\n    dirty = false;\n    valid = false;\n    invalid = false;\n    pending = false;\n    hasValue = false;\n    observer: Subscription;\n\n    constructor(private _ngControl: NgControl) { }\n\n    @HostListener('focus')\n    onFocus() {\n        this.focus = true;\n    }\n\n    @HostListener('blur')\n    onBlur() {\n        this.focus = false;\n    }\n\n    onChangeValue(value: any) {\n        this.hasValue = hasValue(value);\n        this.valid = this._ngControl?.control?.valid;\n        this.invalid = this._ngControl?.control?.invalid;\n        this.dirty = this._ngControl?.control?.dirty;\n        this.disabled = this._ngControl?.control?.disabled;\n        this.pending = this._ngControl?.control?.pending;\n    }\n\n    ngOnInit() {\n        this.onChangeValue(this._ngControl?.control?.value);\n\n        this.observer = this._ngControl?.control?.valueChanges.subscribe((value: any) => {\n            this.onChangeValue(value);\n        });\n    }\n\n    ngOnDestroy() {\n        this.observer?.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SerErrorDirective.html":{"url":"directives/SerErrorDirective.html","title":"directive - SerErrorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SerErrorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/ser-errors/ser-error.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            DoCheck\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [serError]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _states\n                            \n                            \n                                errorNames\n                            \n                            \n                                rules\n                            \n                            \n                                states\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                serError\n                            \n                            \n                                when\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                hidden\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    serError\n                                \n                                \n                                    when\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_serErrors: SerErrorsDirective)\n                    \n                \n                        \n                            \n                                Defined in src/form/ser-errors/ser-error.directive.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _serErrors\n                                                  \n                                                        \n                                                                    SerErrorsDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        serError\n                    \n                \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-error.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        when\n                    \n                \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-error.directive.ts:24\n                            \n                        \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-error.directive.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngDoCheck\n                        \n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-errors/ser-error.directive.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-errors/ser-error.directive.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-errors/ser-error.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-error.directive.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-error.directive.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-error.directive.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-error.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-error.directive.ts:33\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        serError\n                    \n                \n\n\n                \n                    \n                        setserError(value)\n                    \n                \n                            \n                                \n                                    Defined in src/form/ser-errors/ser-error.directive.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        when\n                    \n                \n\n\n                \n                    \n                        setwhen(value)\n                    \n                \n                            \n                                \n                                    Defined in src/form/ser-errors/ser-error.directive.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, OnInit, OnDestroy, DoCheck, Inject, HostBinding, forwardRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/observable/combineLatest';\nimport { ErrorOptions } from './ser-errors';\nimport { SerErrorsDirective } from './ser-errors.directive';\nimport { toArray } from '../../utils/array';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[serError]'\n})\nexport class SerErrorDirective implements OnInit, OnDestroy, DoCheck {\n\n    @Input() set serError(value: ErrorOptions) {\n        this.errorNames = toArray(value);\n    }\n\n    @Input() set when(value: ErrorOptions) {\n        this.rules = toArray(value);\n    }\n\n    @HostBinding('hidden')\n    hidden = true;\n\n    rules: string[] = [];\n    errorNames: string[] = [];\n    subscription: Subscription;\n    _states: Subject;\n    states: Observable;\n\n    constructor(@Inject(forwardRef(() => SerErrorsDirective)) private _serErrors: SerErrorsDirective) { }\n\n    ngOnInit() {\n\n        this._states = new Subject();\n        this.states = this._states.asObservable().distinctUntilChanged();\n\n        const errors = this._serErrors.subject\n            .filter(Boolean)\n            .filter((obj: any) => !!~this.errorNames.indexOf(obj.errorName));\n\n        const states = this.states\n            .map(states => this.rules.every(rule => !!~states.indexOf(rule)));\n\n        this.subscription = Observable.combineLatest([states, errors])\n            .subscribe(([states, errors]) => {\n                this.hidden = !(states && errors.control.hasError(errors.errorName));\n            });\n\n    }\n\n    ngDoCheck() {\n        this._states.next(\n            this.rules.filter((rule) => (this._serErrors.control as any)[rule])\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SerErrorsDirective.html":{"url":"directives/SerErrorsDirective.html","title":"directive - SerErrorsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SerErrorsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/ser-errors/ser-errors.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnDestroy\n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [serErrors]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                ready\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkPropState\n                            \n                            \n                                    Private\n                                checkStatus\n                            \n                            \n                                getError\n                            \n                            \n                                hasError\n                            \n                            \n                                isValid\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                serErrors\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                                \n                                    hasErrors\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_form: FormGroupDirective)\n                    \n                \n                        \n                            \n                                Defined in src/form/ser-errors/ser-errors.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _form\n                                                  \n                                                        \n                                                                        FormGroupDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        serErrors\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-errors.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkPropState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPropState(prop: string, name: string, conditions: ErrorOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-errors/ser-errors.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prop\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                ErrorOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-errors/ser-errors.directive.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-errors/ser-errors.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasError\n                        \n                        \n                    \n                \n            \n            \n                \nhasError(name: string, conditions: ErrorOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-errors/ser-errors.directive.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                ErrorOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValid\n                        \n                        \n                    \n                \n            \n            \n                \nisValid(name: string, conditions: ErrorOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-errors/ser-errors.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                ErrorOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-errors/ser-errors.directive.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-errors/ser-errors.directive.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/form/ser-errors/ser-errors.directive.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-errors.directive.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-errors.directive.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-errors/ser-errors.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/form/ser-errors/ser-errors.directive.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasErrors\n                    \n                \n\n                \n                    \n                        gethasErrors()\n                    \n                \n                            \n                                \n                                    Defined in src/form/ser-errors/ser-errors.directive.ts:29\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, OnChanges, OnDestroy, AfterViewInit, HostBinding } from '@angular/core';\nimport { FormGroupDirective, AbstractControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ErrorDetails, ErrorOptions } from './ser-errors';\nimport { toArray } from '../../utils/array';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[serErrors]',\n    exportAs: 'serErrors'\n})\nexport class SerErrorsDirective implements OnChanges, OnDestroy, AfterViewInit {\n\n    // tslint:disable-next-line: no-input-rename\n    @Input('serErrors')\n    controlName: string;\n\n    subject = new BehaviorSubject(null);\n    control: AbstractControl;\n    ready = false;\n\n    constructor(private _form: FormGroupDirective) { }\n\n    get errors() {\n        if (!this.ready) { return; }\n        return this.control.errors;\n    }\n\n    get hasErrors() {\n        return !!this.errors;\n    }\n\n    hasError(name: string, conditions: ErrorOptions): boolean {\n        return this.checkPropState('invalid', name, conditions);\n    }\n\n    isValid(name: string, conditions: ErrorOptions): boolean {\n        return this.checkPropState('valid', name, conditions);\n    }\n\n    getError(name: string) {\n        if (!this.ready) { return; }\n        return this.control.getError(name);\n    }\n\n    private checkPropState(prop: string, name: string, conditions: ErrorOptions): boolean {\n\n        if (!this.ready) { return; }\n        const controlPropsState = (\n            !conditions || toArray(conditions).every((condition: string) => this.control[condition])\n        );\n\n        if (name.charAt(0) === '*') {\n            return this.control[prop] && controlPropsState;\n        }\n\n        return (\n            prop === 'valid' ? !this.control.hasError(name) : this.control.hasError(name) && controlPropsState\n        );\n    }\n\n    private checkStatus() {\n        const control = this.control;\n        const errors = control.errors;\n        this.ready = true;\n\n        if (!errors) {\n            return;\n        }\n\n        for (const errorName in errors) {\n            if (this.errors.hasOwnProperty(errorName)) {\n                this.subject.next({ control, errorName });\n            }\n        }\n    }\n\n    ngOnChanges() {\n        this.control = this._form.control.get(this.controlName);\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.checkStatus();\n            this.control.statusChanges.subscribe(this.checkStatus.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.subject.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SerFilterModule.html":{"url":"modules/SerFilterModule.html","title":"module - SerFilterModule","body":"\n                   \n\n\n\n\n    Modules\n    SerFilterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SerFilterModule\n\n\n\ncluster_SerFilterModule_exports\n\n\n\ncluster_SerFilterModule_declarations\n\n\n\n\nAddressColComponent\n\nAddressColComponent\n\n\n\nSerFilterModule\n\nSerFilterModule\n\nSerFilterModule -->\n\nAddressColComponent->SerFilterModule\n\n\n\n\n\nGrowOnInputDirective\n\nGrowOnInputDirective\n\nSerFilterModule -->\n\nGrowOnInputDirective->SerFilterModule\n\n\n\n\n\nPinInputComponent\n\nPinInputComponent\n\nSerFilterModule -->\n\nPinInputComponent->SerFilterModule\n\n\n\n\n\nSerControlDirective\n\nSerControlDirective\n\nSerFilterModule -->\n\nSerControlDirective->SerFilterModule\n\n\n\n\n\nSerErrorDirective\n\nSerErrorDirective\n\nSerFilterModule -->\n\nSerErrorDirective->SerFilterModule\n\n\n\n\n\nSerErrorsDirective\n\nSerErrorsDirective\n\nSerFilterModule -->\n\nSerErrorsDirective->SerFilterModule\n\n\n\n\n\nSerFormElementComponent\n\nSerFormElementComponent\n\nSerFilterModule -->\n\nSerFormElementComponent->SerFilterModule\n\n\n\n\n\nAddressColComponent \n\nAddressColComponent \n\nAddressColComponent  -->\n\nSerFilterModule->AddressColComponent \n\n\n\n\n\nGrowOnInputDirective \n\nGrowOnInputDirective \n\nGrowOnInputDirective  -->\n\nSerFilterModule->GrowOnInputDirective \n\n\n\n\n\nPinInputComponent \n\nPinInputComponent \n\nPinInputComponent  -->\n\nSerFilterModule->PinInputComponent \n\n\n\n\n\nSerControlDirective \n\nSerControlDirective \n\nSerControlDirective  -->\n\nSerFilterModule->SerControlDirective \n\n\n\n\n\nSerErrorDirective \n\nSerErrorDirective \n\nSerErrorDirective  -->\n\nSerFilterModule->SerErrorDirective \n\n\n\n\n\nSerErrorsDirective \n\nSerErrorsDirective \n\nSerErrorsDirective  -->\n\nSerFilterModule->SerErrorsDirective \n\n\n\n\n\nSerFormElementComponent \n\nSerFormElementComponent \n\nSerFormElementComponent  -->\n\nSerFilterModule->SerFormElementComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/form/filter/ser-filter.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ReactiveFormsModule } from '@angular/forms';\n// tslint:disable: max-line-length\n\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SerFilterComponent } from './ser-filter.component';\n\nconst dependencies = [\n    SerFilterComponent\n];\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule],\n    declarations: [...dependencies],\n    exports: [...dependencies],\n    providers: []\n})\nexport class SerFilterModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SerFormElementComponent.html":{"url":"components/SerFormElementComponent.html","title":"component - SerFormElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SerFormElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/form/ser-form-element/ser-form-element.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ser-form-element\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formElement\n                            \n                            \n                                observer\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.active\n                            \n                            \n                                class.dirty\n                            \n                            \n                                class.disabled\n                            \n                            \n                                class.focus\n                            \n                            \n                                class.invalid\n                            \n                            \n                                class.pending\n                            \n                            \n                                class.valid\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.active\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-form-element.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.dirty\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-form-element.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.disabled\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-form-element.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.focus\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-form-element.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.invalid\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-form-element.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.pending\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-form-element.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.valid\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-form-element.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SerControlDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(SerControlDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-form-element.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/form/ser-form-element/ser-form-element.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Subscription } from 'rxjs';\nimport { Component, ContentChild, ViewEncapsulation, HostBinding } from '@angular/core';\nimport { SerControlDirective } from './ser-control.directive';\n\n@Component({\n    selector: 'ser-form-element',\n    template: '',\n    encapsulation: ViewEncapsulation.None\n})\nexport class SerFormElementComponent {\n\n    @ContentChild(SerControlDirective) formElement: SerControlDirective;\n    observer: Subscription;\n\n    @HostBinding('class.disabled')\n    get disabled() {\n        return this.formElement?.disabled;\n    }\n\n    @HostBinding('class.focus')\n    get focus() {\n        return this.formElement?.focus;\n    }\n\n    @HostBinding('class.active')\n    get active() {\n        return this.formElement?.hasValue;\n    }\n\n    @HostBinding('class.dirty')\n    get dirty() {\n        return this.formElement?.dirty;\n    }\n\n    @HostBinding('class.valid')\n    get valid() {\n        return this.formElement?.valid;\n    }\n\n    @HostBinding('class.invalid')\n    get invalid() {\n        return this.formElement?.invalid;\n    }\n\n    @HostBinding('class.pending')\n    get pending() {\n        return this.formElement?.pending;\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddressColComponent', 'selector': 'address-col-input'},{'name': 'PinInputComponent', 'selector': 'pin-input'},{'name': 'SerFilterComponent', 'selector': 'ser-filter'},{'name': 'SerFormElementComponent', 'selector': 'ser-form-element'},{'name': 'SerSelectComponent', 'selector': 'ser-select'},{'name': 'VirtualScrollerComponent', 'selector': 'virtual-scroller,[virtualScroller]'}];\n    var DIRECTIVES = [{'name': 'BgImageDirective', 'selector': '[bgImage]'},{'name': 'CopyToClipboardDirective', 'selector': '[copyToClipboard]'},{'name': 'FinishTypingDirective', 'selector': '[finishTyping]'},{'name': 'GrowOnInputDirective', 'selector': '[growOnInput]'},{'name': 'LongPressDirective', 'selector': '[longPress]'},{'name': 'SDBadgeDirective', 'selector': '[sd-badge]'},{'name': 'SDBadgeItemDirective', 'selector': '[sd-badge-item]'},{'name': 'SDItemDirective', 'selector': '[sd-item]'},{'name': 'SerControlDirective', 'selector': '[serControl]'},{'name': 'SerErrorDirective', 'selector': '[serError]'},{'name': 'SerErrorsDirective', 'selector': '[serErrors]'},{'name': 'ToggleClassDirective', 'selector': '[toggleClass]'},{'name': 'WhenScrolledDirective', 'selector': '[whenScrolled]'}];\n    var ACTUAL_COMPONENT = {'name': 'SerFormElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SerFormModule.html":{"url":"modules/SerFormModule.html","title":"module - SerFormModule","body":"\n                   \n\n\n\n\n    Modules\n    SerFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SerFormModule\n\n\n\ncluster_SerFormModule_exports\n\n\n\ncluster_SerFormModule_declarations\n\n\n\n\nAddressColComponent\n\nAddressColComponent\n\n\n\nSerFormModule\n\nSerFormModule\n\nSerFormModule -->\n\nAddressColComponent->SerFormModule\n\n\n\n\n\nGrowOnInputDirective\n\nGrowOnInputDirective\n\nSerFormModule -->\n\nGrowOnInputDirective->SerFormModule\n\n\n\n\n\nPinInputComponent\n\nPinInputComponent\n\nSerFormModule -->\n\nPinInputComponent->SerFormModule\n\n\n\n\n\nSerControlDirective\n\nSerControlDirective\n\nSerFormModule -->\n\nSerControlDirective->SerFormModule\n\n\n\n\n\nSerErrorDirective\n\nSerErrorDirective\n\nSerFormModule -->\n\nSerErrorDirective->SerFormModule\n\n\n\n\n\nSerErrorsDirective\n\nSerErrorsDirective\n\nSerFormModule -->\n\nSerErrorsDirective->SerFormModule\n\n\n\n\n\nSerFormElementComponent\n\nSerFormElementComponent\n\nSerFormModule -->\n\nSerFormElementComponent->SerFormModule\n\n\n\n\n\nAddressColComponent \n\nAddressColComponent \n\nAddressColComponent  -->\n\nSerFormModule->AddressColComponent \n\n\n\n\n\nGrowOnInputDirective \n\nGrowOnInputDirective \n\nGrowOnInputDirective  -->\n\nSerFormModule->GrowOnInputDirective \n\n\n\n\n\nPinInputComponent \n\nPinInputComponent \n\nPinInputComponent  -->\n\nSerFormModule->PinInputComponent \n\n\n\n\n\nSerControlDirective \n\nSerControlDirective \n\nSerControlDirective  -->\n\nSerFormModule->SerControlDirective \n\n\n\n\n\nSerErrorDirective \n\nSerErrorDirective \n\nSerErrorDirective  -->\n\nSerFormModule->SerErrorDirective \n\n\n\n\n\nSerErrorsDirective \n\nSerErrorsDirective \n\nSerErrorsDirective  -->\n\nSerFormModule->SerErrorsDirective \n\n\n\n\n\nSerFilterModule \n\nSerFilterModule \n\nSerFilterModule  -->\n\nSerFormModule->SerFilterModule \n\n\n\n\n\nSerFormElementComponent \n\nSerFormElementComponent \n\nSerFormElementComponent  -->\n\nSerFormModule->SerFormElementComponent \n\n\n\n\n\nSerSelectModule \n\nSerSelectModule \n\nSerSelectModule  -->\n\nSerFormModule->SerSelectModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/form/ser-form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFilterModule\n                        \n                        \n                            SerFormElementComponent\n                        \n                        \n                            SerSelectModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SerFormElementComponent } from './ser-form-element/ser-form-element.component';\nimport { SerControlDirective } from './ser-form-element/ser-control.directive';\nimport { SerErrorDirective } from './ser-errors/ser-error.directive';\nimport { SerErrorsDirective } from './ser-errors/ser-errors.directive';\nimport { PinInputComponent } from './pin/pin-input.component';\nimport { SerSelectModule } from './select/ser-select.module';\nimport { AddressColComponent } from './address/address-col/address-col.component';\nimport { SerFilterModule } from './filter/ser-filter.module';\nimport { GrowOnInputDirective } from './grow-on-input.directive';\n\nconst dependencies = [\n    SerFormElementComponent,\n    SerControlDirective,\n    SerErrorsDirective,\n    SerErrorDirective,\n    PinInputComponent,\n    AddressColComponent,\n    GrowOnInputDirective\n];\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule],\n    declarations: [...dependencies],\n    exports: [...dependencies, SerSelectModule, SerFilterModule]\n})\nexport class SerFormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SerSelectModule.html":{"url":"modules/SerSelectModule.html","title":"module - SerSelectModule","body":"\n                   \n\n\n\n\n    Modules\n    SerSelectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SerSelectModule\n\n\n\ncluster_SerSelectModule_providers\n\n\n\ncluster_SerSelectModule_declarations\n\n\n\ncluster_SerSelectModule_imports\n\n\n\ncluster_SerSelectModule_exports\n\n\n\n\nAddressColComponent\n\nAddressColComponent\n\n\n\nSerSelectModule\n\nSerSelectModule\n\nSerSelectModule -->\n\nAddressColComponent->SerSelectModule\n\n\n\n\n\nGrowOnInputDirective\n\nGrowOnInputDirective\n\nSerSelectModule -->\n\nGrowOnInputDirective->SerSelectModule\n\n\n\n\n\nPinInputComponent\n\nPinInputComponent\n\nSerSelectModule -->\n\nPinInputComponent->SerSelectModule\n\n\n\n\n\nSerControlDirective\n\nSerControlDirective\n\nSerSelectModule -->\n\nSerControlDirective->SerSelectModule\n\n\n\n\n\nSerErrorDirective\n\nSerErrorDirective\n\nSerSelectModule -->\n\nSerErrorDirective->SerSelectModule\n\n\n\n\n\nSerErrorsDirective\n\nSerErrorsDirective\n\nSerSelectModule -->\n\nSerErrorsDirective->SerSelectModule\n\n\n\n\n\nSerFormElementComponent\n\nSerFormElementComponent\n\nSerSelectModule -->\n\nSerFormElementComponent->SerSelectModule\n\n\n\n\n\nAddressColComponent \n\nAddressColComponent \n\nAddressColComponent  -->\n\nSerSelectModule->AddressColComponent \n\n\n\n\n\nGrowOnInputDirective \n\nGrowOnInputDirective \n\nGrowOnInputDirective  -->\n\nSerSelectModule->GrowOnInputDirective \n\n\n\n\n\nPinInputComponent \n\nPinInputComponent \n\nPinInputComponent  -->\n\nSerSelectModule->PinInputComponent \n\n\n\n\n\nSerControlDirective \n\nSerControlDirective \n\nSerControlDirective  -->\n\nSerSelectModule->SerControlDirective \n\n\n\n\n\nSerErrorDirective \n\nSerErrorDirective \n\nSerErrorDirective  -->\n\nSerSelectModule->SerErrorDirective \n\n\n\n\n\nSerErrorsDirective \n\nSerErrorsDirective \n\nSerErrorsDirective  -->\n\nSerSelectModule->SerErrorsDirective \n\n\n\n\n\nSerFormElementComponent \n\nSerFormElementComponent \n\nSerFormElementComponent  -->\n\nSerSelectModule->SerFormElementComponent \n\n\n\n\n\nVirtualScrollerModule\n\nVirtualScrollerModule\n\nSerSelectModule -->\n\nVirtualScrollerModule->SerSelectModule\n\n\n\n\n\nDataService\n\nDataService\n\nSerSelectModule -->\n\nDataService->SerSelectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/form/select/ser-select.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DataService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            VirtualScrollerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ReactiveFormsModule } from '@angular/forms';\n// tslint:disable: max-line-length\n\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SDBadgeDirective, SDBadgeItemDirective, SDItemDirective } from './ser-select-menu-item.directive';\nimport { SerSelectComponent } from './ser-select.component';\nimport { DataService } from './ser-select.service';\nimport { VirtualScrollerModule } from './virtual-scroll/virtual-scroll';\n\nconst dependencies = [\n    SerSelectComponent,\n    SDItemDirective,\n    SDBadgeDirective,\n    SDBadgeItemDirective\n];\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, VirtualScrollerModule],\n    declarations: [...dependencies],\n    exports: [...dependencies],\n    providers: [DataService]\n})\nexport class SerSelectModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SerUiModule.html":{"url":"modules/SerUiModule.html","title":"module - SerUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SerUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SerUiModule\n\n\n\ncluster_SerUiModule_declarations\n\n\n\ncluster_SerUiModule_exports\n\n\n\n\nAddressColComponent\n\nAddressColComponent\n\n\n\nSerUiModule\n\nSerUiModule\n\nSerUiModule -->\n\nAddressColComponent->SerUiModule\n\n\n\n\n\nGrowOnInputDirective\n\nGrowOnInputDirective\n\nSerUiModule -->\n\nGrowOnInputDirective->SerUiModule\n\n\n\n\n\nPinInputComponent\n\nPinInputComponent\n\nSerUiModule -->\n\nPinInputComponent->SerUiModule\n\n\n\n\n\nSerControlDirective\n\nSerControlDirective\n\nSerUiModule -->\n\nSerControlDirective->SerUiModule\n\n\n\n\n\nSerErrorDirective\n\nSerErrorDirective\n\nSerUiModule -->\n\nSerErrorDirective->SerUiModule\n\n\n\n\n\nSerErrorsDirective\n\nSerErrorsDirective\n\nSerUiModule -->\n\nSerErrorsDirective->SerUiModule\n\n\n\n\n\nSerFormElementComponent\n\nSerFormElementComponent\n\nSerUiModule -->\n\nSerFormElementComponent->SerUiModule\n\n\n\n\n\nAddressColComponent \n\nAddressColComponent \n\nAddressColComponent  -->\n\nSerUiModule->AddressColComponent \n\n\n\n\n\nGrowOnInputDirective \n\nGrowOnInputDirective \n\nGrowOnInputDirective  -->\n\nSerUiModule->GrowOnInputDirective \n\n\n\n\n\nPinInputComponent \n\nPinInputComponent \n\nPinInputComponent  -->\n\nSerUiModule->PinInputComponent \n\n\n\n\n\nSerControlDirective \n\nSerControlDirective \n\nSerControlDirective  -->\n\nSerUiModule->SerControlDirective \n\n\n\n\n\nSerErrorDirective \n\nSerErrorDirective \n\nSerErrorDirective  -->\n\nSerUiModule->SerErrorDirective \n\n\n\n\n\nSerErrorsDirective \n\nSerErrorsDirective \n\nSerErrorsDirective  -->\n\nSerUiModule->SerErrorsDirective \n\n\n\n\n\nSerFormElementComponent \n\nSerFormElementComponent \n\nSerFormElementComponent  -->\n\nSerUiModule->SerFormElementComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ui/ser-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { WhenScrolledDirective } from './when-scrolled.directive';\nimport { FinishTypingDirective } from './finish-typing.directive';\nimport { BgImageDirective } from './bg-image.directive';\nimport { CopyToClipboardDirective } from './copy-to-clipboard.directive';\nimport { ToggleClassDirective } from './toggle-class.directive';\nimport { LongPressDirective } from './long-press.directive';\n\nconst dependencies = [\n  WhenScrolledDirective,\n  FinishTypingDirective,\n  BgImageDirective,\n  CopyToClipboardDirective,\n  ToggleClassDirective,\n  LongPressDirective\n];\n\n@NgModule({\n  declarations: [...dependencies],\n  exports: [...dependencies]\n})\nexport class SerUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnackbarOpts.html":{"url":"interfaces/SnackbarOpts.html","title":"interface - SnackbarOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SnackbarOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ui/snackbar.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        duration\n                                \n                                \n                                            Optional\n                                        iconClass\n                                \n                                \n                                            Optional\n                                        iconName\n                                \n                                \n                                        msj\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconClass\n                                    \n                                \n                                \n                                    \n                                        iconClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconName\n                                    \n                                \n                                \n                                    \n                                        iconName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msj\n                                    \n                                \n                                \n                                    \n                                        msj:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { mergeObjs } from '../utils/object';\nimport { timer } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nexport interface SnackbarOpts {\n    msj: string;\n    iconClass?: string;\n    iconName?: string;\n    duration?: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SnackbarService {\n\n    open(opts: SnackbarOpts) {\n\n        let _html = document.createElement('div');\n        _html.className = 'snackbar';\n\n        const defaultOpts: SnackbarOpts = mergeObjs({\n            iconClass: 'green',\n            iconName: 'done',\n            duration: 4000\n        }, opts);\n\n        _html.innerHTML = `\n        \n            ${defaultOpts.iconName}\n        \n        ${opts.msj}`;\n\n        document.body.append(_html);\n\n        timer(1000)\n        .pipe(take(1)).subscribe(() => {\n            _html.className = 'snackbar show-text';\n\n            setTimeout(() => {\n                setTimeout(() => {\n                    _html.className = 'snackbar hide';\n\n                    setTimeout(() => {\n                        document.body.removeChild(_html);\n                        _html = null;\n                    }, 1000);\n                }, 1500);\n            }, defaultOpts.duration);\n        });\n\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ui/snackbar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(opts: SnackbarOpts)\n                \n            \n\n\n            \n                \n                    Defined in src/ui/snackbar.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                SnackbarOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { mergeObjs } from '../utils/object';\nimport { timer } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nexport interface SnackbarOpts {\n    msj: string;\n    iconClass?: string;\n    iconName?: string;\n    duration?: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SnackbarService {\n\n    open(opts: SnackbarOpts) {\n\n        let _html = document.createElement('div');\n        _html.className = 'snackbar';\n\n        const defaultOpts: SnackbarOpts = mergeObjs({\n            iconClass: 'green',\n            iconName: 'done',\n            duration: 4000\n        }, opts);\n\n        _html.innerHTML = `\n        \n            ${defaultOpts.iconName}\n        \n        ${opts.msj}`;\n\n        document.body.append(_html);\n\n        timer(1000)\n        .pipe(take(1)).subscribe(() => {\n            _html.className = 'snackbar show-text';\n\n            setTimeout(() => {\n                setTimeout(() => {\n                    _html.className = 'snackbar hide';\n\n                    setTimeout(() => {\n                        document.body.removeChild(_html);\n                        _html = null;\n                    }, 1000);\n                }, 1500);\n            }, defaultOpts.duration);\n        });\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/String.html":{"url":"interfaces/String.html","title":"interface - String","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  String\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/string.extensions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    toCapitalize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toCapitalize\n                        \n                        \n                    \n                \n            \n            \n                \ntoCapitalize(...args: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces/string.extensions.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export declare module String {\n    interface String {\n        toCapitalize(...args: string[]): string;\n    }\n}\n\n/**\n * Función para convertir un string en letra capital\n * @param value String a convertir\n */\n/* String.prototype.toCapitalize = function (...args: string[]) {\n\n    const value = this;\n    const values = value.split(' ').map(val => val.charAt(0).toUpperCase() + val.slice(1));\n\n    return values.join(' ');\n\n}; */\n\n\n/* declare module '@angular/forms/src/model' {\n    interface FormGroup {\n        setValueAndErrors(this: FormGroup, state: any, memberErrors: any): void;\n    }\n}\n\nFormGroup.prototype.setValueAndErrors = function (this: FormGroup, state: any, memberErrors: any): void {\n    this.setValue(state);\n} */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ToggleClassDirective.html":{"url":"directives/ToggleClassDirective.html","title":"directive - ToggleClassDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ToggleClassDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ui/toggle-class.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [toggleClass]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleClass\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/ui/toggle-class.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        toggleClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/ui/toggle-class.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in src/ui/toggle-class.directive.ts:10\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Renderer2, ElementRef, Input } from '@angular/core';\n\n@Directive({\n    selector: '[toggleClass]'\n})\nexport class ToggleClassDirective {\n\n    @Input() toggleClass: string;\n\n    @HostListener('click') onClick() {\n        (this.el.nativeElement as HTMLElement).classList.toggle(this.toggleClass);\n    }\n\n    constructor(private el: ElementRef, private renderer: Renderer2) {\n\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VirtualScrollerDefaultOptions.html":{"url":"interfaces/VirtualScrollerDefaultOptions.html","title":"interface - VirtualScrollerDefaultOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VirtualScrollerDefaultOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/select/virtual-scroll/defaultoptions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        checkResizeInterval\n                                \n                                \n                                        modifyOverflowStyleOfParentScroll\n                                \n                                \n                                        resizeBypassRefreshThreshold\n                                \n                                \n                                        scrollAnimationTime\n                                \n                                \n                                            Optional\n                                        scrollbarHeight\n                                \n                                \n                                            Optional\n                                        scrollbarWidth\n                                \n                                \n                                        scrollDebounceTime\n                                \n                                \n                                        scrollThrottlingTime\n                                \n                                \n                                        stripedTable\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checkResizeInterval\n                                    \n                                \n                                \n                                    \n                                        checkResizeInterval:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modifyOverflowStyleOfParentScroll\n                                    \n                                \n                                \n                                    \n                                        modifyOverflowStyleOfParentScroll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeBypassRefreshThreshold\n                                    \n                                \n                                \n                                    \n                                        resizeBypassRefreshThreshold:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollAnimationTime\n                                    \n                                \n                                \n                                    \n                                        scrollAnimationTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollbarHeight\n                                    \n                                \n                                \n                                    \n                                        scrollbarHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollbarWidth\n                                    \n                                \n                                \n                                    \n                                        scrollbarWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollDebounceTime\n                                    \n                                \n                                \n                                    \n                                        scrollDebounceTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollThrottlingTime\n                                    \n                                \n                                \n                                    \n                                        scrollThrottlingTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stripedTable\n                                    \n                                \n                                \n                                    \n                                        stripedTable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface VirtualScrollerDefaultOptions {\n\tscrollThrottlingTime: number;\n\tscrollDebounceTime: number;\n\tscrollAnimationTime: number;\n\tscrollbarWidth?: number;\n\tscrollbarHeight?: number;\n\tcheckResizeInterval: number\n\tresizeBypassRefreshThreshold: number,\n\tmodifyOverflowStyleOfParentScroll: boolean,\n\tstripedTable: boolean\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VirtualScrollerModule.html":{"url":"modules/VirtualScrollerModule.html","title":"module - VirtualScrollerModule","body":"\n                   \n\n\n\n\n    Modules\n    VirtualScrollerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VirtualScrollerModule\n\n\n\ncluster_VirtualScrollerModule_exports\n\n\n\ncluster_VirtualScrollerModule_declarations\n\n\n\n\nVirtualScrollerComponent\n\nVirtualScrollerComponent\n\n\n\nVirtualScrollerModule\n\nVirtualScrollerModule\n\nVirtualScrollerModule -->\n\nVirtualScrollerComponent->VirtualScrollerModule\n\n\n\n\n\nVirtualScrollerComponent \n\nVirtualScrollerComponent \n\nVirtualScrollerComponent  -->\n\nVirtualScrollerModule->VirtualScrollerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/form/select/virtual-scroll/virtual-scroll.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VirtualScrollerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VirtualScrollerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // tslint:disable: member-ordering\nimport {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Optional,\n    Input,\n    NgModule,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewChild,\n    ChangeDetectorRef,\n    InjectionToken\n} from '@angular/core';\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { CommonModule } from '@angular/common';\n\nimport * as tween from '@tweenjs/tween.js';\nimport { VirtualScrollerDefaultOptions } from './defaultoptions';\nimport { IPageInfo } from './ipageinfo';\nimport { IViewport } from './iviewport';\n\nimport { WrapGroupDimensions } from './wrapgroupdimensions';\nimport { WrapGroupDimension } from './wrapgroupdimension';\n\nimport { IDimensions } from './idimension';\n\n\n\n\n\nexport function VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY(): VirtualScrollerDefaultOptions {\n    return {\n        scrollThrottlingTime: 0,\n        scrollDebounceTime: 0,\n        scrollAnimationTime: 750,\n        checkResizeInterval: 1000,\n        resizeBypassRefreshThreshold: 5,\n        modifyOverflowStyleOfParentScroll: true,\n        stripedTable: false\n    };\n}\n\n@Component({\n    selector: 'virtual-scroller,[virtualScroller]',\n    exportAs: 'virtualScroller',\n    template: `\n    \n    \n      \n    \n  `,\n    // tslint:disable-next-line: no-host-metadata-property\n    host: {\n        '[class.horizontal]': 'horizontal',\n        '[class.vertical]': '!horizontal',\n        '[class.selfScroll]': '!parentScroll'\n    },\n    styles: [`\n    :host {\n      position: relative;\n\t  display: block;\n      -webkit-overflow-scrolling: touch;\n    }\n\n\t:host.horizontal.selfScroll {\n      overflow-y: visible;\n      overflow-x: auto;\n\t}\n\t:host.vertical.selfScroll {\n      overflow-y: auto;\n      overflow-x: visible;\n\t}\n\n    .scrollable-content {\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      max-width: 100vw;\n      max-height: 100vh;\n      position: absolute;\n    }\n\n\t.scrollable-content ::ng-deep > * {\n\t\tbox-sizing: border-box;\n\t}\n\n\t:host.horizontal {\n\t\twhite-space: nowrap;\n\t}\n\n\t:host.horizontal .scrollable-content {\n\t\tdisplay: flex;\n\t}\n\n\t:host.horizontal .scrollable-content ::ng-deep > * {\n\t\tflex-shrink: 0;\n\t\tflex-grow: 0;\n\t\twhite-space: initial;\n\t}\n\n    .total-padding {\n      width: 1px;\n      opacity: 0;\n    }\n\n    :host.horizontal .total-padding {\n      height: 100%;\n    }\n  `]\n})\nexport class VirtualScrollerComponent implements OnInit, OnChanges, OnDestroy {\n    public viewPortItems: any[];\n    public window = window;\n\n    public get viewPortInfo(): IPageInfo {\n        const pageInfo: IViewport = this.previousViewPort || {};\n        return {\n            startIndex: pageInfo.startIndex || 0,\n            endIndex: pageInfo.endIndex || 0,\n            scrollStartPosition: pageInfo.scrollStartPosition || 0,\n            scrollEndPosition: pageInfo.scrollEndPosition || 0,\n            maxScrollPosition: pageInfo.maxScrollPosition || 0,\n            startIndexWithBuffer: pageInfo.startIndexWithBuffer || 0,\n            endIndexWithBuffer: pageInfo.endIndexWithBuffer || 0\n        };\n    }\n\n    @Input()\n    public executeRefreshOutsideAngularZone = false;\n\n    protected _enableUnequalChildrenSizes = false;\n    @Input()\n    public get enableUnequalChildrenSizes(): boolean {\n        return this._enableUnequalChildrenSizes;\n    }\n    public set enableUnequalChildrenSizes(value: boolean) {\n        if (this._enableUnequalChildrenSizes === value) {\n            return;\n        }\n\n        this._enableUnequalChildrenSizes = value;\n        this.minMeasuredChildWidth = undefined;\n        this.minMeasuredChildHeight = undefined;\n    }\n\n    @Input()\n    public useMarginInsteadOfTranslate = false;\n\n    @Input()\n    public modifyOverflowStyleOfParentScroll: boolean;\n\n    @Input()\n    public stripedTable: boolean;\n\n    @Input()\n    public scrollbarWidth: number;\n\n    @Input()\n    public scrollbarHeight: number;\n\n    @Input()\n    public childWidth: number;\n\n    @Input()\n    public childHeight: number;\n\n    @Input()\n    public ssrChildWidth: number;\n\n    @Input()\n    public ssrChildHeight: number;\n\n    @Input()\n    public ssrViewportWidth = 1920;\n\n    @Input()\n    public ssrViewportHeight = 1080;\n\n    protected _bufferAmount = 0;\n    @Input()\n    public get bufferAmount(): number {\n        if (typeof (this._bufferAmount) === 'number' && this._bufferAmount >= 0) {\n            return this._bufferAmount;\n        } else {\n            return this.enableUnequalChildrenSizes ? 5 : 0;\n        }\n    }\n    public set bufferAmount(value: number) {\n        this._bufferAmount = value;\n    }\n\n    @Input()\n    public scrollAnimationTime: number;\n\n    @Input()\n    public resizeBypassRefreshThreshold: number;\n\n    protected _scrollThrottlingTime: number;\n    @Input()\n    public get scrollThrottlingTime(): number {\n        return this._scrollThrottlingTime;\n    }\n    public set scrollThrottlingTime(value: number) {\n        this._scrollThrottlingTime = value;\n        this.updateOnScrollFunction();\n    }\n\n    protected _scrollDebounceTime: number;\n    @Input()\n    public get scrollDebounceTime(): number {\n        return this._scrollDebounceTime;\n    }\n    public set scrollDebounceTime(value: number) {\n        this._scrollDebounceTime = value;\n        this.updateOnScrollFunction();\n    }\n\n    protected onScroll: () => void;\n    protected updateOnScrollFunction(): void {\n        if (this.scrollDebounceTime) {\n            this.onScroll = this.debounce(() => {\n                this.refresh_internal(false);\n            }, this.scrollDebounceTime);\n        } else if (this.scrollThrottlingTime) {\n            this.onScroll = this.throttleTrailing(() => {\n                this.refresh_internal(false);\n            }, this.scrollThrottlingTime);\n        } else {\n            this.onScroll = () => {\n                this.refresh_internal(false);\n            };\n        }\n    }\n\n    protected checkScrollElementResizedTimer: number;\n    protected _checkResizeInterval: number;\n    @Input()\n    public get checkResizeInterval(): number {\n        return this._checkResizeInterval;\n    }\n    public set checkResizeInterval(value: number) {\n        if (this._checkResizeInterval === value) {\n            return;\n        }\n\n        this._checkResizeInterval = value;\n        this.addScrollEventHandlers();\n    }\n\n    protected _items: any[] = [];\n    @Input()\n    public get items(): any[] {\n        return this._items;\n    }\n    public set items(value: any[]) {\n        if (value === this._items) {\n            return;\n        }\n\n        this._items = value || [];\n        this.refresh_internal(true);\n    }\n\n    @Input()\n    public compareItems: (item1: any, item2: any) => boolean = (item1: any, item2: any) => item1 === item2;\n\n    protected _horizontal: boolean;\n    @Input()\n    public get horizontal(): boolean {\n        return this._horizontal;\n    }\n    public set horizontal(value: boolean) {\n        this._horizontal = value;\n        this.updateDirection();\n    }\n\n    protected revertParentOverscroll(): void {\n        const scrollElement = this.getScrollElement();\n        if (scrollElement && this.oldParentScrollOverflow) {\n            scrollElement.style['overflow-y'] = this.oldParentScrollOverflow.y;\n            scrollElement.style['overflow-x'] = this.oldParentScrollOverflow.x;\n        }\n\n        this.oldParentScrollOverflow = undefined;\n    }\n\n    protected oldParentScrollOverflow: { x: string, y: string };\n    protected _parentScroll: Element | Window;\n    @Input()\n    public get parentScroll(): Element | Window {\n        return this._parentScroll;\n    }\n    public set parentScroll(value: Element | Window) {\n        if (this._parentScroll === value) {\n            return;\n        }\n\n        this.revertParentOverscroll();\n        this._parentScroll = value;\n        this.addScrollEventHandlers();\n\n        const scrollElement = this.getScrollElement();\n        if (this.modifyOverflowStyleOfParentScroll && scrollElement !== this.element.nativeElement) {\n            this.oldParentScrollOverflow = { x: scrollElement.style['overflow-x'], y: scrollElement.style['overflow-y'] };\n            scrollElement.style['overflow-y'] = this.horizontal ? 'visible' : 'auto';\n            scrollElement.style['overflow-x'] = this.horizontal ? 'auto' : 'visible';\n        }\n    }\n\n    @Output()\n    public vsUpdate: EventEmitter = new EventEmitter();\n\n    @Output()\n    public vsChange: EventEmitter = new EventEmitter();\n\n    @Output()\n    public vsStart: EventEmitter = new EventEmitter();\n\n    @Output()\n    public vsEnd: EventEmitter = new EventEmitter();\n\n    @ViewChild('content', { read: ElementRef, static: false })\n    protected contentElementRef: ElementRef;\n\n    @ViewChild('invisiblePadding', { read: ElementRef, static: false })\n    protected invisiblePaddingElementRef: ElementRef;\n\n    @ContentChild('header', { read: ElementRef, static: false })\n    protected headerElementRef: ElementRef;\n\n    @ContentChild('container', { read: ElementRef, static: false })\n    protected containerElementRef: ElementRef;\n\n    public ngOnInit(): void {\n        this.addScrollEventHandlers();\n    }\n\n    public ngOnDestroy(): void {\n        this.removeScrollEventHandlers();\n        this.revertParentOverscroll();\n    }\n\n    public ngOnChanges(changes: any): void {\n        const indexLengthChanged = this.cachedItemsLength !== this.items.length;\n        this.cachedItemsLength = this.items.length;\n\n        const firstRun: boolean = !changes.items || !changes.items.previousValue || changes.items.previousValue.length === 0;\n        this.refresh_internal(indexLengthChanged || firstRun);\n    }\n\n\n    public ngDoCheck(): void {\n        if (this.cachedItemsLength !== this.items.length) {\n            this.cachedItemsLength = this.items.length;\n            this.refresh_internal(true);\n            return;\n        }\n\n        if (this.previousViewPort && this.viewPortItems && this.viewPortItems.length > 0) {\n            let itemsArrayChanged = false;\n            for (let i = 0; i = 0) {\n                this.invalidateCachedMeasurementAtIndex(index);\n            }\n        } else {\n            this.minMeasuredChildWidth = undefined;\n            this.minMeasuredChildHeight = undefined;\n        }\n\n        this.refresh_internal(false);\n    }\n\n    public invalidateCachedMeasurementAtIndex(index: number): void {\n        if (this.enableUnequalChildrenSizes) {\n            const cachedMeasurement = this.wrapGroupDimensions.maxChildSizePerWrapGroup[index];\n            if (cachedMeasurement) {\n                this.wrapGroupDimensions.maxChildSizePerWrapGroup[index] = undefined;\n                --this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n                this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= cachedMeasurement.childWidth || 0;\n                this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= cachedMeasurement.childHeight || 0;\n            }\n        } else {\n            this.minMeasuredChildWidth = undefined;\n            this.minMeasuredChildHeight = undefined;\n        }\n\n        this.refresh_internal(false);\n    }\n\n    public scrollInto(item: any, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n        const index: number = this.items.indexOf(item);\n        if (index === -1) {\n            return;\n        }\n\n        this.scrollToIndex(index, alignToBeginning, additionalOffset, animationMilliseconds, animationCompletedCallback);\n    }\n\n    public scrollToIndex(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n        let maxRetries = 5;\n\n        const retryIfNeeded = () => {\n            --maxRetries;\n            if (maxRetries  void = undefined): void {\n        animationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n\n        const dimensions = this.calculateDimensions();\n        let scroll = this.calculatePadding(index, dimensions) + additionalOffset;\n        if (!alignToBeginning) {\n            scroll -= dimensions.wrapGroupsPerPage * dimensions[this._childScrollDim];\n        }\n\n        this.scrollToPosition(scroll, animationMilliseconds, animationCompletedCallback);\n    }\n\n    public scrollToPosition(scrollPosition: number, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n        scrollPosition += this.getElementsOffset();\n\n        animationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n\n        const scrollElement = this.getScrollElement();\n\n        let animationRequest: number;\n\n        if (this.currentTween) {\n            this.currentTween.stop();\n            this.currentTween = undefined;\n        }\n\n        if (!animationMilliseconds) {\n            this.renderer.setProperty(scrollElement, this._scrollType, scrollPosition);\n            this.refresh_internal(false, animationCompletedCallback);\n            return;\n        }\n\n        const tweenConfigObj = { scrollPosition: scrollElement[this._scrollType] };\n\n        const newTween = new tween.Tween(tweenConfigObj)\n            .to({ scrollPosition }, animationMilliseconds)\n            .easing(tween.Easing.Quadratic.Out)\n            .onUpdate((data) => {\n                if (isNaN(data.scrollPosition)) {\n                    return;\n                }\n                this.renderer.setProperty(scrollElement, this._scrollType, data.scrollPosition);\n                this.refresh_internal(false);\n            })\n            .onStop(() => {\n                cancelAnimationFrame(animationRequest);\n            })\n            .start();\n\n        const animate = (time?: number) => {\n            if (!newTween['isPlaying']()) {\n                return;\n            }\n\n            newTween.update(time);\n            if (tweenConfigObj.scrollPosition === scrollPosition) {\n                this.refresh_internal(false, animationCompletedCallback);\n                return;\n            }\n\n            this.zone.runOutsideAngular(() => {\n                animationRequest = requestAnimationFrame(animate);\n            });\n        };\n\n        animate();\n        this.currentTween = newTween;\n    }\n\n    protected isAngularUniversalSSR: boolean;\n\n    constructor(protected readonly element: ElementRef,\n        protected readonly renderer: Renderer2,\n        protected readonly zone: NgZone,\n        protected changeDetectorRef: ChangeDetectorRef,\n        @Inject(PLATFORM_ID) platformId: Object,\n        @Optional() @Inject('virtual-scroller-default-options')\n        options: VirtualScrollerDefaultOptions) {\n\n        this.isAngularUniversalSSR = isPlatformServer(platformId);\n\n        this.scrollThrottlingTime = options.scrollThrottlingTime;\n        this.scrollDebounceTime = options.scrollDebounceTime;\n        this.scrollAnimationTime = options.scrollAnimationTime;\n        this.scrollbarWidth = options.scrollbarWidth;\n        this.scrollbarHeight = options.scrollbarHeight;\n        this.checkResizeInterval = options.checkResizeInterval;\n        this.resizeBypassRefreshThreshold = options.resizeBypassRefreshThreshold;\n        this.modifyOverflowStyleOfParentScroll = options.modifyOverflowStyleOfParentScroll;\n        this.stripedTable = options.stripedTable;\n\n        this.horizontal = false;\n        this.resetWrapGroupDimensions();\n    }\n\n    protected getElementSize(element: HTMLElement): ClientRect {\n        const result = element.getBoundingClientRect();\n        const styles = getComputedStyle(element);\n        const marginTop = parseInt(styles['margin-top'], 10) || 0;\n        const marginBottom = parseInt(styles['margin-bottom'], 10) || 0;\n        const marginLeft = parseInt(styles['margin-left'], 10) || 0;\n        const marginRight = parseInt(styles['margin-right'], 10) || 0;\n\n        return {\n            top: result.top + marginTop,\n            bottom: result.bottom + marginBottom,\n            left: result.left + marginLeft,\n            right: result.right + marginRight,\n            width: result.width + marginLeft + marginRight,\n            height: result.height + marginTop + marginBottom\n        };\n    }\n\n    protected previousScrollBoundingRect: ClientRect;\n    protected checkScrollElementResized(): void {\n        const boundingRect = this.getElementSize(this.getScrollElement());\n\n        let sizeChanged: boolean;\n        if (!this.previousScrollBoundingRect) {\n            sizeChanged = true;\n        } else {\n            const widthChange = Math.abs(boundingRect.width - this.previousScrollBoundingRect.width);\n            const heightChange = Math.abs(boundingRect.height - this.previousScrollBoundingRect.height);\n            sizeChanged = widthChange > this.resizeBypassRefreshThreshold || heightChange > this.resizeBypassRefreshThreshold;\n        }\n\n        if (sizeChanged) {\n            this.previousScrollBoundingRect = boundingRect;\n            if (boundingRect.width > 0 && boundingRect.height > 0) {\n                this.refresh_internal(false);\n            }\n        }\n    }\n\n    protected _invisiblePaddingProperty;\n    protected _offsetType;\n    protected _scrollType;\n    protected _pageOffsetType;\n    protected _childScrollDim;\n    protected _translateDir;\n    protected _marginDir;\n    protected updateDirection(): void {\n        if (this.horizontal) {\n            this._invisiblePaddingProperty = 'width';\n            this._offsetType = 'offsetLeft';\n            this._pageOffsetType = 'pageXOffset';\n            this._childScrollDim = 'childWidth';\n            this._marginDir = 'margin-left';\n            this._translateDir = 'translateX';\n            this._scrollType = 'scrollLeft';\n        } else {\n            this._invisiblePaddingProperty = 'height';\n            this._offsetType = 'offsetTop';\n            this._pageOffsetType = 'pageYOffset';\n            this._childScrollDim = 'childHeight';\n            this._marginDir = 'margin-top';\n            this._translateDir = 'translateY';\n            this._scrollType = 'scrollTop';\n        }\n    }\n\n    protected debounce(func: Function, wait: number): Function {\n        const throttled = this.throttleTrailing(func, wait);\n        const result = function () {\n            throttled['cancel']();\n            throttled.apply(this, arguments);\n        };\n        result['cancel'] = function () {\n            throttled['cancel']();\n        };\n\n        return result;\n    }\n\n    protected throttleTrailing(func: Function, wait: number): Function {\n        let timeout;\n        let _arguments = arguments;\n        const result = function () {\n            const _this = this;\n            _arguments = arguments;\n\n            if (timeout) {\n                return;\n            }\n\n            if (wait {};\n    protected currentTween: tween.Tween;\n    protected cachedItemsLength: number;\n\n    protected disposeScrollHandler: () => void | undefined;\n    protected disposeResizeHandler: () => void | undefined;\n\n    protected refresh_internal(itemsArrayModified: boolean, refreshCompletedCallback: () => void = undefined, maxRunTimes: number = 2): void {\n        // note: maxRunTimes is to force it to keep recalculating if the previous iteration caused a re-render (different sliced items in viewport or scrollPosition changed).\n        // The default of 2x max will probably be accurate enough without causing too large a performance bottleneck\n        // The code would typically quit out on the 2nd iteration anyways. The main time it'd think more than 2 runs would be necessary would be for vastly different sized child items or if this is the 1st time the items array was initialized.\n        // Without maxRunTimes, If the user is actively scrolling this code would become an infinite loop until they stopped scrolling. This would be okay, except each scroll event would start an additional infinte loop. We want to short-circuit it to prevent this.\n\n        if (itemsArrayModified && this.previousViewPort && this.previousViewPort.scrollStartPosition > 0) {\n            // if items were prepended, scroll forward to keep same items visible\n            const oldViewPort = this.previousViewPort;\n            const oldViewPortItems = this.viewPortItems;\n\n            const oldRefreshCompletedCallback = refreshCompletedCallback;\n            refreshCompletedCallback = () => {\n                const scrollLengthDelta = this.previousViewPort.scrollLength - oldViewPort.scrollLength;\n                if (scrollLengthDelta > 0 && this.viewPortItems) {\n                    const oldStartItem = oldViewPortItems[0];\n                    const oldStartItemIndex = this.items.findIndex(x => this.compareItems(oldStartItem, x));\n                    if (oldStartItemIndex > this.previousViewPort.startIndexWithBuffer) {\n                        let itemOrderChanged = false;\n                        for (let i = 1; i  {\n            requestAnimationFrame(() => {\n\n                if (itemsArrayModified) {\n                    this.resetWrapGroupDimensions();\n                }\n                const viewport = this.calculateViewport();\n\n                const startChanged = itemsArrayModified || viewport.startIndex !== this.previousViewPort.startIndex;\n                const endChanged = itemsArrayModified || viewport.endIndex !== this.previousViewPort.endIndex;\n                const scrollLengthChanged = viewport.scrollLength !== this.previousViewPort.scrollLength;\n                const paddingChanged = viewport.padding !== this.previousViewPort.padding;\n                const scrollPositionChanged = viewport.scrollStartPosition !== this.previousViewPort.scrollStartPosition || viewport.scrollEndPosition !== this.previousViewPort.scrollEndPosition || viewport.maxScrollPosition !== this.previousViewPort.maxScrollPosition;\n\n                this.previousViewPort = viewport;\n\n                if (scrollLengthChanged) {\n                    this.renderer.setStyle(this.invisiblePaddingElementRef.nativeElement, this._invisiblePaddingProperty, `${viewport.scrollLength}px`);\n                }\n\n                if (paddingChanged) {\n                    if (this.useMarginInsteadOfTranslate) {\n                        this.renderer.setStyle(this.contentElementRef.nativeElement, this._marginDir, `${viewport.padding}px`);\n                    } else {\n                        this.renderer.setStyle(this.contentElementRef.nativeElement, 'transform', `${this._translateDir}(${viewport.padding}px)`);\n                        this.renderer.setStyle(this.contentElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${viewport.padding}px)`);\n                    }\n                }\n\n                if (this.headerElementRef) {\n                    const scrollPosition = this.getScrollElement()[this._scrollType];\n                    const containerOffset = this.getElementsOffset();\n                    const offset = Math.max(scrollPosition - viewport.padding - containerOffset + this.headerElementRef.nativeElement.clientHeight, 0);\n                    this.renderer.setStyle(this.headerElementRef.nativeElement, 'transform', `${this._translateDir}(${offset}px)`);\n                    this.renderer.setStyle(this.headerElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${offset}px)`);\n                }\n\n                const changeEventArg: IPageInfo = (startChanged || endChanged) ? {\n                    startIndex: viewport.startIndex,\n                    endIndex: viewport.endIndex,\n                    scrollStartPosition: viewport.scrollStartPosition,\n                    scrollEndPosition: viewport.scrollEndPosition,\n                    startIndexWithBuffer: viewport.startIndexWithBuffer,\n                    endIndexWithBuffer: viewport.endIndexWithBuffer,\n                    maxScrollPosition: viewport.maxScrollPosition\n                } : undefined;\n\n\n                if (startChanged || endChanged || scrollPositionChanged) {\n                    const handleChanged = () => {\n                        // update the scroll list to trigger re-render of components in viewport\n                        this.viewPortItems = viewport.startIndexWithBuffer >= 0 && viewport.endIndexWithBuffer >= 0 ? this.items.slice(viewport.startIndexWithBuffer, viewport.endIndexWithBuffer + 1) : [];\n                        this.vsUpdate.emit(this.viewPortItems);\n\n                        if (startChanged) {\n                            this.vsStart.emit(changeEventArg);\n                        }\n\n                        if (endChanged) {\n                            this.vsEnd.emit(changeEventArg);\n                        }\n\n                        if (startChanged || endChanged) {\n                            this.changeDetectorRef.markForCheck();\n                            this.vsChange.emit(changeEventArg);\n                        }\n\n                        if (maxRunTimes > 0) {\n                            this.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n                            return;\n                        }\n\n                        if (refreshCompletedCallback) {\n                            refreshCompletedCallback();\n                        }\n                    };\n\n\n                    if (this.executeRefreshOutsideAngularZone) {\n                        handleChanged();\n                    } else {\n                        this.zone.run(handleChanged);\n                    }\n                } else {\n                    if (maxRunTimes > 0 && (scrollLengthChanged || paddingChanged)) {\n                        this.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n                        return;\n                    }\n\n                    if (refreshCompletedCallback) {\n                        refreshCompletedCallback();\n                    }\n                }\n            });\n        });\n    }\n\n    protected getScrollElement(): HTMLElement {\n        return this.parentScroll instanceof Window ? document.scrollingElement || document.documentElement || document.body : this.parentScroll || this.element.nativeElement;\n    }\n\n    protected addScrollEventHandlers(): void {\n        if (this.isAngularUniversalSSR) {\n            return;\n        }\n\n        const scrollElement = this.getScrollElement();\n\n        this.removeScrollEventHandlers();\n\n        this.zone.runOutsideAngular(() => {\n            if (this.parentScroll instanceof Window) {\n                this.disposeScrollHandler = this.renderer.listen('window', 'scroll', this.onScroll);\n                this.disposeResizeHandler = this.renderer.listen('window', 'resize', this.onScroll);\n            } else {\n                this.disposeScrollHandler = this.renderer.listen(scrollElement, 'scroll', this.onScroll);\n                if (this._checkResizeInterval > 0) {\n                    this.checkScrollElementResizedTimer = setInterval(() => { this.checkScrollElementResized(); }, this._checkResizeInterval);\n                }\n            }\n        });\n    }\n\n    protected removeScrollEventHandlers(): void {\n        if (this.checkScrollElementResizedTimer) {\n            clearInterval(this.checkScrollElementResizedTimer);\n        }\n\n        if (this.disposeScrollHandler) {\n            this.disposeScrollHandler();\n            this.disposeScrollHandler = undefined;\n        }\n\n        if (this.disposeResizeHandler) {\n            this.disposeResizeHandler();\n            this.disposeResizeHandler = undefined;\n        }\n    }\n\n    protected getElementsOffset(): number {\n        if (this.isAngularUniversalSSR) {\n            return 0;\n        }\n\n        let offset = 0;\n\n        if (this.containerElementRef && this.containerElementRef.nativeElement) {\n            offset += this.containerElementRef.nativeElement[this._offsetType];\n        }\n\n        if (this.parentScroll) {\n            const scrollElement = this.getScrollElement();\n            const elementClientRect = this.getElementSize(this.element.nativeElement);\n            const scrollClientRect = this.getElementSize(scrollElement);\n            if (this.horizontal) {\n                offset += elementClientRect.left - scrollClientRect.left;\n            } else {\n                offset += elementClientRect.top - scrollClientRect.top;\n            }\n\n            if (!(this.parentScroll instanceof Window)) {\n                offset += scrollElement[this._scrollType];\n            }\n        }\n\n        return offset;\n    }\n\n    protected countItemsPerWrapGroup(): number {\n        if (this.isAngularUniversalSSR) {\n            return Math.round(this.horizontal ? this.ssrViewportHeight / this.ssrChildHeight : this.ssrViewportWidth / this.ssrChildWidth);\n        }\n\n        const propertyName = this.horizontal ? 'offsetLeft' : 'offsetTop';\n        const children = ((this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement).children;\n\n        const childrenLength = children ? children.length : 0;\n        if (childrenLength === 0) {\n            return 1;\n        }\n\n        const firstOffset = children[0][propertyName];\n        let result = 1;\n        while (result  0) {\n                if (!this.childWidth || !this.childHeight) {\n                    if (!this.minMeasuredChildWidth && viewportWidth > 0) {\n                        this.minMeasuredChildWidth = viewportWidth;\n                    }\n                    if (!this.minMeasuredChildHeight && viewportHeight > 0) {\n                        this.minMeasuredChildHeight = viewportHeight;\n                    }\n                }\n\n                const child = content.children[0];\n                const clientRect = this.getElementSize(child);\n                this.minMeasuredChildWidth = Math.min(this.minMeasuredChildWidth, clientRect.width);\n                this.minMeasuredChildHeight = Math.min(this.minMeasuredChildHeight, clientRect.height);\n            }\n\n            defaultChildWidth = this.childWidth || this.minMeasuredChildWidth || viewportWidth;\n            defaultChildHeight = this.childHeight || this.minMeasuredChildHeight || viewportHeight;\n            const itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\n            const itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\n            wrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\n        } else {\n            let scrollOffset = scrollElement[this._scrollType] - (this.previousViewPort ? this.previousViewPort.padding : 0);\n\n            let arrayStartIndex = this.previousViewPort.startIndexWithBuffer || 0;\n            let wrapGroupIndex = Math.ceil(arrayStartIndex / itemsPerWrapGroup);\n\n            let maxWidthForWrapGroup = 0;\n            let maxHeightForWrapGroup = 0;\n            let sumOfVisibleMaxWidths = 0;\n            let sumOfVisibleMaxHeights = 0;\n            wrapGroupsPerPage = 0;\n\n            for (let i = 0; i  0) {\n                            const scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleWidthForWrapGroup);\n                            maxVisibleWidthForWrapGroup -= scrollOffsetToRemove;\n                            scrollOffset -= scrollOffsetToRemove;\n                        }\n\n                        sumOfVisibleMaxWidths += maxVisibleWidthForWrapGroup;\n                        if (maxVisibleWidthForWrapGroup > 0 && viewportWidth >= sumOfVisibleMaxWidths) {\n                            ++wrapGroupsPerPage;\n                        }\n                    } else {\n                        let maxVisibleHeightForWrapGroup = Math.min(maxHeightForWrapGroup, Math.max(viewportHeight - sumOfVisibleMaxHeights, 0));\n                        if (scrollOffset > 0) {\n                            const scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleHeightForWrapGroup);\n                            maxVisibleHeightForWrapGroup -= scrollOffsetToRemove;\n                            scrollOffset -= scrollOffsetToRemove;\n                        }\n\n                        sumOfVisibleMaxHeights += maxVisibleHeightForWrapGroup;\n                        if (maxVisibleHeightForWrapGroup > 0 && viewportHeight >= sumOfVisibleMaxHeights) {\n                            ++wrapGroupsPerPage;\n                        }\n                    }\n\n                    ++wrapGroupIndex;\n\n                    maxWidthForWrapGroup = 0;\n                    maxHeightForWrapGroup = 0;\n                }\n            }\n\n            const averageChildWidth = this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n            const averageChildHeight = this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n            defaultChildWidth = this.childWidth || averageChildWidth || viewportWidth;\n            defaultChildHeight = this.childHeight || averageChildHeight || viewportHeight;\n\n            if (this.horizontal) {\n                if (viewportWidth > sumOfVisibleMaxWidths) {\n                    wrapGroupsPerPage += Math.ceil((viewportWidth - sumOfVisibleMaxWidths) / defaultChildWidth);\n                }\n            } else {\n                if (viewportHeight > sumOfVisibleMaxHeights) {\n                    wrapGroupsPerPage += Math.ceil((viewportHeight - sumOfVisibleMaxHeights) / defaultChildHeight);\n                }\n            }\n        }\n\n        const itemCount = this.items.length;\n        const itemsPerPage = itemsPerWrapGroup * wrapGroupsPerPage;\n        const pageCount_fractional = itemCount / itemsPerPage;\n        const numberOfWrapGroups = Math.ceil(itemCount / itemsPerWrapGroup);\n\n        let scrollLength = 0;\n\n        const defaultScrollLengthPerWrapGroup = this.horizontal ? defaultChildWidth : defaultChildHeight;\n        if (this.enableUnequalChildrenSizes) {\n            let numUnknownChildSizes = 0;\n            for (let i = 0; i  0) {\n            arrayEndIndex += dimensions.itemsPerWrapGroup - endIndexWithinWrapGroup; // round up to end of wrapGroup\n        }\n\n        if (isNaN(arrayStartIndex)) {\n            arrayStartIndex = 0;\n        }\n        if (isNaN(arrayEndIndex)) {\n            arrayEndIndex = 0;\n        }\n\n        arrayStartIndex = Math.min(Math.max(arrayStartIndex, 0), dimensions.itemCount - 1);\n        arrayEndIndex = Math.min(Math.max(arrayEndIndex, 0), dimensions.itemCount - 1);\n\n        const bufferSize = this.bufferAmount * dimensions.itemsPerWrapGroup;\n        const startIndexWithBuffer = Math.min(Math.max(arrayStartIndex - bufferSize, 0), dimensions.itemCount - 1);\n        const endIndexWithBuffer = Math.min(Math.max(arrayEndIndex + bufferSize, 0), dimensions.itemCount - 1);\n\n        return {\n            startIndex: arrayStartIndex,\n            endIndex: arrayEndIndex,\n            startIndexWithBuffer: startIndexWithBuffer,\n            endIndexWithBuffer: endIndexWithBuffer,\n            scrollStartPosition: scrollPosition,\n            scrollEndPosition: scrollPosition + dimensions.viewportLength,\n            maxScrollPosition: dimensions.maxScrollPosition\n        };\n    }\n\n    protected calculateViewport(): IViewport {\n        const dimensions = this.calculateDimensions();\n        const offset = this.getElementsOffset();\n\n        let scrollStartPosition = this.getScrollStartPosition();\n        if (scrollStartPosition > (dimensions.scrollLength + offset) && !(this.parentScroll instanceof Window)) {\n            scrollStartPosition = dimensions.scrollLength;\n        } else {\n            scrollStartPosition -= offset;\n        }\n        scrollStartPosition = Math.max(0, scrollStartPosition);\n\n        const pageInfo = this.calculatePageInfo(scrollStartPosition, dimensions);\n        const newPadding = this.calculatePadding(pageInfo.startIndexWithBuffer, dimensions);\n        const newScrollLength = dimensions.scrollLength;\n\n        return {\n            startIndex: pageInfo.startIndex,\n            endIndex: pageInfo.endIndex,\n            startIndexWithBuffer: pageInfo.startIndexWithBuffer,\n            endIndexWithBuffer: pageInfo.endIndexWithBuffer,\n            padding: Math.round(newPadding),\n            scrollLength: Math.round(newScrollLength),\n            scrollStartPosition: pageInfo.scrollStartPosition,\n            scrollEndPosition: pageInfo.scrollEndPosition,\n            maxScrollPosition: pageInfo.maxScrollPosition\n        };\n    }\n}\n\n@NgModule({\n    exports: [VirtualScrollerComponent],\n    declarations: [VirtualScrollerComponent],\n    imports: [CommonModule],\n    providers: [\n        {\n            provide: 'virtual-scroller-default-options',\n            useFactory: VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY\n        }\n    ]\n})\nexport class VirtualScrollerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/WhenScrolledDirective.html":{"url":"directives/WhenScrolledDirective.html","title":"directive - WhenScrolledDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  WhenScrolledDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ui/when-scrolled.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [whenScrolled]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                callback\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, rendered: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/ui/when-scrolled.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendered\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        callback\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/ui/when-scrolled.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/ui/when-scrolled.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listener\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ui/when-scrolled.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, OnDestroy, Output, EventEmitter, Renderer2 } from '@angular/core';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[whenScrolled]'\n})\nexport class WhenScrolledDirective implements OnDestroy {\n\n    @Output() callback: EventEmitter = new EventEmitter();\n    listener: any;\n\n    constructor(private _elementRef: ElementRef, rendered: Renderer2) {\n        this.listener = rendered.listen(this._elementRef.nativeElement, 'scroll', (ev: any) => {\n            if (Math.round(ev.target.scrollTop + ev.target.clientHeight) >= ev.target.scrollHeight) {\n                this.callback.emit();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.listener();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WrapGroupDimension.html":{"url":"interfaces/WrapGroupDimension.html","title":"interface - WrapGroupDimension","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WrapGroupDimension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/select/virtual-scroll/wrapgroupdimension.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        childHeight\n                                \n                                \n                                        childWidth\n                                \n                                \n                                        items\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        childHeight\n                                    \n                                \n                                \n                                    \n                                        childHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        childWidth\n                                    \n                                \n                                \n                                    \n                                        childWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WrapGroupDimension {\n\tchildWidth: number;\n\tchildHeight: number;\n\titems: any[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WrapGroupDimensions.html":{"url":"interfaces/WrapGroupDimensions.html","title":"interface - WrapGroupDimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WrapGroupDimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/select/virtual-scroll/wrapgroupdimensions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        maxChildSizePerWrapGroup\n                                \n                                \n                                        numberOfKnownWrapGroupChildSizes\n                                \n                                \n                                        sumOfKnownWrapGroupChildHeights\n                                \n                                \n                                        sumOfKnownWrapGroupChildWidths\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxChildSizePerWrapGroup\n                                    \n                                \n                                \n                                    \n                                        maxChildSizePerWrapGroup:         WrapGroupDimension[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WrapGroupDimension[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfKnownWrapGroupChildSizes\n                                    \n                                \n                                \n                                    \n                                        numberOfKnownWrapGroupChildSizes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sumOfKnownWrapGroupChildHeights\n                                    \n                                \n                                \n                                    \n                                        sumOfKnownWrapGroupChildHeights:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sumOfKnownWrapGroupChildWidths\n                                    \n                                \n                                \n                                    \n                                        sumOfKnownWrapGroupChildWidths:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WrapGroupDimension } from './wrapgroupdimension';\n\nexport interface WrapGroupDimensions {\n\tnumberOfKnownWrapGroupChildSizes: number;\n\tsumOfKnownWrapGroupChildWidths: number;\n\tsumOfKnownWrapGroupChildHeights: number;\n\tmaxChildSizePerWrapGroup: WrapGroupDimension[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/aws/Iaws.ts\n            \n            interface\n            AwsData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/aws/Iaws.ts\n            \n            interface\n            S3\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/aws/aws.service.ts\n            \n            injectable\n            AwsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/aws/aws.service.ts\n            \n            variable\n            AWS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cookie/cookies.service.ts\n            \n            injectable\n            CookiesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/external-script/external-script.service.ts\n            \n            injectable\n            ExternalScriptService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/facebook/IFacebook.ts\n            \n            interface\n            FacebookUserProfile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/facebook/config/facebook-sdk.config.ts\n            \n            class\n            FacebookSDKConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/facebook/facebook-sdk.service.ts\n            \n            injectable\n            FacebookSDKService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/facebook/facebook-sdk.service.ts\n            \n            variable\n            NG_FSDK_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/file/read.ts\n            \n            function\n            getFileType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/file/read.ts\n            \n            function\n            readAsArrayBuffer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/file/read.ts\n            \n            function\n            readAsDataURL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/form/address/address-col/address-col.component.ts\n            \n            component\n            AddressColComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                src/form/filter/ser-filter.component.ts\n            \n            component\n            SerFilterComponent\n            \n                0 %\n                (0/84)\n            \n        \n        \n            \n                \n                src/form/filter/ser-filter.component.ts\n            \n            variable\n            noop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/filter/ser-filter.interface.ts\n            \n            interface\n            FilterSettings\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/form/filter/ser-filter.module.ts\n            \n            variable\n            dependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/grow-on-input.directive.ts\n            \n            directive\n            GrowOnInputDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/form/pin/pin-input.component.ts\n            \n            component\n            PinInputComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/form/select/ser-select-menu-item.directive.ts\n            \n            directive\n            SDBadgeDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/select/ser-select-menu-item.directive.ts\n            \n            directive\n            SDBadgeItemDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/select/ser-select-menu-item.directive.ts\n            \n            directive\n            SDItemDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/select/ser-select.component.ts\n            \n            component\n            SerSelectComponent\n            \n                0 %\n                (0/103)\n            \n        \n        \n            \n                \n                src/form/select/ser-select.component.ts\n            \n            variable\n            noop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/select/ser-select.interface.ts\n            \n            interface\n            DropdownSettings\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/form/select/ser-select.module.ts\n            \n            variable\n            dependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/select/ser-select.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/defaultoptions.ts\n            \n            interface\n            VirtualScrollerDefaultOptions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/idimension.ts\n            \n            interface\n            IDimensions\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/ipageinfo.ts\n            \n            interface\n            IPageInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/iviewport.ts\n            \n            interface\n            IViewport\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/virtual-scroll.ts\n            \n            component\n            VirtualScrollerComponent\n            \n                0 %\n                (0/99)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/virtual-scroll.ts\n            \n            function\n            VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/wrapgroupdimension.ts\n            \n            interface\n            WrapGroupDimension\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/wrapgroupdimensions.ts\n            \n            interface\n            WrapGroupDimensions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/form/ser-errors/ser-error.directive.ts\n            \n            directive\n            SerErrorDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/form/ser-errors/ser-errors.directive.ts\n            \n            directive\n            SerErrorsDirective\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/form/ser-errors/ser-errors.ts\n            \n            interface\n            ErrorDetails\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/ser-form-element/ser-control.directive.ts\n            \n            directive\n            SerControlDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/form/ser-form-element/ser-form-element.component.ts\n            \n            component\n            SerFormElementComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/form/ser-form.module.ts\n            \n            variable\n            dependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/comparison.ts\n            \n            function\n            greaterOrEqualThan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/comparison.ts\n            \n            function\n            greaterThan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/comparison.ts\n            \n            function\n            lowerOrEqualThan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/comparison.ts\n            \n            function\n            lowerThan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/custom-validators.ts\n            \n            class\n            CustomValidators\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/form/validations/file.ts\n            \n            function\n            maxFileSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/file.ts\n            \n            function\n            minFileSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/file.ts\n            \n            function\n            requiredFileType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/match.ts\n            \n            function\n            match\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/match.ts\n            \n            function\n            verifyNIT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/remote.ts\n            \n            interface\n            BaseValidationModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/form/validations/remote.ts\n            \n            function\n            alreadyExist\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fullscreen/fullscreen-interface.ts\n            \n            interface\n            FsDocument\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/fullscreen/fullscreen-interface.ts\n            \n            interface\n            FsDocumentElement\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/fullscreen/fullscreen.service.ts\n            \n            injectable\n            FullscreenService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/google/IGoogle.ts\n            \n            class\n            GoogleClientConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/google/IGoogle.ts\n            \n            interface\n            GoogleUserProfile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/google/config/google-sdk.config.ts\n            \n            class\n            GoogleSDKConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/google/google-sdk.service.ts\n            \n            injectable\n            GoogleSDKService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/google/google-sdk.service.ts\n            \n            variable\n            NG_GAPI_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql/utils.ts\n            \n            function\n            objectToGraphParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/string.extensions.ts\n            \n            interface\n            String\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/map/leaflet/main.ts\n            \n            class\n            LeafletMap\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/map/leaflet/providers.ts\n            \n            variable\n            LEAFLET_MAP_LAYERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/map/leaflet/types.ts\n            \n            interface\n            LeafletMapOptions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/map/leaflet/types.ts\n            \n            interface\n            LeafletPadding\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/map/map.service.ts\n            \n            injectable\n            MapService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/map/types.ts\n            \n            interface\n            CenterPoint\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/map/types.ts\n            \n            interface\n            LatLng\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/map/types.ts\n            \n            interface\n            LatLng2LatLngOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/open-id/Iopen-id-client.ts\n            \n            interface\n            OpenIdClient\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/open-id/Iopen-id-client.ts\n            \n            interface\n            OpenIdData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/open-id/claims.service.ts\n            \n            injectable\n            ClaimsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prefers-color-scheme/prefers-color-scheme.service.ts\n            \n            injectable\n            PrefersColorSchemeService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ui/bg-image.directive.ts\n            \n            directive\n            BgImageDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/ui/bg-image.directive.ts\n            \n            interface\n            BgImage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ui/copy-to-clipboard.directive.ts\n            \n            directive\n            CopyToClipboardDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/ui/download.service.ts\n            \n            injectable\n            DownloadService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/ui/finish-typing.directive.ts\n            \n            directive\n            FinishTypingDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/ui/long-press.directive.ts\n            \n            directive\n            LongPressDirective\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/ui/ser-ui.module.ts\n            \n            variable\n            dependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ui/snackbar.service.ts\n            \n            injectable\n            SnackbarService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/ui/snackbar.service.ts\n            \n            interface\n            SnackbarOpts\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/ui/toggle-class.directive.ts\n            \n            directive\n            ToggleClassDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/ui/when-scrolled.directive.ts\n            \n            directive\n            WhenScrolledDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            function\n            arrayGroupBy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            function\n            getObjectByValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            function\n            getObjIndexByValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            function\n            inArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            function\n            notInArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            variable\n            toArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/avatar.ts\n            \n            class\n            Color\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/utils/avatar.ts\n            \n            function\n            generateDefaultImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/bowser.ts\n            \n            function\n            setBowserClasses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/check.ts\n            \n            function\n            hasValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/check.ts\n            \n            function\n            objHasValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/keyboard-keys.ts\n            \n            variable\n            KEYBOARD_KEYS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/navigator.ts\n            \n            function\n            browserWidth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/navigator.ts\n            \n            function\n            getStyles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/navigator.ts\n            \n            function\n            hasPdfViewer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/object.ts\n            \n            function\n            mergeObjs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            CC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            DOMAIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            EMAIL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            IMAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            interface\n            RandomPasswordOps\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            function\n            generatePassword\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            function\n            getRandomInt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            function\n            guid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            function\n            s4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            function\n            uniqueId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/rx-utils.ts\n            \n            function\n            fromIntersectionObserver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/rx-utils.ts\n            \n            function\n            fromMutationObserver\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.0.6\n        \n            @angular/common : ^9.0.6\n        \n            @angular/compiler : ^9.0.6\n        \n            @angular/core : ^9.0.6\n        \n            @angular/forms : ^9.0.6\n        \n            @angular/platform-browser : ^9.0.6\n        \n            @angular/platform-browser-dynamic : ^9.0.6\n        \n            @angular/router : ^9.0.6\n        \n            @sersol/leaflet-plugins : 0.1.0\n        \n            @types/facebook-js-sdk : ^3.3.0\n        \n            @types/gapi : 0.0.39\n        \n            @types/gapi.auth2 : 0.0.51\n        \n            @tweenjs/tween.js : ^17.4.0\n        \n            angular-cli-ghpages : ^0.6.2\n        \n            bowser : ^2.9.0\n        \n            highlight.js : ^9.18.1\n        \n            leaflet : ^1.6.0\n        \n            leaflet.markercluster : ^1.4.1\n        \n            ngx-highlightjs : ^3.0.3\n        \n            rxjs : ^6.5.4\n        \n            rxjs-compat : ^6.5.4\n        \n            tooltipster : ^4.2.7\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNGX-UI\nThis project was developed by SER\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2014-2019 SER Soluciones\nCopyright (c) 2014-2019 Andres Gambadeveloper@sersoluciones.com\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AwsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FacebookSDKModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GoogleSDKModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SerFilterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SerFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SerSelectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SerUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VirtualScrollerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SerFilterModule\n\n\n\ncluster_SerFilterModule_declarations\n\n\n\ncluster_SerFilterModule_exports\n\n\n\ncluster_SerFormModule\n\n\n\ncluster_SerFormModule_exports\n\n\n\ncluster_SerSelectModule\n\n\n\ncluster_SerSelectModule_imports\n\n\n\ncluster_SerSelectModule_providers\n\n\n\ncluster_SerUiModule\n\n\n\ncluster_VirtualScrollerModule\n\n\n\ncluster_VirtualScrollerModule_declarations\n\n\n\ncluster_VirtualScrollerModule_exports\n\n\n\n\nAddressColComponent\n\nAddressColComponent\n\n\n\nSerFilterModule\n\nSerFilterModule\n\nSerFilterModule -->\n\nAddressColComponent->SerFilterModule\n\n\n\n\n\nSerFormModule\n\nSerFormModule\n\nSerFormModule -->\n\nAddressColComponent->SerFormModule\n\n\n\n\n\nSerSelectModule\n\nSerSelectModule\n\nSerSelectModule -->\n\nAddressColComponent->SerSelectModule\n\n\n\n\n\nSerUiModule\n\nSerUiModule\n\nSerUiModule -->\n\nAddressColComponent->SerUiModule\n\n\n\n\n\nGrowOnInputDirective\n\nGrowOnInputDirective\n\nSerFilterModule -->\n\nGrowOnInputDirective->SerFilterModule\n\n\n\nSerFormModule -->\n\nGrowOnInputDirective->SerFormModule\n\n\n\nSerSelectModule -->\n\nGrowOnInputDirective->SerSelectModule\n\n\n\nSerUiModule -->\n\nGrowOnInputDirective->SerUiModule\n\n\n\n\n\nPinInputComponent\n\nPinInputComponent\n\nSerFilterModule -->\n\nPinInputComponent->SerFilterModule\n\n\n\nSerFormModule -->\n\nPinInputComponent->SerFormModule\n\n\n\nSerSelectModule -->\n\nPinInputComponent->SerSelectModule\n\n\n\nSerUiModule -->\n\nPinInputComponent->SerUiModule\n\n\n\n\n\nSerControlDirective\n\nSerControlDirective\n\nSerFilterModule -->\n\nSerControlDirective->SerFilterModule\n\n\n\nSerFormModule -->\n\nSerControlDirective->SerFormModule\n\n\n\nSerSelectModule -->\n\nSerControlDirective->SerSelectModule\n\n\n\nSerUiModule -->\n\nSerControlDirective->SerUiModule\n\n\n\n\n\nSerErrorDirective\n\nSerErrorDirective\n\nSerFilterModule -->\n\nSerErrorDirective->SerFilterModule\n\n\n\nSerFormModule -->\n\nSerErrorDirective->SerFormModule\n\n\n\nSerSelectModule -->\n\nSerErrorDirective->SerSelectModule\n\n\n\nSerUiModule -->\n\nSerErrorDirective->SerUiModule\n\n\n\n\n\nSerErrorsDirective\n\nSerErrorsDirective\n\nSerFilterModule -->\n\nSerErrorsDirective->SerFilterModule\n\n\n\nSerFormModule -->\n\nSerErrorsDirective->SerFormModule\n\n\n\nSerSelectModule -->\n\nSerErrorsDirective->SerSelectModule\n\n\n\nSerUiModule -->\n\nSerErrorsDirective->SerUiModule\n\n\n\n\n\nSerFormElementComponent\n\nSerFormElementComponent\n\nSerFilterModule -->\n\nSerFormElementComponent->SerFilterModule\n\n\n\nSerFormModule -->\n\nSerFormElementComponent->SerFormModule\n\n\n\nSerSelectModule -->\n\nSerFormElementComponent->SerSelectModule\n\n\n\nSerUiModule -->\n\nSerFormElementComponent->SerUiModule\n\n\n\n\n\nAddressColComponent \n\nAddressColComponent \n\nAddressColComponent  -->\n\nSerFilterModule->AddressColComponent \n\n\n\n\n\nGrowOnInputDirective \n\nGrowOnInputDirective \n\nGrowOnInputDirective  -->\n\nSerFilterModule->GrowOnInputDirective \n\n\n\n\n\nPinInputComponent \n\nPinInputComponent \n\nPinInputComponent  -->\n\nSerFilterModule->PinInputComponent \n\n\n\n\n\nSerControlDirective \n\nSerControlDirective \n\nSerControlDirective  -->\n\nSerFilterModule->SerControlDirective \n\n\n\n\n\nSerErrorDirective \n\nSerErrorDirective \n\nSerErrorDirective  -->\n\nSerFilterModule->SerErrorDirective \n\n\n\n\n\nSerErrorsDirective \n\nSerErrorsDirective \n\nSerErrorsDirective  -->\n\nSerFilterModule->SerErrorsDirective \n\n\n\n\n\nSerFormElementComponent \n\nSerFormElementComponent \n\nSerFormElementComponent  -->\n\nSerFilterModule->SerFormElementComponent \n\n\n\nAddressColComponent  -->\n\nSerFormModule->AddressColComponent \n\n\n\nGrowOnInputDirective  -->\n\nSerFormModule->GrowOnInputDirective \n\n\n\nPinInputComponent  -->\n\nSerFormModule->PinInputComponent \n\n\n\nSerControlDirective  -->\n\nSerFormModule->SerControlDirective \n\n\n\nSerErrorDirective  -->\n\nSerFormModule->SerErrorDirective \n\n\n\nSerErrorsDirective  -->\n\nSerFormModule->SerErrorsDirective \n\n\n\nSerFormElementComponent  -->\n\nSerFormModule->SerFormElementComponent \n\n\n\n\n\nSerFilterModule \n\nSerFilterModule \n\nSerFilterModule  -->\n\nSerFormModule->SerFilterModule \n\n\n\n\n\nSerSelectModule \n\nSerSelectModule \n\nSerSelectModule  -->\n\nSerFormModule->SerSelectModule \n\n\n\nAddressColComponent  -->\n\nSerSelectModule->AddressColComponent \n\n\n\nGrowOnInputDirective  -->\n\nSerSelectModule->GrowOnInputDirective \n\n\n\nPinInputComponent  -->\n\nSerSelectModule->PinInputComponent \n\n\n\nSerControlDirective  -->\n\nSerSelectModule->SerControlDirective \n\n\n\nSerErrorDirective  -->\n\nSerSelectModule->SerErrorDirective \n\n\n\nSerErrorsDirective  -->\n\nSerSelectModule->SerErrorsDirective \n\n\n\nSerFormElementComponent  -->\n\nSerSelectModule->SerFormElementComponent \n\n\n\n\n\nVirtualScrollerModule\n\nVirtualScrollerModule\n\nSerSelectModule -->\n\nVirtualScrollerModule->SerSelectModule\n\n\n\n\n\nVirtualScrollerComponent \n\nVirtualScrollerComponent \n\nVirtualScrollerComponent  -->\n\nVirtualScrollerModule->VirtualScrollerComponent \n\n\n\n\n\nDataService\n\nDataService\n\nSerSelectModule -->\n\nDataService->SerSelectModule\n\n\n\nAddressColComponent  -->\n\nSerUiModule->AddressColComponent \n\n\n\nGrowOnInputDirective  -->\n\nSerUiModule->GrowOnInputDirective \n\n\n\nPinInputComponent  -->\n\nSerUiModule->PinInputComponent \n\n\n\nSerControlDirective  -->\n\nSerUiModule->SerControlDirective \n\n\n\nSerErrorDirective  -->\n\nSerUiModule->SerErrorDirective \n\n\n\nSerErrorsDirective  -->\n\nSerUiModule->SerErrorsDirective \n\n\n\nSerFormElementComponent  -->\n\nSerUiModule->SerFormElementComponent \n\n\n\n\n\nVirtualScrollerComponent\n\nVirtualScrollerComponent\n\nVirtualScrollerModule -->\n\nVirtualScrollerComponent->VirtualScrollerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    13 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    27 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ErrorOptions   (src/.../ser-errors.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/form/ser-errors/ser-errors.ts\n    \n    \n        \n            \n                \n                    \n                    ErrorOptions\n                \n            \n            \n                \n                        string | string[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AWS_CONFIG   (src/.../aws.service.ts)\n                        \n                        \n                            CC   (src/.../patterns.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            dependencies   (src/.../ser-form.module.ts)\n                        \n                        \n                            dependencies   (src/.../ser-ui.module.ts)\n                        \n                        \n                            dependencies   (src/.../ser-filter.module.ts)\n                        \n                        \n                            dependencies   (src/.../ser-select.module.ts)\n                        \n                        \n                            DOMAIN   (src/.../patterns.ts)\n                        \n                        \n                            EMAIL   (src/.../patterns.ts)\n                        \n                        \n                            IMAGE   (src/.../patterns.ts)\n                        \n                        \n                            KEYBOARD_KEYS   (src/.../keyboard-keys.ts)\n                        \n                        \n                            LEAFLET_MAP_LAYERS   (src/.../providers.ts)\n                        \n                        \n                            NG_FSDK_CONFIG   (src/.../facebook-sdk.service.ts)\n                        \n                        \n                            NG_GAPI_CONFIG   (src/.../google-sdk.service.ts)\n                        \n                        \n                            noop   (src/.../ser-filter.component.ts)\n                        \n                        \n                            noop   (src/.../ser-select.component.ts)\n                        \n                        \n                            NUMBER   (src/.../patterns.ts)\n                        \n                        \n                            PASSWORD   (src/.../patterns.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            toArray   (src/.../array.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/aws/aws.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AWS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InjectionToken\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('aws.config')\n                        \n                    \n\n\n            \n        \n\n    src/utils/patterns.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CC\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /((\\d{8})|(\\d{10})|(\\d{11})|(\\d{6}-\\d{5}))?/g\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DOMAIN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^([a-zA-Z0-9\\_\\-\\.]{2,63})\\.([a-zA-Z0-9]{2,})$/\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EMAIL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IMAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^image\\/([a-zA-Z].*)$/\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUMBER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[-]{0,1}[0-9]*[.]{0,1}[0-9]+/g\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PASSWORD\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^((?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])).{6,}$/\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/form/ser-form.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    SerFormElementComponent,\n    SerControlDirective,\n    SerErrorsDirective,\n    SerErrorDirective,\n    PinInputComponent,\n    AddressColComponent,\n    GrowOnInputDirective\n]\n                        \n                    \n\n\n            \n        \n\n    src/ui/ser-ui.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  WhenScrolledDirective,\n  FinishTypingDirective,\n  BgImageDirective,\n  CopyToClipboardDirective,\n  ToggleClassDirective,\n  LongPressDirective\n]\n                        \n                    \n\n\n            \n        \n\n    src/form/filter/ser-filter.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    SerFilterComponent\n]\n                        \n                    \n\n\n            \n        \n\n    src/form/select/ser-select.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    SerSelectComponent,\n    SDItemDirective,\n    SDBadgeDirective,\n    SDBadgeItemDirective\n]\n                        \n                    \n\n\n            \n        \n\n    src/utils/keyboard-keys.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            KEYBOARD_KEYS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  up: 38,\n  down: 40,\n  left: 37,\n  right: 39,\n  escape: 27,\n  enter: 13,\n  backspace: 8,\n  delete: 46,\n  shift: 16,\n  leftCmd: 91,\n  rightCmd: 93,\n  ctrl: 17,\n  alt: 18,\n  tab: 9\n}\n                        \n                    \n\n\n            \n        \n\n    src/map/leaflet/providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LEAFLET_MAP_LAYERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'OpenStreetMap Street': L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n    }),\n    'Mapbox Street': L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n        attribution: 'Map data &copy; OpenStreetMap contributors, CC-BY-SA, Imagery © Mapbox',\n        maxZoom: 18,\n        id: 'mapbox/streets-v11',\n        tileSize: 512,\n        zoomOffset: -1,\n        accessToken: (window as any).mapbox_access_token\n    })\n}\n                        \n                    \n\n\n            \n        \n\n    src/facebook/facebook-sdk.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NG_FSDK_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InjectionToken\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('facebook.config')\n                        \n                    \n\n\n            \n        \n\n    src/google/google-sdk.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NG_GAPI_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InjectionToken\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('google.config')\n                        \n                    \n\n\n            \n        \n\n    src/form/filter/ser-filter.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            noop\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {\n}\n                        \n                    \n\n\n            \n        \n\n    src/form/select/ser-select.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            noop\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {\n}\n                        \n                    \n\n\n            \n        \n\n    src/utils/array.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value: any): string[] => Array.isArray(value) ? value : [value]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
