var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AwsData.html",[0,0.261,1,2.674]],["body/interfaces/AwsData.html",[0,0.465,1,4.76,2,1.466,3,0.179,4,0.179,5,0.157,6,4.724,7,0.344,8,0.761,9,5.155,10,0.247,11,0.013,12,0.211,13,4.34,14,1.059,15,0.01,16,0.01,17,0.01,18,0.01,19,0.01,20,0.01]],["title/modules/AwsModule.html",[21,1.624,22,3.132]],["body/modules/AwsModule.html",[3,0.148,4,0.148,5,0.129,9,3.119,10,0.204,11,0.014,12,0.188,13,3.582,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,22,5.734,23,2.514,24,4.968,25,1.254,26,4.232,27,3.899,28,6.315,29,5.734,30,0.942,31,0.908,32,4.968,33,1.013,34,1.013,35,0.557,36,6.315,37,1.168,38,5.449,39,0.815,40,4.088,41,0.874,42,4.358,43,4.968,44,1.799,45,3.899,46,1.67,47,4.324,48,2.294,49,2.938,50,2.514,51,4.554,52,3.582,53,2.938,54,4.968,55,3.329,56,3.899,57,2.106,58,4.968,59,2.64,60,3.899,61,3.049,62,2.64,63,0.645,64,3.899,65,1.346]],["title/injectables/AwsService.html",[42,2.505,66,1.081]],["body/injectables/AwsService.html",[1,5.127,3,0.105,4,0.105,5,0.092,7,0.201,8,0.537,9,3.148,10,0.261,11,0.014,12,0.149,13,4.581,14,1.381,15,0.006,16,0.006,17,0.006,18,0.006,19,0.006,20,0.006,25,1.266,30,1.322,31,1.412,33,1.295,34,1.295,35,0.713,37,1.372,39,0.685,41,0.621,42,3.148,44,2.112,46,1.685,48,2.933,49,2.086,50,2.951,51,2.544,63,0.36,65,1.818,66,1.358,67,1.56,68,2.769,69,3.1,70,2.421,71,4.581,72,2.282,73,5.834,74,3.241,75,5.015,76,5.015,77,2.537,78,1.063,79,2.769,80,3.528,81,3.662,82,5.015,83,3.528,84,2.965,85,4.986,86,5.529,87,3.757,88,3.757,89,6.353,90,2.933,91,6.353,92,5.015,93,5.015,94,3.528,95,3.528,96,3.528,97,3.528,98,3.528,99,3.528,100,1.961,101,0.922,102,3.528,103,2.364,104,3.36,105,1.785,106,1.974,107,1.38,108,3.071,109,3.071,110,1.875,111,2.769,112,2.364,113,2.769,114,2.544,115,2.544,116,3.071,117,3.071,118,3.071,119,1.56,120,1.56,121,5.015,122,1.704,123,3.528,124,3.528,125,3.528,126,3.616,127,2.965,128,2.965,129,1.511,130,5.015,131,2.806,132,5.015,133,2.965,134,5.015,135,3.528,136,3.528]],["title/interfaces/BaseValidationModel.html",[0,0.261,137,2.877]],["body/interfaces/BaseValidationModel.html",[0,0.312,2,1.159,3,0.141,4,0.141,5,0.124,7,0.272,8,0.658,10,0.295,11,0.014,12,0.182,14,1.409,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,35,0.807,39,0.874,65,1.947,100,2.911,105,2.407,106,2.662,128,2.814,137,4.905,138,4.141,139,7.189,140,3.048,141,7.189,142,1.778,143,5.346,144,4.141,145,5.346,146,6.143,147,4.758,148,2.297,149,3.856,150,2.297,151,6.143,152,4.758,153,4.821,154,4.758,155,3.188,156,2.528,157,4.141,158,4.141,159,3.431,160,4.758,161,4.758,162,4.758,163,3.735,164,4.758,165,4.758,166,4.758,167,3.735,168,1.937,169,6.143]],["title/interfaces/BgImage.html",[0,0.261,170,2.877]],["body/interfaces/BgImage.html",[0,0.313,2,1.166,3,0.142,4,0.142,5,0.125,7,0.273,8,0.661,10,0.253,11,0.014,12,0.142,14,1.201,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,35,0.808,39,0.875,41,0.843,42,3.871,48,2.21,63,0.489,70,2.311,72,2.412,105,2.422,106,2.679,128,4.261,155,3.208,170,5.195,171,3.757,172,3.757,173,6.175,174,1.722,175,4.447,176,2.543,177,3.451,178,3.647,179,3.757,180,4.166,181,3.452,182,4.166,183,1.948,184,2.029,185,1.948,186,2.32,187,2.679,188,2.21,189,4.166,190,5.195,191,4.166,192,4.166,193,3.452,194,4.166,195,3.757,196,4.166,197,4.166,198,3.452,199,4.166,200,4.166,201,5.367,202,5.938,203,4.166,204,4.166,205,4.166,206,4.166]],["title/directives/BgImageDirective.html",[174,1.007,187,2.233]],["body/directives/BgImageDirective.html",[0,0.288,3,0.131,4,0.131,5,0.114,7,0.251,8,0.625,10,0.24,11,0.014,12,0.131,14,0.774,15,0.007,16,0.007,17,0.007,18,0.007,19,0.007,20,0.007,25,1.472,30,1.321,31,1.274,33,0.896,34,0.896,35,0.493,37,1.033,39,0.852,41,0.774,42,4.376,48,2.692,63,0.449,70,2.122,72,2.281,78,1.324,101,1.149,105,2.224,106,2.459,128,2.599,155,2.945,170,5.486,171,5.694,172,3.45,173,5.137,174,1.652,175,4.719,176,2.335,177,3.901,178,4.122,179,3.45,180,3.825,181,3.169,182,3.825,183,1.789,184,1.863,185,1.789,186,2.462,187,3.263,188,2.029,189,3.825,190,5.027,191,5.696,192,5.076,193,4.719,194,5.696,195,5.472,196,3.825,197,3.825,198,3.169,199,3.825,200,3.825,201,5.076,202,5.696,203,3.825,204,3.825,205,3.825,206,3.825,207,1.863,208,2.335,209,1.789,210,1.789,211,3.449,212,3.825,213,5.832,214,4.395,215,4.395,216,1.789,217,1.863,218,1.943]],["title/interfaces/CenterPoint.html",[0,0.261,219,2.505]],["body/interfaces/CenterPoint.html",[0,0.479,2,1.218,3,0.149,4,0.149,5,0.13,7,0.285,8,0.679,10,0.31,11,0.014,12,0.207,15,0.008,16,0.008,17,0.008,18,0.008,19,0.01,20,0.008,35,0.866,44,1.81,46,1.68,57,2.12,88,2.957,90,2.308,129,1.507,142,2.177,219,3.98,220,3.605,221,4.638,222,4.638,223,5.747,224,5.747,225,5.747,226,2.175,227,2.957,228,3.35,229,3.924,230,3.35,231,3.924,232,2.53,233,2.12,234,3.35,235,3.138]],["title/injectables/ClaimsService.html",[66,1.081,71,2.877]],["body/injectables/ClaimsService.html",[3,0.107,4,0.107,5,0.094,7,0.205,8,0.545,10,0.263,11,0.014,12,0.107,14,1.337,15,0.006,16,0.006,17,0.006,18,0.006,19,0.006,20,0.006,25,1.283,30,1.33,31,1.282,33,1.306,34,1.431,35,0.719,37,1.507,39,0.692,41,0.633,44,2.135,46,2.153,48,2.347,49,2.128,50,2.983,63,0.367,65,1.377,66,1.377,67,1.591,69,3.405,70,2.455,71,5.06,72,2.307,74,3.358,77,2.572,84,3.487,87,3.487,90,1.661,100,1.989,101,0.941,109,5.132,110,3.133,111,2.824,112,3.951,113,4.628,114,2.595,115,4.621,116,3.132,117,3.132,118,3.132,119,1.591,120,1.591,122,1.737,126,3.666,129,1.777,131,2.845,133,3.007,140,1.525,226,2.253,236,5.201,237,3.132,238,5.897,239,5.085,240,5.085,241,5.085,242,4.937,243,5.085,244,3.598,245,5.897,246,5.897,247,6.761,248,3.598,249,5.085,250,5.085,251,5.085,252,3.598,253,5.085,254,6.409,255,3.598,256,3.598,257,3.598,258,3.598,259,3.598,260,3.598,261,3.598,262,3.598,263,3.598,264,3.598,265,3.598,266,3.132,267,2.824,268,5.085,269,3.598,270,3.3,271,3.598,272,3.598,273,2.128,274,3.598,275,3.598,276,3.598,277,3.598,278,3.598,279,3.598,280,3.991,281,1.591]],["title/classes/Color.html",[63,0.408,282,2.877]],["body/classes/Color.html",[3,0.087,4,0.087,5,0.076,7,0.167,8,0.468,10,0.315,11,0.014,12,0.13,14,1.095,15,0.005,16,0.005,17,0.005,18,0.005,19,0.005,20,0.005,25,1.104,30,1.452,31,1.4,33,1.185,34,1.185,35,0.652,37,1.232,39,0.513,63,0.299,65,1.185,78,0.882,105,1.48,107,2.049,110,3.089,142,2.148,149,2.745,150,1.412,156,1.554,216,2.755,217,2.869,218,2.992,226,1.636,281,2.57,282,4.192,283,1.73,284,2.546,285,5.239,286,7.114,287,6.191,288,5.239,289,5.239,290,5.239,291,5.239,292,5.239,293,5.239,294,6.529,295,5.239,296,4.374,297,4.374,298,4.374,299,4.374,300,5.813,301,4.374,302,2.925,303,2.925,304,2.925,305,4.374,306,2.925,307,4.374,308,2.925,309,3.433,310,2.925,311,2.925,312,5.239,313,2.925,314,4.374,315,2.925,316,2.925,317,4.374,318,2.925,319,5.813,320,2.925,321,4.374,322,2.925,323,2.925,324,2.745,325,2.925,326,2.546,327,2.546,328,2.925,329,2.925,330,2.925,331,2.296,332,2.925,333,4.374,334,2.925,335,2.546,336,5.239,337,5.813,338,2.925,339,5.239,340,2.925,341,2.925,342,2.925,343,2.925,344,2.925,345,2.925,346,2.925,347,2.925,348,2.925,349,4.374,350,2.925,351,2.925,352,2.324,353,2.925,354,2.925,355,4.374,356,2.925,357,1.523,358,2.925,359,2.925,360,2.925,361,4.374,362,5.813,363,4.374,364,2.925,365,2.925,366,2.925,367,2.925,368,2.925,369,4.374,370,2.925,371,2.925,372,2.925,373,2.925,374,2.925,375,2.296,376,2.925,377,2.925,378,2.546,379,2.925,380,2.925,381,2.925,382,2.925,383,2.925,384,5.239,385,2.925,386,4.559,387,2.925,388,2.925,389,3.433,390,2.925,391,2.925,392,2.296]],["title/injectables/CookiesService.html",[66,1.081,393,3.132]],["body/injectables/CookiesService.html",[3,0.101,4,0.101,5,0.089,7,0.194,10,0.235,11,0.014,12,0.101,14,1.383,15,0.006,16,0.006,17,0.006,18,0.006,19,0.008,20,0.006,25,1.234,30,1.306,31,1.327,33,1.166,34,1.405,35,0.642,37,1.557,39,0.4,41,0.6,44,1.771,46,1.145,48,2.641,49,2.014,50,1.723,57,1.444,63,0.348,66,1.324,67,1.506,69,1.81,74,3.359,78,1.724,84,3.383,86,4.256,88,2.014,100,1.913,101,1.496,110,3.772,114,2.456,119,1.506,120,1.506,122,2.361,127,2.014,129,2.077,133,2.014,142,1.278,216,2.805,226,1.528,233,2.425,270,1.906,273,2.014,281,1.506,352,1.81,357,1.422,393,4.907,394,2.964,395,4.89,396,4.89,397,4.49,398,5.409,399,6.613,400,4.89,401,4.89,402,4.256,403,4.89,404,6.252,405,4.89,406,5.721,407,5.721,408,6.62,409,4.256,410,5.721,411,6.252,412,3.406,413,3.406,414,5.441,415,4.907,416,3.406,417,4.508,418,4.89,419,3.406,420,3.406,421,3.406,422,3.406,423,2.138,424,3.406,425,4.89,426,4.979,427,4.89,428,5.721,429,5.721,430,5.721,431,3.406,432,3.406,433,3.406,434,3.406,435,3.406,436,3.406,437,2.673,438,3.406,439,1.81,440,3.406,441,2.673,442,2.964,443,5.721,444,3.406,445,3.406,446,3.406,447,3.406,448,3.406,449,3.406,450,3.406,451,3.406,452,3.406,453,3.406]],["title/directives/CopyToClipboardDirective.html",[174,1.007,454,2.36]],["body/directives/CopyToClipboardDirective.html",[3,0.146,4,0.146,5,0.128,7,0.281,10,0.202,11,0.014,12,0.146,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,30,1.311,31,1.263,39,0.578,41,0.867,63,0.503,107,1.927,129,1.485,174,1.745,176,2.618,183,2.005,184,2.089,185,2.005,186,2.602,207,2.089,209,2.005,210,2.005,211,3.715,216,2.005,217,2.089,218,2.178,281,3.057,357,1.433,454,3.715,455,6.338,456,4.288,457,7.283,458,4.529,459,6.916,460,3.553,461,2.757,462,5.467,463,4.927,464,4.09,465,4.927,466,3.553,467,4.288,468,4.209,469,4.927,470,4.927,471,3.302,472,3.715,473,4.927,474,4.927,475,4.288,476,4.927,477,4.927,478,4.927,479,4.927,480,4.927,481,4.927,482,3.553,483,4.927,484,4.927,485,4.927,486,4.927,487,4.927,488,4.927,489,4.927,490,4.927,491,4.927,492,4.927,493,4.927]],["title/classes/CustomValidators.html",[63,0.408,494,3.132]],["body/classes/CustomValidators.html",[3,0.055,4,0.055,5,0.048,7,0.105,10,0.26,11,0.014,12,0.055,14,1.411,15,0.003,16,0.003,17,0.003,18,0.003,19,0.012,20,0.003,25,0.766,26,5.167,30,1.198,31,1.285,33,1.288,34,1.349,35,0.743,37,1.486,39,0.629,46,1.511,48,3.162,57,3.073,63,0.188,65,1.712,84,3.738,85,1.444,87,4.385,90,1.789,110,3.94,111,4.961,113,2.383,114,4.773,128,2.942,129,1.614,131,4.02,137,3.242,140,1.287,143,3.913,144,1.602,145,4.33,148,0.889,157,3.372,158,4.33,159,1.327,167,3.041,173,1.444,216,1.236,217,1.287,232,1.536,233,1.906,270,3.537,283,1.088,352,0.978,398,2.383,414,6.453,423,1.155,439,1.613,494,2.383,495,5.639,496,1.602,497,3.036,498,3.036,499,1.906,500,3.036,501,3.372,502,3.372,503,3.372,504,3.372,505,3.913,506,3.372,507,3.372,508,3.372,509,3.372,510,1.84,511,6.361,512,3.036,513,3.036,514,3.036,515,3.036,516,3.036,517,7.765,518,3.036,519,3.036,520,3.036,521,3.036,522,3.036,523,3.875,524,7.309,525,1.84,526,6.85,527,6.947,528,5.92,529,5.92,530,5.92,531,6.48,532,6.619,533,6.947,534,3.875,535,1.84,536,3.875,537,1.84,538,3.875,539,1.84,540,3.875,541,5.355,542,1.84,543,3.529,544,4.496,545,4.496,546,3.913,547,4.496,548,3.875,549,5.355,550,3.875,551,1.84,552,5.761,553,3.036,554,3.036,555,4.496,556,4.496,557,4.496,558,4.496,559,4.496,560,3.913,561,4.496,562,3.875,563,1.84,564,2.642,565,3.875,566,1.84,567,3.036,568,3.036,569,3.036,570,3.036,571,3.036,572,3.036,573,3.036,574,3.036,575,3.036,576,3.875,577,3.529,578,1.84,579,1.699,580,1.84,581,1.84,582,1.602]],["title/injectables/DataService.html",[66,1.081,583,2.674]],["body/injectables/DataService.html",[3,0.134,4,0.134,5,0.117,7,0.257,10,0.243,11,0.014,12,0.134,15,0.007,16,0.007,17,0.007,18,0.007,19,0.007,20,0.007,25,1.496,30,1.123,31,1.083,33,1.208,34,1.208,35,0.665,37,1.394,39,0.696,41,0.793,63,0.46,65,1.906,66,1.605,67,1.991,105,2.279,106,2.52,119,1.991,120,1.991,168,2.865,226,1.852,281,3.112,357,1.723,583,3.972,584,3.707,585,3.92,586,5.927,587,5.927,588,5.927,589,7.768,590,6.008,591,4.504,592,4.274,593,5.927,594,4.504,595,5.158,596,4.504,597,4.504,598,5.927,599,4.504,600,4.504,601,4.504,602,7.508,603,2.175,604,4.504,605,5.927,606,5.927,607,3.92,608,4.504,609,4.504]],["title/injectables/DownloadService.html",[66,1.081,610,3.132]],["body/injectables/DownloadService.html",[3,0.154,4,0.154,5,0.135,7,0.295,8,0.694,10,0.266,11,0.014,12,0.154,14,1.245,15,0.009,16,0.009,17,0.009,18,0.009,19,0.009,20,0.009,25,1.635,30,1.341,31,1.292,33,1.055,34,1.055,35,0.581,37,1.217,39,0.607,41,0.911,44,1.874,63,0.529,66,1.755,67,2.288,78,2.132,84,3.06,101,1.353,112,3.468,119,2.288,120,2.288,128,4.515,129,1.56,131,2.896,270,3.626,610,5.086,611,4.504,612,7.074,613,6.48,614,6.48,615,5.175,616,6.48,617,5.175,618,5.175,619,5.175,620,5.175,621,5.175,622,5.175,623,5.175,624,5.175,625,5.175,626,5.175,627,4.504,628,5.175,629,5.175,630,5.175,631,5.175,632,5.175]],["title/interfaces/DropdownSettings.html",[0,0.261,633,3.132]],["body/interfaces/DropdownSettings.html",[0,0.226,2,0.839,3,0.102,4,0.102,5,0.09,7,0.197,8,0.528,10,0.338,11,0.014,12,0.102,14,1.468,15,0.006,16,0.006,17,0.006,18,0.006,19,0.006,20,0.006,35,0.946,142,1.939,226,2.597,584,1.928,590,4.933,633,3.87,634,2.999,635,6.285,636,6.285,637,6.285,638,5.47,639,5.47,640,5.47,641,5.47,642,6.285,643,6.285,644,6.285,645,6.285,646,6.285,647,6.285,648,5.47,649,6.285,650,6.285,651,5.47,652,5.47,653,5.47,654,5.47,655,6.285,656,5.47,657,5.47,658,6.285,659,6.285,660,6.285,661,5.47]],["title/interfaces/ErrorDetails.html",[0,0.261,662,2.877]],["body/interfaces/ErrorDetails.html",[0,0.379,2,1.409,3,0.172,4,0.172,5,0.15,7,0.33,8,0.743,10,0.285,11,0.014,12,0.206,14,1.387,15,0.01,16,0.01,17,0.01,18,0.01,19,0.01,20,0.01,39,0.679,148,2.792,159,5.556,352,3.073,577,6.047,662,5.002,663,3.073,664,3.63,665,4.539,666,6.706,667,4.17]],["title/injectables/ExternalScriptService.html",[66,1.081,668,3.132]],["body/injectables/ExternalScriptService.html",[3,0.14,4,0.14,5,0.123,7,0.269,10,0.193,11,0.014,12,0.14,14,1.38,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,25,1.54,30,1.157,31,1.115,33,0.96,34,0.96,35,0.528,37,1.108,39,0.553,41,0.829,44,1.706,46,2.275,50,2.383,63,0.481,65,1.276,66,1.653,67,2.083,69,2.503,70,2.947,78,2.04,101,1.232,119,2.083,120,2.083,128,2.786,131,3.415,140,3.036,233,2.587,357,1.775,560,4.1,668,5.966,669,5.892,670,5.892,671,4.1,672,6.103,673,6.103,674,6.103,675,6.103,676,4.711,677,6.103,678,7.419,679,4.711,680,3.697,681,4.711,682,4.711,683,4.711,684,4.711,685,3.697,686,3.397,687,5.312,688,6.103,689,6.103,690,4.711,691,4.711,692,4.1,693,3.697,694,4.711,695,4.711,696,4.711,697,4.711]],["title/classes/FacebookSDKConfig.html",[63,0.408,698,2.877]],["body/classes/FacebookSDKConfig.html",[3,0.154,4,0.154,5,0.135,7,0.297,8,0.696,10,0.267,11,0.014,12,0.154,15,0.009,16,0.009,17,0.009,18,0.009,19,0.009,20,0.009,30,1.408,31,1.357,33,1.325,34,1.325,35,0.729,37,1.222,39,0.61,63,0.531,65,1.408,72,2.773,74,2.873,77,3.287,78,1.566,100,2.542,101,1.359,122,2.51,283,3.074,698,4.685,699,6.653,700,4.08,701,6.169,702,7.173,703,5.655,704,4.524,705,4.524,706,4.524,707,4.524,708,4.524,709,4.524,710,4.524,711,5.655,712,4.524,713,4.524]],["title/modules/FacebookSDKModule.html",[21,1.624,714,3.132]],["body/modules/FacebookSDKModule.html",[3,0.146,4,0.146,5,0.128,10,0.202,11,0.014,12,0.186,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,23,2.487,25,1.241,26,4.204,27,3.859,29,5.712,30,0.932,31,0.898,33,1.002,34,1.002,35,0.552,37,1.156,38,5.423,39,0.811,40,4.072,41,0.865,44,1.78,45,3.859,46,1.652,50,2.487,52,3.545,53,2.907,55,3.295,56,3.859,59,2.612,60,3.859,61,3.029,62,2.612,63,0.641,64,3.859,65,1.332,168,2.553,232,2.487,233,2.084,399,4.279,685,4.924,714,5.712,715,4.523,716,4.279,717,6.273,718,4.917,719,6.273,720,4.523,721,4.279,722,4.279,723,4.279,724,4.523,725,4.917,726,4.917,727,4.917,728,4.917,729,4.917,730,4.917]],["title/injectables/FacebookSDKService.html",[66,1.081,720,2.877]],["body/injectables/FacebookSDKService.html",[3,0.094,4,0.094,5,0.083,7,0.182,8,0.498,10,0.226,11,0.014,12,0.138,14,0.819,15,0.005,16,0.005,17,0.005,18,0.005,19,0.008,20,0.005,25,1.175,30,1.318,31,1.27,33,0.949,34,0.949,35,0.522,37,1.294,39,0.756,41,0.56,44,1.993,46,1.564,48,2.148,49,1.881,63,0.325,65,1.49,66,1.26,67,1.406,69,1.69,72,2.633,74,3.152,77,2.354,78,0.959,79,2.497,81,4.044,90,1.469,100,1.82,101,0.832,103,2.132,104,3.119,107,2.52,119,1.406,120,1.406,122,1.536,126,2.294,127,1.881,129,1.942,133,1.881,140,1.349,149,4.225,150,2.247,168,1.894,216,1.295,217,1.349,218,1.406,232,2.354,233,1.973,270,1.78,357,1.353,392,4.319,437,2.497,464,3.254,472,2.752,579,1.78,603,1.536,685,4.319,686,3.968,693,2.497,698,4.646,710,4.789,715,5.14,720,3.356,724,2.294,731,2.294,732,4.789,733,4.319,734,5.503,735,5.27,736,5.27,737,2.769,738,3.181,739,3.181,740,2.769,741,4.654,742,3.181,743,2.769,744,3.181,745,2.769,746,2.769,747,3.356,748,3.181,749,3.181,750,2.769,751,3.968,752,2.769,753,3.181,754,4.05,755,2.769,756,4.05,757,3.181,758,2.769,759,3.181,760,2.769,761,3.181,762,2.769,763,2.769,764,2.769,765,2.769,766,2.769,767,2.769,768,2.769,769,3.653,770,3.181,771,3.181,772,3.181,773,3.181,774,3.181,775,3.181,776,3.181,777,3.181,778,2.769,779,3.181,780,3.181,781,3.181,782,3.181,783,3.181,784,2.769,785,3.181,786,2.132,787,3.181,788,2.132,789,3.181,790,1.78,791,3.181,792,3.181,793,3.181,794,3.181,795,3.181,796,3.181,797,3.181,798,3.181,799,2.769,800,2.497,801,3.181,802,2.497,803,2.769,804,2.769,805,2.769,806,2.769,807,2.769,808,2.294,809,2.769,810,2.769,811,2.294,812,3.181,813,2.769,814,2.769,815,3.181,816,2.769,817,2.769,818,2.769,819,2.769,820,2.769,821,2.769,822,2.769,823,3.181,824,3.181,825,4.654]],["title/interfaces/FacebookUserProfile.html",[0,0.261,747,2.877]],["body/interfaces/FacebookUserProfile.html",[0,0.354,2,1.319,3,0.161,4,0.161,5,0.141,7,0.309,8,0.714,10,0.323,11,0.014,12,0.161,14,1.466,15,0.009,16,0.009,17,0.009,18,0.009,19,0.009,20,0.009,35,0.884,140,3.194,142,1.887,747,4.804,784,6.556,786,5.048,788,5.048,790,4.215,826,4.71,827,5.432]],["title/interfaces/FilterSettings.html",[0,0.261,828,3.132]],["body/interfaces/FilterSettings.html",[0,0.297,2,1.106,3,0.135,4,0.135,5,0.118,7,0.259,8,0.638,10,0.333,11,0.014,12,0.135,14,1.475,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,35,0.939,142,1.738,226,2.458,590,5.541,638,6.144,639,6.144,640,6.144,641,6.144,648,6.144,651,6.144,652,6.144,653,6.144,654,6.144,656,6.144,657,6.144,661,6.144,828,4.675,829,3.273,830,3.95]],["title/directives/FinishTypingDirective.html",[174,1.007,831,2.36]],["body/directives/FinishTypingDirective.html",[3,0.139,4,0.139,5,0.122,7,0.268,8,0.652,10,0.294,11,0.014,12,0.139,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,25,1.536,30,1.404,31,1.354,33,0.956,34,0.956,35,0.526,37,1.103,39,0.551,41,0.826,63,0.479,70,2.265,78,1.414,101,1.227,107,1.835,174,1.705,177,4.001,178,4.229,183,1.91,184,1.989,185,1.91,186,2.542,188,2.166,193,4.872,207,1.989,208,2.493,209,1.91,210,1.91,375,3.683,458,4.389,464,4.229,472,3.6,831,3.6,832,6.608,833,4.083,834,3.996,835,6.087,836,6.757,837,5.304,838,4.229,839,5.881,840,3.683,841,6.087,842,4.778,843,4.692,844,4.692,845,6.087,846,4.692,847,4.778,848,4.083,849,4.083,850,6.087,851,4.692,852,2.945,853,4.083]],["title/interfaces/FsDocument.html",[0,0.261,854,2.674]],["body/interfaces/FsDocument.html",[0,0.415,2,1.218,3,0.149,4,0.149,5,0.13,7,0.285,8,0.679,10,0.317,11,0.014,12,0.188,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,35,0.916,101,2.019,156,4.102,854,4.249,855,3.924,856,3.924,857,3.924,858,5.518,859,6.373,860,6.373,861,6.373,862,6.373,863,6.373,864,6.373,865,5.777,866,4.977,867,3.35,868,3.924,869,4.351,870,3.924,871,4.351]],["title/interfaces/FsDocumentElement.html",[0,0.261,867,2.674]],["body/interfaces/FsDocumentElement.html",[0,0.431,2,1.292,3,0.158,4,0.158,5,0.138,7,0.303,8,0.705,10,0.294,11,0.014,12,0.195,15,0.009,16,0.009,17,0.009,18,0.009,19,0.009,20,0.009,35,0.879,101,2.049,156,4.164,854,3.554,855,4.162,856,4.162,857,4.162,858,4.615,859,4.615,860,4.615,861,4.615,862,4.615,863,4.615,864,4.615,865,5.158,866,5.164,867,4.409,868,5.164,869,6.509,870,5.87,871,6.509]],["title/injectables/FullscreenService.html",[66,1.081,872,3.132]],["body/injectables/FullscreenService.html",[0,0.196,3,0.089,4,0.089,5,0.078,7,0.171,8,0.476,10,0.183,11,0.014,12,0.089,15,0.005,16,0.005,17,0.005,18,0.005,19,0.005,20,0.005,25,1.123,30,1.292,31,1.28,33,0.61,34,0.61,35,0.336,37,1.382,39,0.522,41,0.527,44,2.128,46,1.005,48,3.362,49,2.63,50,1.514,63,0.306,65,0.81,66,1.205,67,1.323,69,1.59,72,2.077,74,1.966,77,2.25,78,1.6,87,3.14,100,1.74,101,1.782,119,1.323,120,1.323,122,1.445,129,1.34,226,2.057,357,1.709,397,3.491,398,3.491,439,1.59,441,2.348,442,2.604,468,2.005,579,3.289,854,2.005,867,2.005,870,2.348,872,5.168,873,2.604,874,3.207,875,4.448,876,4.167,877,7.004,878,7.004,879,7.004,880,4.448,881,5.309,882,4.448,883,4.448,884,5.309,885,5.878,886,4.239,887,4.614,888,5.309,889,2.992,890,4.448,891,4.448,892,3.828,893,2.992,894,2.992,895,2.992,896,2.992,897,2.992,898,2.992,899,2.992,900,2.992,901,2.604,902,2.992,903,2.992,904,4.448,905,2.992,906,2.992,907,4.931,908,4.448,909,4.448,910,4.448,911,5.116,912,7.157,913,4.448,914,4.448,915,5.878,916,5.878,917,5.878,918,4.448,919,4.448,920,4.448,921,4.448,922,5.878,923,2.992,924,5.878,925,2.992,926,2.992,927,2.992,928,4.448,929,2.604,930,4.448,931,4.448,932,4.448,933,4.448,934,2.992,935,4.448,936,4.448,937,4.448,938,4.448,939,2.992,940,2.992,941,2.992]],["title/classes/GoogleClientConfig.html",[63,0.408,942,2.674]],["body/classes/GoogleClientConfig.html",[0,0.393,3,0.178,4,0.178,5,0.156,11,0.013,12,0.211,14,1.42,15,0.01,16,0.01,17,0.01,18,0.01,19,0.01,20,0.01,63,0.613,140,2.545,188,2.772,208,3.19,283,3.55,786,4.023,788,4.023,790,3.36,827,4.329,942,4.753,943,4.712,944,4.023,945,4.712,946,4.712]],["title/classes/GoogleSDKConfig.html",[63,0.408,947,2.877]],["body/classes/GoogleSDKConfig.html",[3,0.156,4,0.156,5,0.136,7,0.299,8,0.7,10,0.268,11,0.014,12,0.156,15,0.009,16,0.009,17,0.009,18,0.009,19,0.009,20,0.009,30,1.412,31,1.361,33,1.332,34,1.332,35,0.733,37,1.233,63,0.536,65,1.42,72,2.784,74,2.889,77,3.305,78,1.58,100,2.556,101,1.371,122,2.532,283,3.101,700,4.116,701,6.194,702,6.67,703,5.686,704,4.564,705,4.564,706,4.564,707,4.564,708,4.564,709,4.564,711,5.686,712,4.564,713,4.564,946,6.221,947,4.711,948,6.67]],["title/modules/GoogleSDKModule.html",[21,1.624,949,3.132]],["body/modules/GoogleSDKModule.html",[3,0.142,4,0.142,5,0.124,10,0.196,11,0.014,12,0.183,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,23,2.417,25,1.206,26,4.127,27,3.75,29,5.651,30,0.906,31,0.873,33,0.974,34,0.974,35,0.536,37,1.123,38,5.35,39,0.8,40,4.029,41,0.841,44,1.73,45,3.75,46,1.605,50,2.417,52,3.445,53,2.825,55,3.201,56,3.75,59,2.538,60,3.75,61,2.974,62,2.538,63,0.629,64,3.75,65,1.294,232,2.417,233,2.025,716,4.158,721,4.158,722,4.158,723,4.158,790,2.673,800,3.75,949,5.651,950,4.441,951,6.159,952,4.777,953,6.159,954,4.441,955,5.36,956,4.441,957,4.777,958,4.777,959,4.777,960,4.158]],["title/injectables/GoogleSDKService.html",[66,1.081,954,2.877]],["body/injectables/GoogleSDKService.html",[3,0.09,4,0.09,5,0.079,7,0.173,8,0.48,10,0.243,11,0.014,12,0.133,14,0.789,15,0.005,16,0.005,17,0.005,18,0.005,19,0.007,20,0.005,25,1.131,30,1.384,31,1.334,33,1.089,34,1.089,35,0.599,37,1.389,39,0.741,41,0.532,44,1.934,46,1.506,48,1.395,49,1.787,63,0.309,65,1.709,66,1.214,67,1.336,69,1.606,72,2.933,74,3.024,77,2.267,78,0.911,79,2.372,81,3.96,90,1.395,100,2.311,101,1.172,103,2.025,104,3.003,107,2.468,119,1.336,120,1.336,122,2.164,126,2.179,127,1.787,129,1.901,133,1.787,140,1.281,149,4.148,150,2.164,168,1.824,216,1.23,217,1.281,218,1.336,232,2.267,233,2.264,234,3.003,270,1.691,357,1.553,392,4.192,437,2.372,464,3.159,472,2.65,579,1.691,686,2.179,693,2.372,731,2.179,732,4.648,733,4.192,735,5.141,736,5.141,737,2.631,740,2.631,743,2.631,745,2.631,746,2.631,750,2.631,751,3.851,754,3.9,755,2.631,756,3.9,758,2.631,760,2.631,762,2.631,763,2.631,764,2.631,765,2.631,766,2.631,767,2.631,768,2.631,769,3.518,786,2.025,788,2.025,790,1.691,802,2.372,803,2.631,804,2.631,805,2.631,806,2.631,807,2.631,808,2.179,809,2.631,810,2.631,811,2.179,813,2.631,814,2.631,816,2.631,817,2.631,818,2.631,819,2.631,820,2.631,821,2.631,822,2.631,827,2.179,942,3.959,944,3.003,945,2.372,947,4.549,950,5.341,954,3.232,955,4.648,956,2.179,960,2.631,961,5.341,962,5.341,963,5.341,964,3.023,965,3.023,966,3.023,967,6.309,968,3.023,969,4.482,970,3.023,971,3.023,972,3.023,973,3.023,974,3.023,975,3.023,976,3.023,977,2.631,978,3.023,979,4.482,980,3.023,981,3.023,982,3.023,983,3.023,984,3.023,985,3.023,986,3.023,987,3.023,988,3.023,989,3.023,990,3.023,991,3.023,992,3.023,993,3.023,994,3.023,995,3.023,996,4.482,997,3.023,998,3.023,999,3.023,1000,3.023,1001,3.023,1002,3.023,1003,4.482,1004,3.023]],["title/interfaces/GoogleUserProfile.html",[0,0.261,944,2.674]],["body/interfaces/GoogleUserProfile.html",[0,0.349,2,1.298,3,0.158,4,0.158,5,0.139,7,0.304,8,0.707,10,0.322,11,0.014,12,0.196,14,1.474,15,0.009,16,0.009,17,0.009,18,0.009,19,0.009,20,0.009,35,0.88,63,0.544,140,3.176,188,2.459,786,5.02,788,5.02,790,4.192,827,5.401,942,3.57,943,4.181,944,4.421,945,5.879,946,4.181]],["title/directives/GrowOnInputDirective.html",[174,1.007,1005,1.927]],["body/directives/GrowOnInputDirective.html",[3,0.131,4,0.131,5,0.115,7,0.251,8,0.625,10,0.24,11,0.014,12,0.131,15,0.007,16,0.007,17,0.007,18,0.007,19,0.007,20,0.007,25,1.474,30,1.376,31,1.326,33,1.19,34,1.19,35,0.655,37,1.54,39,0.769,41,0.775,63,0.45,65,1.193,70,2.126,72,1.722,78,1.327,101,1.713,148,2.126,150,2.126,174,1.653,177,3.904,178,4.126,183,1.792,184,1.867,185,1.792,186,2.465,188,2.033,207,1.867,208,2.34,209,1.792,210,1.792,273,2.604,357,1.698,471,2.951,834,3.874,837,5.142,838,4.126,840,3.456,842,4.583,847,4.583,849,3.832,1005,2.819,1006,6.493,1007,3.832,1008,4.39,1009,5.839,1010,5.839,1011,4.675,1012,6.551,1013,5.839,1014,5.839,1015,4.403,1016,4.403,1017,4.403,1018,4.403,1019,3.832,1020,3.175,1021,5.839,1022,6.551,1023,4.403,1024,4.403,1025,4.403,1026,4.403,1027,4.403,1028,5.839,1029,4.403,1030,3.456,1031,4.403]],["title/interfaces/IDimensions.html",[0,0.261,1032,2.877]],["body/interfaces/IDimensions.html",[0,0.331,2,1.231,3,0.15,4,0.15,5,0.131,7,0.288,8,0.684,10,0.332,11,0.014,12,0.15,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,142,2.212,1032,4.603,1033,2.828,1034,4.398,1035,5.77,1036,5.77,1037,6.398,1038,6.398,1039,6.398,1040,5.77,1041,6.398,1042,5.77,1043,7.351,1044,6.398]],["title/interfaces/IPageInfo.html",[0,0.261,1045,2.674]],["body/interfaces/IPageInfo.html",[0,0.351,2,1.307,3,0.159,4,0.159,5,0.14,7,0.306,8,0.71,10,0.327,11,0.014,12,0.159,15,0.009,16,0.009,17,0.009,18,0.009,19,0.009,20,0.009,142,2.201,1033,3.001,1040,5.893,1045,4.44,1046,4.668,1047,6.535,1048,6.535,1049,6.535,1050,6.535,1051,6.535,1052,6.535]],["title/interfaces/IViewport.html",[0,0.261,1053,2.877]],["body/interfaces/IViewport.html",[0,0.382,2,1.423,3,0.173,4,0.173,5,0.152,7,0.333,8,0.747,10,0.287,11,0.014,12,0.173,15,0.01,16,0.01,17,0.01,18,0.01,19,0.01,20,0.01,39,0.686,142,2.096,857,4.584,866,4.584,1033,3.268,1042,6.067,1045,5.18,1053,5.031,1054,5.083,1055,6.067]],["title/interfaces/LatLng.html",[0,0.261,227,2.36]],["body/interfaces/LatLng.html",[0,0.49,2,1.292,3,0.158,4,0.158,5,0.138,7,0.303,8,0.705,10,0.27,11,0.014,12,0.212,15,0.009,16,0.009,17,0.009,18,0.009,19,0.011,20,0.009,44,1.92,46,1.782,57,2.248,88,3.136,90,2.448,129,1.598,142,2.167,219,3.329,220,3.824,221,4.698,222,4.698,223,4.162,224,4.162,225,4.162,226,1.657,227,3.891,228,3.554,229,4.162,230,3.554,231,4.162,232,2.683,233,2.248,234,3.554,235,3.329]],["title/interfaces/LatLng2LatLngOptions.html",[0,0.261,235,2.505]],["body/interfaces/LatLng2LatLngOptions.html",[0,0.49,2,1.298,3,0.158,4,0.158,5,0.139,7,0.304,8,0.707,10,0.271,11,0.014,12,0.213,15,0.009,16,0.009,17,0.009,18,0.009,19,0.011,20,0.009,44,1.929,46,1.79,57,2.258,88,3.15,90,2.459,129,1.605,142,2.132,219,3.344,220,3.841,221,4.43,222,4.43,223,4.181,224,4.181,225,4.181,226,1.664,227,3.15,228,3.57,229,4.181,230,3.57,231,4.181,232,2.695,233,2.258,234,3.57,235,4.141,352,3.98,423,4.702]],["title/classes/LeafletMap.html",[63,0.408,1056,3.132]],["body/classes/LeafletMap.html",[3,0.076,4,0.076,5,0.067,7,0.147,8,0.425,10,0.293,11,0.014,12,0.076,15,0.004,16,0.004,17,0.004,18,0.004,19,0.004,20,0.004,25,1.001,30,1.372,31,1.322,33,1.266,34,1.266,35,0.697,37,1.461,39,0.805,61,1.242,63,0.263,65,1.592,78,0.775,81,2.49,85,2.018,101,1.266,105,1.301,106,1.439,107,1.894,110,3.3,140,2.052,142,1.266,153,4.614,168,2.215,183,1.047,184,1.09,185,1.047,216,1.614,217,1.681,218,1.753,219,3.899,221,2.345,222,2.345,226,1.512,227,3.828,281,2.406,283,1.521,331,3.113,357,1.994,439,2.891,579,1.439,603,1.915,800,2.018,886,2.86,892,1.854,1055,3.113,1056,3.113,1057,2.238,1058,4.841,1059,4.841,1060,4.841,1061,5.442,1062,3.966,1063,3.966,1064,5.442,1065,3.966,1066,3.966,1067,3.966,1068,4.162,1069,2.572,1070,3.966,1071,2.572,1072,3.966,1073,2.572,1074,5.442,1075,2.572,1076,2.572,1077,3.113,1078,3.491,1079,3.113,1080,3.966,1081,3.966,1082,3.113,1083,3.966,1084,3.113,1085,4.271,1086,3.8,1087,3.113,1088,3.113,1089,3.966,1090,3.452,1091,3.113,1092,3.113,1093,3.113,1094,3.966,1095,2.572,1096,3.966,1097,2.572,1098,3.966,1099,2.572,1100,3.966,1101,3.939,1102,5.442,1103,2.572,1104,2.572,1105,3.966,1106,6.212,1107,5.406,1108,6.212,1109,6.212,1110,2.572,1111,3.966,1112,6.212,1113,2.572,1114,2.018,1115,1.854,1116,2.86,1117,3.113,1118,2.572,1119,1.723,1120,2.018,1121,2.572,1122,2.572,1123,2.572,1124,2.572,1125,2.572,1126,2.572,1127,2.572,1128,4.841,1129,2.572,1130,2.572,1131,2.572,1132,2.572,1133,2.572,1134,2.572,1135,2.572,1136,2.572,1137,2.572,1138,3.966,1139,2.572,1140,2.572,1141,2.572,1142,2.572,1143,2.572,1144,2.572,1145,2.572,1146,2.572,1147,2.572,1148,2.572,1149,2.572,1150,3.8,1151,3.491,1152,3.8,1153,2.572,1154,2.572,1155,2.572,1156,2.572,1157,3.113,1158,3.966,1159,3.966,1160,3.966,1161,3.966,1162,3.966,1163,2.572,1164,3.966,1165,2.572,1166,2.572,1167,2.572,1168,2.572,1169,3.966,1170,2.572,1171,2.572,1172,2.572,1173,2.572,1174,2.572,1175,2.572,1176,2.572,1177,4.841,1178,3.966,1179,2.572,1180,2.572,1181,2.572,1182,2.572,1183,2.572,1184,2.572,1185,2.572,1186,2.572,1187,2.572,1188,2.572]],["title/interfaces/LeafletMapOptions.html",[0,0.261,1068,2.674]],["body/interfaces/LeafletMapOptions.html",[0,0.389,2,1.101,3,0.134,4,0.134,5,0.118,7,0.258,8,0.636,10,0.323,11,0.014,12,0.176,14,1.168,15,0.007,16,0.007,17,0.007,18,0.007,19,0.007,20,0.007,35,0.919,39,0.779,81,2.838,142,2.003,221,2.674,222,2.674,226,1.856,352,3.994,423,4.718,439,3.157,886,3.26,892,5.28,1068,3.982,1077,5.533,1078,3.26,1079,5.533,1082,5.747,1084,5.533,1085,5.747,1087,5.533,1088,3.549,1091,3.549,1092,5.533,1101,3.03,1114,3.549,1115,3.26,1116,3.26,1117,3.549,1150,3.549,1151,4.284,1152,3.549,1189,3.549,1190,6.135,1191,5.776,1192,5.776,1193,5.776,1194,5.776,1195,3.935]],["title/interfaces/LeafletPadding.html",[0,0.261,1101,2.674]],["body/interfaces/LeafletPadding.html",[0,0.421,2,1.247,3,0.152,4,0.152,5,0.133,7,0.292,8,0.689,10,0.264,11,0.014,12,0.191,14,0.901,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,35,0.829,39,0.826,81,3.213,142,2.061,221,3.027,222,3.027,226,2.01,352,3.924,423,4.636,439,3.419,886,3.691,892,4.641,1068,3.43,1077,4.018,1078,3.691,1079,4.018,1082,5.051,1084,4.018,1085,5.051,1087,4.018,1088,4.018,1091,4.018,1092,4.018,1101,4.313,1114,4.018,1115,3.691,1116,3.691,1117,4.018,1150,5.797,1151,4.641,1152,5.797,1189,4.018,1190,4.455,1191,4.455,1192,4.455,1193,4.455,1194,4.455,1195,4.455]],["title/directives/LongPressDirective.html",[174,1.007,1196,2.36]],["body/directives/LongPressDirective.html",[3,0.084,4,0.084,5,0.073,7,0.161,8,0.455,10,0.289,11,0.014,12,0.084,15,0.005,16,0.005,17,0.005,18,0.005,19,0.005,20,0.005,25,1.072,30,1.472,31,1.419,33,0.574,34,0.574,35,0.316,37,1.203,39,0.33,41,0.495,63,0.287,65,1.544,72,2.976,101,1.338,107,2.23,129,1.28,142,1.49,168,1.729,174,1.072,176,2.257,186,1.598,198,4.412,207,1.193,209,1.145,210,1.145,211,2.512,216,1.145,217,1.193,218,1.244,226,1.781,281,1.878,375,3.334,458,3.063,460,2.029,461,2.377,464,4.417,466,2.029,467,4.454,468,5.138,471,1.886,472,3.619,603,3.225,852,2.666,1196,2.512,1197,6.797,1198,2.449,1199,5.118,1200,5.118,1201,5.118,1202,5.118,1203,5.118,1204,4.454,1205,5.701,1206,5.701,1207,3.697,1208,5.118,1209,5.118,1210,5.118,1211,5.118,1212,5.118,1213,2.029,1214,4.248,1215,4.248,1216,4.248,1217,4.248,1218,4.248,1219,2.814,1220,2.814,1221,2.814,1222,2.814,1223,2.814,1224,2.029,1225,2.814,1226,2.814,1227,2.814,1228,7.038,1229,6.877,1230,2.814,1231,2.814,1232,2.814,1233,2.814,1234,2.814,1235,2.814,1236,2.814,1237,4.248,1238,2.814,1239,2.814,1240,2.814,1241,2.814,1242,2.814,1243,2.814,1244,1.886,1245,2.814,1246,2.814,1247,6.12,1248,2.814,1249,6.877,1250,2.814,1251,2.814,1252,2.814,1253,4.248,1254,4.248,1255,4.248,1256,2.814,1257,5.701,1258,4.248,1259,5.701,1260,4.248,1261,4.248,1262,4.248,1263,4.248,1264,2.814,1265,5.118,1266,2.814,1267,2.814,1268,2.814,1269,2.449,1270,4.248,1271,2.814,1272,2.814,1273,2.814,1274,2.814,1275,2.814,1276,2.814,1277,2.814,1278,2.814,1279,2.814,1280,2.814,1281,5.701,1282,5.701,1283,4.961,1284,2.814]],["title/injectables/MapService.html",[66,1.081,1285,3.132]],["body/injectables/MapService.html",[3,0.095,4,0.095,5,0.083,7,0.182,10,0.249,11,0.014,12,0.095,15,0.005,16,0.005,17,0.005,18,0.005,19,0.005,20,0.005,25,1.176,30,1.222,31,1.271,33,1.235,34,1.235,35,0.68,37,1.516,39,0.646,41,0.561,46,1.565,50,1.612,63,0.325,65,1.492,66,1.262,67,1.408,69,1.693,84,1.884,101,0.833,107,1.246,110,2.475,119,1.408,120,1.408,127,2.755,131,3.082,142,2.001,149,4.047,150,1.538,183,1.297,184,1.351,185,1.896,221,3.257,222,3.812,226,0.995,227,2.755,233,2.855,234,2.135,235,4.227,281,1.408,324,2,327,2.773,331,2.5,357,0.926,389,5.06,397,3.656,439,2.475,511,4.054,546,4.054,603,1.538,769,2.5,802,3.656,1061,3.359,1093,5.06,1285,3.656,1286,2.773,1287,4.659,1288,4.659,1289,4.659,1290,6.059,1291,4.659,1292,4.659,1293,3.186,1294,6.447,1295,6.059,1296,4.659,1297,4.659,1298,5.507,1299,3.186,1300,2.773,1301,4.659,1302,3.186,1303,4.659,1304,4.659,1305,4.054,1306,4.659,1307,4.659,1308,3.186,1309,4.659,1310,4.659,1311,4.054,1312,4.659,1313,4.659,1314,4.659,1315,3.186,1316,4.054,1317,4.659,1318,3.186,1319,3.656,1320,4.659,1321,4.659,1322,3.186,1323,3.186,1324,3.186,1325,3.186,1326,3.186,1327,3.186,1328,3.186,1329,3.186,1330,3.186,1331,4.659,1332,3.186,1333,2.5,1334,2.773,1335,3.186,1336,3.186,1337,3.186,1338,3.186,1339,3.186,1340,3.186,1341,3.186,1342,3.186,1343,3.186,1344,6.956,1345,3.186,1346,2.297,1347,4.659,1348,4.659,1349,6.734,1350,3.186,1351,3.186,1352,4.659,1353,4.659,1354,3.186,1355,3.186,1356,3.186,1357,2.5,1358,3.186]],["title/interfaces/OpenIdClient.html",[0,0.261,1359,2.877]],["body/interfaces/OpenIdClient.html",[0,0.463,2,1.258,3,0.153,4,0.153,5,0.134,7,0.295,8,0.693,10,0.313,11,0.014,12,0.192,14,1.463,15,0.009,16,0.009,17,0.009,18,0.009,19,0.011,20,0.009,35,0.873,44,1.87,46,1.735,87,3.054,88,3.054,90,2.384,112,3.46,115,3.723,140,3.235,226,1.613,228,3.46,230,3.46,236,3.723,242,4.336,543,4.053,1359,4.666,1360,4.053,1361,4.053,1362,6.448,1363,6.448,1364,6.448,1365,6.448,1366,4.494,1367,4.494,1368,4.494]],["title/interfaces/OpenIdData.html",[0,0.261,242,2.674]],["body/interfaces/OpenIdData.html",[0,0.475,2,1.337,3,0.163,4,0.163,5,0.143,7,0.313,8,0.72,10,0.276,11,0.014,12,0.2,14,1.422,15,0.009,16,0.009,17,0.009,18,0.009,19,0.011,20,0.009,44,1.987,46,1.844,87,3.245,88,3.245,90,2.533,112,3.677,115,3.957,140,2.849,226,2.269,228,3.677,230,3.677,236,3.957,242,4.867,543,4.307,1359,3.957,1360,4.307,1361,4.307,1362,4.776,1363,4.776,1364,4.776,1365,4.776,1366,4.776,1367,6.587,1368,6.587]],["title/components/PinInputComponent.html",[1369,2.505,1370,2.019]],["body/components/PinInputComponent.html",[3,0.067,4,0.067,5,0.059,7,0.13,8,0.386,10,0.296,11,0.014,12,0.067,14,0.976,15,0.004,16,0.004,17,0.004,18,0.004,19,0.004,20,0.004,25,0.909,30,1.463,31,1.41,33,1.346,34,1.346,35,0.774,37,1.675,39,0.525,41,0.4,55,2.413,57,1.896,61,1.738,63,0.232,65,1.736,72,2.307,100,2.169,101,1.768,105,1.15,106,1.272,129,0.685,142,1.616,148,1.097,163,2.826,168,2.257,176,3.134,177,1.272,184,1.896,186,2.874,187,1.272,188,1.049,208,1.207,209,0.925,210,0.925,211,2.129,216,2.516,217,2.62,218,2.732,226,1.589,232,1.15,273,1.344,281,1.977,352,2.376,357,1.479,417,3.224,454,1.344,461,1.272,499,1.426,579,1.272,603,2.848,831,1.344,852,1.426,907,3.51,1005,1.097,1008,2.996,1011,3.409,1196,1.344,1213,1.638,1224,1.638,1244,1.523,1300,1.978,1333,1.783,1369,2.26,1370,2.984,1371,1.783,1372,1.426,1373,1.978,1374,1.978,1375,6.749,1376,1.978,1377,3.892,1378,4.472,1379,4.472,1380,3.6,1381,3.892,1382,3.6,1383,4.826,1384,3.6,1385,3.6,1386,4.472,1387,4.472,1388,4.472,1389,5.087,1390,3.6,1391,5.087,1392,4.427,1393,3.6,1394,3.133,1395,3.6,1396,3.6,1397,3.6,1398,4.472,1399,3.6,1400,3.6,1401,3.6,1402,3.6,1403,4.472,1404,4.472,1405,4.472,1406,3.6,1407,3.6,1408,2.272,1409,2.272,1410,2.272,1411,2.272,1412,3.6,1413,2.272,1414,2.272,1415,2.272,1416,2.272,1417,2.272,1418,2.272,1419,1.978,1420,2.272,1421,2.272,1422,3.6,1423,2.272,1424,2.272,1425,3.6,1426,2.272,1427,2.272,1428,2.272,1429,2.272,1430,3.6,1431,2.272,1432,2.272,1433,2.272,1434,2.272,1435,3.6,1436,2.272,1437,2.272,1438,3.6,1439,2.272,1440,4.472,1441,1.978,1442,3.6,1443,2.272,1444,2.272,1445,2.272,1446,2.272,1447,2.272,1448,2.272,1449,1.783,1450,2.272,1451,2.272,1452,2.272,1453,2.272,1454,2.272,1455,1.783,1456,1.783,1457,2.272,1458,2.272,1459,2.272,1460,2.272,1461,2.272,1462,2.272,1463,2.272,1464,2.272,1465,2.272,1466,2.272,1467,2.272,1468,1.978,1469,2.272,1470,2.272,1471,2.272,1472,2.272,1473,2.272,1474,2.272,1475,1.978,1476,2.272,1477,2.272,1478,2.272,1479,2.272,1480,2.272,1481,2.272,1482,4.472,1483,4.472,1484,2.272,1485,2.272,1486,1.978,1487,3.133,1488,3.133,1489,1.978,1490,1.978,1491,4.427,1492,1.978,1493,1.783,1494,1.207,1495,1.978,1496,1.978,1497,3.133,1498,1.523,1499,1.978,1500,1.15,1501,1.978,1502,1.523,1503,1.978,1504,1.523,1505,1.638,1506,1.783,1507,1.978,1508,1.978,1509,1.978,1510,1.978,1511,1.978,1512,1.978,1513,1.207,1514,2.996,1515,1.978,1516,1.207,1517,1.523,1518,3.133,1519,1.207,1520,1.097,1521,1.978,1522,1.097,1523,1.978,1524,1.049,1525,1.978,1526,1.344,1527,1.978,1528,1.344,1529,1.783,1530,1.978]],["title/injectables/PrefersColorSchemeService.html",[66,1.081,1531,3.132]],["body/injectables/PrefersColorSchemeService.html",[3,0.07,4,0.07,5,0.061,7,0.134,8,0.397,10,0.188,11,0.014,12,0.07,14,0.993,15,0.004,16,0.004,17,0.004,18,0.004,19,0.004,20,0.004,25,0.935,30,1.419,31,1.387,33,0.933,34,0.933,35,0.514,37,1.57,39,0.277,41,0.415,44,2.269,46,0.792,47,2.051,48,3.083,50,1.192,63,0.241,65,1.528,66,1.003,67,1.042,69,1.252,72,2.612,74,2.649,77,1.874,78,1.38,87,3.069,90,1.71,100,2.343,101,1.697,110,1.968,119,1.042,120,1.042,122,2.211,127,2.191,129,2.216,133,1.393,156,2.433,168,0.959,183,1.508,184,1.571,185,1.508,216,1.864,217,1.941,218,2.024,233,1.571,282,5.917,287,4.517,357,1.331,402,3.224,439,2.433,603,2.211,687,3.224,808,2.671,876,1.849,887,4.074,901,2.051,1305,2.051,1311,2.051,1357,3.593,1531,4.074,1532,6.564,1533,6.564,1534,2.051,1535,3.705,1536,3.705,1537,7.352,1538,3.705,1539,3.705,1540,3.705,1541,5.19,1542,3.705,1543,4.578,1544,4.578,1545,4.578,1546,6.492,1547,5.19,1548,5.19,1549,5.19,1550,5.19,1551,6.492,1552,5.643,1553,5.643,1554,3.705,1555,2.356,1556,2.356,1557,2.356,1558,2.356,1559,2.356,1560,2.356,1561,5.19,1562,2.356,1563,2.356,1564,2.356,1565,2.356,1566,2.356,1567,2.356,1568,2.356,1569,2.356,1570,2.356,1571,2.356,1572,2.356,1573,2.356,1574,2.356,1575,2.356,1576,2.356,1577,2.356,1578,2.356,1579,2.356,1580,3.705,1581,2.356,1582,3.705,1583,2.356,1584,3.705,1585,2.356,1586,2.356,1587,2.356,1588,3.705,1589,3.705,1590,3.705,1591,3.705,1592,3.705,1593,3.705,1594,3.705,1595,3.705,1596,3.705,1597,4.578,1598,4.578,1599,3.705,1600,3.705,1601,5.19,1602,3.705,1603,2.356,1604,2.356,1605,2.356,1606,4.578,1607,2.356,1608,2.356,1609,2.356,1610,2.356,1611,2.356,1612,2.356,1613,2.356,1614,2.356,1615,2.356,1616,4.578,1617,2.051,1618,2.356,1619,2.356,1620,3.705,1621,3.705,1622,3.705,1623,2.356,1624,2.356,1625,3.705,1626,2.356,1627,2.356]],["title/interfaces/RandomPasswordOps.html",[0,0.261,1628,3.132]],["body/interfaces/RandomPasswordOps.html",[0,0.211,2,0.783,3,0.096,4,0.096,5,0.084,7,0.184,8,0.502,10,0.266,11,0.014,12,0.192,14,1.139,15,0.005,16,0.005,17,0.005,18,0.005,19,0.005,20,0.005,31,1.112,35,0.831,39,0.377,44,2.005,46,2.045,65,1.648,107,1.258,110,3.799,127,1.902,129,1.669,131,3.099,133,3.275,142,1.869,156,3.439,168,2.254,226,2.372,233,1.989,270,3.099,273,1.902,281,1.422,324,3.476,326,4.819,357,1.364,426,2.799,552,4.083,564,2.799,603,1.553,680,4.777,808,5.156,876,5.612,1061,3.382,1119,2.155,1346,4.666,1419,2.799,1628,4.777,1629,2.799,1630,6.472,1631,6.472,1632,6.472,1633,6.472,1634,5.537,1635,7.15,1636,6.087,1637,4.691,1638,4.691,1639,4.691,1640,4.691,1641,4.691,1642,2.524,1643,5.537,1644,4.691,1645,4.083,1646,4.691,1647,6.857,1648,3.216,1649,3.216,1650,2.799,1651,3.216,1652,3.216,1653,4.691,1654,3.216,1655,3.216,1656,3.216,1657,3.216,1658,5.537,1659,3.216,1660,3.216,1661,3.216,1662,3.216,1663,3.216,1664,3.216,1665,3.216,1666,2.799,1667,2.524,1668,3.216,1669,6.472,1670,3.216,1671,3.216,1672,3.216,1673,4.691,1674,3.216,1675,3.216,1676,3.216,1677,3.216,1678,3.216]],["title/interfaces/S3.html",[0,0.261,9,2.505]],["body/interfaces/S3.html",[0,0.465,1,4.034,2,1.466,3,0.179,4,0.179,5,0.157,6,4.724,7,0.344,8,0.761,9,4.9,10,0.247,11,0.013,12,0.211,13,5.629,14,1.33,15,0.01,16,0.01,17,0.01,18,0.01,19,0.01,20,0.01]],["title/directives/SDBadgeDirective.html",[174,1.007,1513,2.12]],["body/directives/SDBadgeDirective.html",[3,0.152,4,0.152,5,0.133,7,0.293,8,0.69,10,0.265,11,0.014,12,0.209,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,30,1.222,31,1.177,33,1.046,34,1.046,35,0.576,39,0.602,41,0.903,63,0.72,74,2.849,78,1.546,174,1.865,186,2.781,207,2.175,209,2.088,210,2.088,584,3.943,592,4.647,874,5.081,1372,4.878,1513,3.424,1514,4.953,1516,2.726,1517,4.722,1519,2.726,1679,4.722,1680,4.722,1681,3.699,1682,4.027,1683,6.191,1684,5.13,1685,5.13]],["title/directives/SDBadgeItemDirective.html",[174,1.007,1516,2.12]],["body/directives/SDBadgeItemDirective.html",[3,0.152,4,0.152,5,0.133,7,0.292,8,0.689,10,0.264,11,0.014,12,0.209,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,30,1.22,31,1.176,33,1.044,34,1.044,35,0.574,39,0.601,41,0.901,63,0.719,74,2.845,78,1.543,174,1.864,186,2.778,207,2.17,209,2.084,210,2.084,584,3.939,592,5.076,874,5.076,1372,4.876,1513,2.72,1514,4.949,1516,3.419,1517,4.717,1519,2.72,1679,4.717,1680,4.717,1681,3.691,1682,4.018,1683,6.188,1686,5.119,1687,5.119]],["title/directives/SDItemDirective.html",[174,1.007,1519,2.12]],["body/directives/SDItemDirective.html",[3,0.152,4,0.152,5,0.133,7,0.293,8,0.69,10,0.265,11,0.014,12,0.209,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,30,1.222,31,1.177,33,1.046,34,1.046,35,0.576,39,0.602,41,0.903,63,0.72,74,2.849,78,1.546,174,1.865,186,2.781,207,2.175,209,2.088,210,2.088,584,3.943,592,5.081,874,5.081,1372,4.878,1513,2.726,1514,4.953,1516,2.726,1517,4.318,1519,3.424,1679,4.722,1680,4.722,1681,3.699,1682,4.027,1683,6.191,1688,5.13,1689,5.13]],["title/directives/SerControlDirective.html",[174,1.007,1520,1.927]],["body/directives/SerControlDirective.html",[3,0.102,4,0.102,5,0.09,7,0.197,8,0.529,10,0.237,11,0.014,12,0.102,15,0.006,16,0.006,17,0.006,18,0.006,19,0.006,20,0.006,25,1.246,30,1.482,31,1.429,33,1.006,34,1.006,35,0.554,37,1.355,39,0.738,41,0.607,63,0.352,70,1.666,78,1.04,100,1.35,101,1.507,105,3.182,106,1.931,129,1.04,148,1.666,150,1.666,163,2.709,168,1.405,174,1.454,183,1.405,184,1.463,185,1.405,186,2.168,188,1.593,207,1.463,208,1.834,209,1.405,210,1.405,216,2.901,217,3.021,218,3.151,460,2.488,461,1.931,466,2.488,471,2.313,499,4.941,603,3.8,663,4.182,751,4.155,834,3.408,838,3.719,1008,3.862,1011,4.214,1019,5.473,1020,4.155,1520,2.383,1690,5.676,1691,3.003,1692,4.936,1693,5.015,1694,5.015,1695,6.024,1696,5.015,1697,5.015,1698,4.523,1699,4.936,1700,5.763,1701,3.451,1702,4.936,1703,4.936,1704,3.451,1705,3.451,1706,3.451,1707,3.451,1708,4.936,1709,3.451,1710,3.451,1711,3.451,1712,3.451,1713,3.451,1714,3.451,1715,3.451,1716,3.451,1717,3.451,1718,3.451,1719,4.936,1720,3.451,1721,3.451,1722,3.451,1723,3.451,1724,3.451,1725,3.451,1726,3.451,1727,3.451,1728,3.451,1729,3.451,1730,3.451,1731,3.451,1732,3.451,1733,3.451,1734,3.451,1735,3.451,1736,3.451,1737,3.451]],["title/directives/SerErrorDirective.html",[174,1.007,1522,1.927]],["body/directives/SerErrorDirective.html",[3,0.097,4,0.097,5,0.085,7,0.187,8,0.509,10,0.279,11,0.014,12,0.097,14,1.08,15,0.005,16,0.005,17,0.005,18,0.005,19,0.005,20,0.005,25,1.198,30,1.469,31,1.416,33,1.14,34,1.14,35,0.627,37,1.532,39,0.884,41,0.575,57,2.013,63,0.334,72,1.279,77,2.402,78,0.985,100,1.857,101,1.703,103,2.191,107,1.279,122,2.292,129,0.985,149,3.509,168,1.932,174,1.411,176,2.97,183,1.331,184,1.386,185,1.331,186,2.103,188,1.509,207,1.386,208,1.737,209,1.331,210,1.331,211,2.807,216,2.275,217,2.37,218,2.471,267,2.566,357,1.38,461,1.83,663,4.147,664,4.899,667,4.031,834,3.306,838,3.627,1008,3.746,1011,4.11,1020,4.9,1213,2.357,1224,2.357,1244,2.191,1381,2.845,1522,2.292,1524,3.007,1738,2.845,1739,5.59,1740,6.796,1741,5.59,1742,5.59,1743,5.59,1744,6.515,1745,5.338,1746,5.59,1747,3.27,1748,4.748,1749,4.748,1750,4.748,1751,4.748,1752,3.27,1753,3.27,1754,3.27,1755,3.27,1756,4.814,1757,3.27,1758,3.27,1759,3.27,1760,3.27,1761,3.27,1762,3.27,1763,3.27,1764,3.27,1765,3.27,1766,3.27,1767,3.27,1768,3.27,1769,3.27,1770,5.338,1771,2.845,1772,2.357,1773,3.27,1774,3.27,1775,4.748,1776,3.27,1777,3.27,1778,3.27,1779,3.27,1780,3.27,1781,4.748,1782,3.27,1783,3.27,1784,3.27,1785,3.27,1786,3.27,1787,3.27,1788,3.27,1789,3.27,1790,3.27,1791,3.27,1792,3.27,1793,3.27,1794,3.27,1795,3.27,1796,3.27,1797,3.27,1798,3.27,1799,3.27]],["title/directives/SerErrorsDirective.html",[174,1.007,1524,1.842]],["body/directives/SerErrorsDirective.html",[3,0.085,4,0.085,5,0.075,7,0.164,8,0.462,10,0.276,11,0.014,12,0.085,14,1.372,15,0.005,16,0.005,17,0.005,18,0.005,19,0.005,20,0.005,25,1.09,30,1.448,31,1.396,33,1.259,34,1.259,35,0.693,37,1.628,39,0.725,41,0.506,57,1.219,63,0.294,65,1.984,70,1.388,72,2.538,77,2.184,78,0.867,101,1.507,107,1.689,148,1.388,159,4.454,168,1.17,174,1.308,175,3.739,176,2.294,183,1.757,184,1.831,185,1.757,186,1.951,188,1.327,195,4.524,207,1.219,208,1.528,209,1.17,210,1.17,211,2.553,216,1.757,217,1.831,218,1.909,226,2.027,267,2.257,357,1.676,386,2.502,417,4.991,577,4.069,603,2.085,607,3.758,662,2.073,663,4.089,664,4.831,666,3.758,667,5.2,834,3.066,838,3.408,852,1.805,1244,1.927,1377,4.512,1392,5.016,1524,1.993,1698,2.257,1756,4.069,1770,5.856,1772,2.073,1800,2.502,1801,6.177,1802,5.185,1803,4.318,1804,5.764,1805,4.318,1806,4.318,1807,4.318,1808,5.185,1809,2.875,1810,5.764,1811,4.318,1812,4.318,1813,2.875,1814,4.318,1815,6.457,1816,2.875,1817,2.875,1818,4.318,1819,2.875,1820,4.318,1821,2.875,1822,4.318,1823,2.875,1824,2.875,1825,2.875,1826,2.875,1827,2.875,1828,4.318,1829,2.875,1830,2.875,1831,2.875,1832,2.875,1833,2.875,1834,2.875,1835,2.875,1836,2.502,1837,2.875,1838,2.875,1839,2.875,1840,5.764,1841,2.875,1842,2.875,1843,2.875,1844,2.875,1845,2.875,1846,5.185,1847,2.875,1848,2.875,1849,2.875,1850,4.318,1851,4.318,1852,2.875,1853,2.875,1854,2.875,1855,2.875,1856,2.875,1857,2.875,1858,2.875]],["title/modules/SerFilterModule.html",[21,1.624,1859,2.674]],["body/modules/SerFilterModule.html",[3,0.129,4,0.129,5,0.113,11,0.014,12,0.129,15,0.007,16,0.007,17,0.007,18,0.007,19,0.007,20,0.007,21,1.766,23,2.195,39,0.872,40,3.235,41,0.764,53,2.566,57,1.839,59,3.072,61,2.792,62,2.305,63,0.443,148,2.792,183,1.766,185,1.766,324,2.723,357,1.262,829,3.128,1005,3.766,1346,3.128,1370,3.946,1494,4.144,1498,3.874,1500,3.946,1520,3.766,1522,3.766,1524,3.601,1859,5.583,1860,3.685,1861,2.723,1862,3.629,1863,3.776,1864,3.776,1865,3.776,1866,2.723,1867,2.723,1868,2.723,1869,3.405,1870,2.723,1871,2.907,1872,4.538,1873,4.169,1874,2.907,1875,3.776,1876,3.405,1877,3.405,1878,4.538,1879,4.339]],["title/components/SerFormElementComponent.html",[1369,2.505,1500,2.019]],["body/components/SerFormElementComponent.html",[3,0.107,4,0.107,5,0.094,7,0.206,8,0.545,10,0.209,11,0.014,12,0.107,15,0.006,16,0.006,17,0.006,18,0.006,19,0.006,20,0.006,30,1.421,31,1.369,39,0.693,41,0.634,57,2.977,63,0.368,65,1.955,129,1.086,150,1.74,186,3.055,187,2.017,209,1.467,210,1.467,232,1.823,417,4.255,454,2.131,461,2.017,499,5.125,663,4.037,751,4.255,831,2.131,865,3.67,1005,1.74,1020,4.255,1196,2.131,1213,2.599,1224,2.599,1244,2.415,1369,3.195,1370,1.823,1371,2.828,1372,3.195,1373,3.136,1374,3.136,1383,3.136,1441,3.136,1486,3.136,1487,4.43,1488,4.43,1489,3.136,1490,3.136,1491,5.581,1492,3.136,1493,2.828,1494,1.915,1495,3.136,1496,3.136,1497,4.43,1498,2.415,1499,3.136,1500,3.244,1501,3.136,1502,2.415,1503,3.136,1504,2.415,1505,2.599,1506,2.828,1507,3.136,1508,3.136,1509,3.136,1510,3.136,1511,3.136,1512,3.136,1513,1.915,1514,3.955,1515,3.136,1516,1.915,1517,2.415,1518,4.43,1519,1.915,1520,3.096,1521,3.136,1522,1.74,1523,3.136,1524,1.664,1525,3.136,1526,2.131,1527,3.136,1528,2.131,1529,2.828,1530,3.136,1690,5.478,1693,3.136,1694,3.136,1695,3.136,1696,3.136,1697,3.136,1698,2.828,1880,3.136,1881,5.09,1882,5.09,1883,5.902,1884,5.09,1885,5.09,1886,5.09,1887,5.09,1888,5.09,1889,5.09,1890,5.09,1891,3.604,1892,3.604,1893,3.604,1894,3.604,1895,3.604,1896,3.604,1897,3.604,1898,5.09,1899,3.604,1900,3.604,1901,3.136,1902,3.604,1903,3.136,1904,3.604,1905,3.604,1906,3.604,1907,3.604,1908,3.604,1909,3.604,1910,3.604,1911,3.604,1912,3.604,1913,3.604,1914,3.604,1915,3.604,1916,3.604,1917,3.604,1918,3.604]],["title/modules/SerFormModule.html",[21,1.624,1919,2.877]],["body/modules/SerFormModule.html",[3,0.116,4,0.116,5,0.102,11,0.014,12,0.116,15,0.006,16,0.006,17,0.006,18,0.006,19,0.006,20,0.006,21,1.588,23,1.974,39,0.923,40,3.011,41,0.687,53,2.307,57,2.814,59,2.859,61,1.884,62,2.073,63,0.398,148,1.884,357,1.134,499,3.865,663,2.073,664,3.377,1005,3.765,1370,3.945,1494,4.144,1500,3.945,1520,3.765,1522,3.765,1524,3.6,1690,3.879,1771,3.395,1859,4.944,1860,3.527,1861,2.449,1862,3.377,1866,2.449,1867,2.449,1868,2.449,1870,2.449,1871,2.614,1872,4.223,1873,3.879,1874,2.614,1878,4.223,1903,3.395,1919,5.977,1920,3.395,1921,3.395,1922,3.901,1923,4.944,1924,3.062,1925,3.901,1926,3.901,1927,3.901,1928,3.901,1929,3.901,1930,3.901,1931,3.901,1932,3.395,1933,3.901,1934,3.901,1935,3.901,1936,3.395,1937,3.901]],["title/modules/SerSelectModule.html",[21,1.624,1923,2.674]],["body/modules/SerSelectModule.html",[3,0.119,4,0.119,5,0.104,11,0.014,12,0.119,15,0.007,16,0.007,17,0.007,18,0.007,19,0.007,20,0.007,21,1.631,23,2.027,39,0.901,40,3.066,41,0.705,53,2.37,57,2.648,59,2.912,61,2.646,62,2.129,63,0.409,148,2.646,183,1.631,185,1.631,324,2.515,357,1.165,583,4.864,584,2.242,1005,3.705,1346,2.889,1370,3.882,1494,4.077,1500,3.882,1502,3.672,1505,2.889,1513,2.912,1516,2.912,1519,2.912,1520,3.705,1522,3.705,1524,3.542,1679,2.685,1680,2.685,1860,3.567,1861,2.515,1862,3.44,1866,2.515,1867,2.515,1868,2.515,1870,2.515,1871,2.685,1872,4.301,1873,3.951,1874,2.685,1875,3.488,1876,3.145,1877,3.145,1878,4.301,1923,5.582,1938,3.488,1939,4.007,1940,3.488,1941,3.488,1942,4.007,1943,4.864,1944,3.145,1945,4.007,1946,4.007,1947,4.007,1948,4.007,1949,4.007,1950,3.145,1951,3.145]],["title/modules/SerUiModule.html",[21,1.624,1952,2.877]],["body/modules/SerUiModule.html",[3,0.129,4,0.129,5,0.113,11,0.014,12,0.129,15,0.007,16,0.007,17,0.007,18,0.007,19,0.007,20,0.007,21,1.763,23,2.191,39,0.89,40,3.231,41,0.762,59,3.068,61,2.091,62,2.301,63,0.442,187,3.231,357,1.259,454,3.415,831,3.415,887,3.399,1005,3.765,1196,3.415,1370,3.945,1494,4.143,1500,3.945,1520,3.765,1522,3.765,1524,3.6,1526,3.415,1528,3.415,1860,3.682,1861,2.718,1862,3.625,1866,2.718,1867,2.718,1868,2.718,1870,2.718,1871,2.902,1952,6.007,1953,3.769,1954,4.331,1955,4.331,1956,3.399,1957,3.399,1958,4.331,1959,4.331,1960,4.331,1961,4.331,1962,4.331,1963,3.399,1964,4.331,1965,4.331,1966,4.331,1967,4.331]],["title/interfaces/SnackbarOpts.html",[0,0.261,1968,2.877]],["body/interfaces/SnackbarOpts.html",[0,0.304,2,1.13,3,0.138,4,0.138,5,0.121,7,0.265,8,0.647,10,0.292,11,0.014,12,0.179,14,1.391,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,35,0.849,39,0.835,41,0.816,63,0.474,66,1.636,119,2.05,120,2.05,142,1.757,150,2.239,155,3.107,181,3.343,357,1.348,482,3.343,579,2.595,852,4.217,1119,4.048,1120,3.639,1157,5.794,1449,3.639,1456,3.639,1968,5.133,1969,3.639,1970,6.424,1971,6.424,1972,6.195,1973,4.035,1974,3.343,1975,4.035,1976,5.257,1977,4.035,1978,5.847,1979,5.847,1980,4.035,1981,4.035,1982,4.035,1983,4.035,1984,4.035,1985,4.035,1986,4.035,1987,4.035,1988,4.035,1989,4.035,1990,4.035,1991,4.035,1992,4.035,1993,4.035,1994,4.035]],["title/injectables/SnackbarService.html",[66,1.081,1974,2.877]],["body/injectables/SnackbarService.html",[0,0.314,3,0.142,4,0.142,5,0.125,7,0.274,10,0.197,11,0.014,12,0.183,14,1.202,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,25,1.558,30,0.909,31,0.876,33,0.978,34,0.978,35,0.538,37,1.128,39,0.846,41,0.844,63,0.49,66,1.672,67,2.121,101,1.254,119,2.121,120,2.121,142,1.254,150,2.316,155,3.214,181,3.459,357,1.395,482,3.459,579,2.684,852,4.286,1119,4.138,1120,3.765,1157,4.847,1449,3.765,1456,3.765,1968,5.38,1969,3.765,1970,5.374,1971,5.374,1972,4.175,1973,4.175,1974,4.452,1975,5.374,1976,5.374,1977,4.175,1978,5.943,1979,5.943,1980,4.175,1981,4.175,1982,4.175,1983,4.175,1984,5.374,1985,4.175,1986,4.175,1987,4.175,1988,4.175,1989,4.175,1990,4.175,1991,4.175,1992,4.175,1993,4.175,1994,4.175,1995,6.175,1996,4.797]],["title/interfaces/String.html",[0,0.261,14,0.702]],["body/interfaces/String.html",[0,0.418,2,1.231,3,0.15,4,0.15,5,0.131,7,0.288,10,0.208,11,0.014,12,0.15,14,1.432,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,21,2.598,25,1.611,30,0.958,31,1.166,33,1.03,34,1.03,35,0.567,37,1.188,46,1.698,65,1.369,100,2.497,101,1.669,131,2.828,156,3.392,270,2.828,357,1.856,680,3.966,1333,3.966,1475,4.398,1997,4.398,1998,6.384,1999,6.384,2000,5.053,2001,6.384,2002,6.384,2003,6.384,2004,5.053,2005,5.053,2006,5.053,2007,5.053,2008,5.053,2009,5.053,2010,5.053,2011,5.053,2012,6.998,2013,5.053,2014,6.384,2015,6.384,2016,5.053,2017,5.053]],["title/directives/ToggleClassDirective.html",[174,1.007,1526,2.36]],["body/directives/ToggleClassDirective.html",[3,0.156,4,0.156,5,0.137,7,0.3,10,0.269,11,0.014,12,0.156,14,1.152,15,0.009,16,0.009,17,0.009,18,0.009,19,0.009,20,0.009,30,1.35,31,1.301,33,1.071,34,1.071,35,0.59,39,0.617,41,0.925,48,3.02,63,0.537,70,2.538,72,2.056,78,1.584,129,1.584,174,1.651,176,3.476,177,4.172,178,4.409,186,2.461,207,2.228,209,2.139,210,2.139,211,3.869,212,4.574,460,3.79,461,2.941,462,6.2,466,3.79,471,3.522,475,4.574,1394,4.574,1526,3.869,2018,6.489,2019,4.574,2020,7.67,2021,6.2,2022,5.256,2023,5.256,2024,5.256,2025,5.256,2026,5.256]],["title/interfaces/VirtualScrollerDefaultOptions.html",[0,0.261,2027,2.877]],["body/interfaces/VirtualScrollerDefaultOptions.html",[0,0.334,2,1.244,3,0.152,4,0.152,5,0.133,7,0.292,8,0.688,10,0.33,11,0.014,12,0.152,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,35,0.828,142,2.192,226,2.425,1033,2.858,2027,4.634,2028,4.446,2029,6.423,2030,6.423,2031,6.423,2032,6.423,2033,6.423,2034,6.423,2035,6.423,2036,6.423,2037,6.423]],["title/modules/VirtualScrollerModule.html",[21,1.624,1943,2.674]],["body/modules/VirtualScrollerModule.html",[3,0.024,4,0.024,5,0.021,11,0.014,12,0.061,14,0.259,15,0.006,16,0.001,17,0.001,18,0.001,19,0.001,20,0.001,21,0.328,23,0.408,26,1.689,39,0.539,40,0.825,41,0.259,53,0.476,55,0.54,59,0.783,61,0.712,62,0.428,63,0.151,65,1.824,74,3.16,100,1.869,101,1.611,103,0.54,104,0.54,107,1.149,122,1.885,142,1.802,156,2.074,168,1.026,175,1.063,176,3.273,177,2.454,178,0.872,183,0.6,184,0.342,185,0.328,186,0.303,188,0.372,198,1.817,226,1.595,273,2.927,280,1.157,281,3.368,309,1.6,324,1.279,357,2.219,389,1.157,439,1.923,461,1.14,464,2.459,468,0.54,472,1.736,482,0.581,603,2.217,733,1.6,778,2.555,799,0.701,811,2.998,834,0.872,838,0.476,865,1.817,868,1.157,911,5.362,929,0.701,1008,0.988,1011,0.54,1032,0.581,1033,0.451,1035,1.157,1036,1.157,1037,1.283,1038,1.283,1039,1.774,1040,1.978,1041,0.701,1042,1.157,1044,3.151,1045,1.689,1047,2.193,1048,2.872,1049,2.193,1050,3.817,1051,2.193,1052,2.872,1053,1.817,1055,1.6,1061,1.47,1093,1.157,1107,3.817,1151,2.815,1204,1.283,1207,1.283,1283,2.193,1357,0.632,1369,0.925,1372,0.506,1493,0.632,1504,3.203,1505,1.063,1506,0.632,1642,0.632,1666,0.701,1745,0.701,1836,0.701,1860,0.428,1861,0.506,1862,0.925,1866,0.506,1867,0.506,1868,0.506,1870,0.506,1871,0.54,1873,1.063,1874,0.988,1901,0.701,1936,0.701,1943,2.426,1950,0.632,1951,2.841,2021,0.701,2027,1.47,2029,1.283,2030,1.283,2031,1.283,2032,1.283,2033,0.701,2034,0.701,2035,1.283,2036,1.283,2037,1.283,2038,0.701,2039,0.701,2040,0.701,2041,0.701,2042,0.806,2043,0.806,2044,1.474,2045,1.474,2046,0.806,2047,2.038,2048,0.806,2049,0.806,2050,0.806,2051,0.701,2052,1.063,2053,0.988,2054,0.806,2055,1.283,2056,0.806,2057,2.038,2058,0.806,2059,0.806,2060,0.806,2061,0.806,2062,2.038,2063,0.806,2064,0.806,2065,1.474,2066,1.474,2067,0.806,2068,1.474,2069,0.806,2070,0.806,2071,2.936,2072,2.038,2073,0.806,2074,0.806,2075,2.936,2076,2.52,2077,0.806,2078,2.52,2079,2.52,2080,2.52,2081,2.193,2082,2.936,2083,0.806,2084,0.806,2085,0.806,2086,1.474,2087,1.474,2088,1.474,2089,0.806,2090,0.806,2091,2.52,2092,1.474,2093,1.474,2094,0.806,2095,2.038,2096,0.806,2097,0.806,2098,1.474,2099,0.806,2100,0.806,2101,0.806,2102,0.806,2103,1.474,2104,3.3,2105,1.474,2106,1.474,2107,1.474,2108,1.474,2109,1.474,2110,1.474,2111,1.474,2112,0.806,2113,7.121,2114,0.806,2115,0.806,2116,2.038,2117,0.806,2118,3.62,2119,3.62,2120,0.806,2121,0.806,2122,0.806,2123,0.806,2124,0.806,2125,0.806,2126,0.806,2127,0.806,2128,0.806,2129,2.52,2130,2.038,2131,0.806,2132,0.806,2133,1.474,2134,0.806,2135,1.474,2136,0.806,2137,1.474,2138,0.806,2139,0.806,2140,0.806,2141,2.038,2142,3.3,2143,0.806,2144,4.592,2145,2.038,2146,0.806,2147,0.806,2148,0.806,2149,2.936,2150,0.806,2151,2.038,2152,0.806,2153,2.872,2154,2.038,2155,0.806,2156,1.474,2157,0.806,2158,2.038,2159,2.038,2160,0.806,2161,1.474,2162,0.806,2163,0.806,2164,0.806,2165,3.62,2166,2.936,2167,2.038,2168,3.3,2169,0.806,2170,0.806,2171,0.806,2172,0.806,2173,2.038,2174,0.806,2175,1.474,2176,1.474,2177,1.474,2178,4.158,2179,0.806,2180,0.806,2181,0.806,2182,0.806,2183,0.806,2184,2.52,2185,0.806,2186,0.806,2187,0.806,2188,0.806,2189,0.806,2190,0.806,2191,0.806,2192,1.474,2193,0.806,2194,0.806,2195,2.52,2196,2.936,2197,1.474,2198,0.806,2199,0.806,2200,0.806,2201,0.806,2202,2.52,2203,0.806,2204,0.806,2205,0.806,2206,0.806,2207,1.474,2208,1.474,2209,2.038,2210,1.474,2211,0.806,2212,1.474,2213,0.806,2214,0.806,2215,2.52,2216,2.52,2217,4.95,2218,3.62,2219,0.806,2220,0.806,2221,0.806,2222,2.038,2223,0.806,2224,2.038,2225,2.936,2226,1.474,2227,0.806,2228,0.806,2229,0.806,2230,0.806,2231,0.806,2232,4.158,2233,2.038,2234,1.474,2235,2.038,2236,0.806,2237,1.474,2238,2.52,2239,0.806,2240,2.038,2241,1.474,2242,0.806,2243,0.806,2244,0.806,2245,0.806,2246,0.806,2247,0.806,2248,0.806,2249,1.474,2250,1.474,2251,2.038,2252,0.806,2253,0.806,2254,0.806,2255,1.474,2256,0.806,2257,0.806,2258,0.806,2259,0.806,2260,0.806,2261,0.806,2262,0.806,2263,1.474,2264,2.038,2265,2.52,2266,0.806,2267,0.806,2268,0.806,2269,0.806,2270,0.806,2271,0.806,2272,0.806,2273,0.806,2274,0.806,2275,0.806,2276,2.038,2277,0.806,2278,0.806,2279,0.806,2280,0.806,2281,1.474,2282,0.806,2283,2.038,2284,0.806,2285,0.806,2286,2.038,2287,2.52,2288,2.038,2289,1.474,2290,2.038,2291,2.038,2292,1.283,2293,0.806,2294,0.806,2295,0.806,2296,0.806,2297,0.806,2298,0.806,2299,0.806,2300,0.806,2301,1.474,2302,0.806,2303,2.52,2304,1.474,2305,1.474,2306,0.806,2307,0.806,2308,1.474,2309,0.806,2310,0.806,2311,0.806,2312,0.806,2313,0.806,2314,0.806,2315,0.806,2316,0.806,2317,0.806,2318,0.806,2319,0.806,2320,0.806,2321,2.038,2322,1.474,2323,1.474,2324,1.474,2325,0.806,2326,1.474,2327,2.038,2328,1.474,2329,1.474,2330,0.806,2331,0.806,2332,1.474,2333,0.806,2334,0.806,2335,0.806,2336,0.806,2337,2.52,2338,0.806,2339,0.806,2340,1.474,2341,0.806,2342,2.038,2343,0.806,2344,0.806,2345,1.474,2346,0.806,2347,0.806,2348,0.806,2349,0.806,2350,0.806,2351,0.806,2352,0.806,2353,4.158,2354,3.62,2355,0.806,2356,0.806,2357,1.474,2358,0.806,2359,0.806,2360,1.474,2361,0.806,2362,1.474,2363,1.474,2364,1.474,2365,0.806,2366,2.52,2367,0.806,2368,0.806,2369,0.806,2370,0.806,2371,0.806,2372,1.283,2373,0.806,2374,0.806,2375,0.806,2376,0.806,2377,1.474,2378,0.806,2379,0.806,2380,0.701,2381,0.806,2382,0.806,2383,0.806,2384,0.806,2385,0.806,2386,0.806,2387,0.806,2388,0.806,2389,0.806,2390,0.806,2391,1.474,2392,0.806,2393,0.806,2394,0.806,2395,0.806,2396,0.806,2397,0.806,2398,0.806,2399,0.806,2400,0.806,2401,0.806,2402,0.806,2403,0.806,2404,0.806,2405,0.806,2406,0.806,2407,0.806,2408,0.806,2409,2.52,2410,1.474,2411,0.806,2412,0.806,2413,0.806,2414,0.806,2415,0.806,2416,0.806,2417,1.474,2418,1.474,2419,0.806,2420,0.806,2421,0.806,2422,1.474,2423,0.806,2424,0.806,2425,1.474,2426,0.806,2427,0.806,2428,0.806,2429,2.936,2430,1.474,2431,0.806,2432,2.936,2433,1.474,2434,0.806,2435,2.038,2436,0.806,2437,2.038,2438,1.474,2439,1.474,2440,1.474,2441,1.474,2442,1.474,2443,0.806,2444,1.474,2445,0.806,2446,0.806,2447,0.806,2448,0.806,2449,2.038,2450,0.806,2451,1.474,2452,1.474,2453,1.474,2454,0.806,2455,0.806,2456,1.474,2457,0.806,2458,0.806,2459,1.474,2460,1.474,2461,0.806,2462,1.474,2463,2.038,2464,1.474,2465,0.806,2466,0.806,2467,0.806,2468,0.806,2469,0.806,2470,0.806,2471,0.806,2472,0.806,2473,0.806,2474,0.806,2475,0.806,2476,0.806,2477,3.3,2478,0.806,2479,0.806,2480,0.806,2481,2.936,2482,1.474,2483,2.52,2484,0.806,2485,0.806,2486,1.474,2487,0.806,2488,0.806,2489,0.806,2490,0.806,2491,0.806,2492,1.474,2493,1.474,2494,0.806,2495,0.806,2496,0.806,2497,0.806,2498,0.806,2499,0.806,2500,0.806,2501,0.806,2502,0.806,2503,0.806,2504,0.806,2505,0.806,2506,0.806,2507,0.806,2508,0.806,2509,0.806,2510,1.474,2511,0.806,2512,1.474,2513,0.806,2514,0.806,2515,0.806,2516,2.038,2517,2.038,2518,3.3,2519,3.3,2520,0.806,2521,0.806,2522,0.806,2523,0.806,2524,0.806,2525,0.806,2526,2.936,2527,2.936,2528,1.474,2529,0.806,2530,1.474,2531,0.806,2532,2.52,2533,2.52,2534,1.474,2535,0.806,2536,1.474,2537,1.474,2538,2.936,2539,3.3,2540,3.3,2541,1.474,2542,2.52,2543,2.936,2544,0.806,2545,0.806,2546,1.474,2547,1.474,2548,0.806,2549,0.806,2550,0.806,2551,0.806,2552,0.806,2553,0.806,2554,2.52,2555,1.474,2556,0.806,2557,0.806,2558,0.701,2559,0.806,2560,0.806,2561,0.806,2562,0.806,2563,1.474,2564,2.52,2565,1.474,2566,2.038,2567,0.806,2568,0.806,2569,0.806,2570,0.806,2571,0.806,2572,2.038,2573,0.806,2574,0.806,2575,0.806,2576,0.806,2577,0.806,2578,0.806,2579,0.806,2580,0.806]],["title/directives/WhenScrolledDirective.html",[174,1.007,1528,2.36]],["body/directives/WhenScrolledDirective.html",[3,0.144,4,0.144,5,0.126,7,0.276,8,0.665,10,0.282,11,0.014,12,0.144,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,25,1.567,30,1.371,31,1.321,33,0.986,34,0.986,35,0.543,37,1.137,39,0.568,41,0.851,63,0.494,70,2.335,78,1.457,101,1.264,107,1.892,174,1.73,177,4.047,178,4.277,183,1.968,184,2.05,185,1.968,186,2.579,188,2.233,193,4.943,207,2.05,208,2.57,209,1.968,210,1.968,458,4.476,464,4.277,472,3.671,834,4.054,837,5.381,838,4.277,839,5.966,840,3.796,842,4.872,847,4.872,848,4.209,853,4.209,1528,3.671,1529,4.872,1617,4.209,1951,3.796,2581,6.51,2582,4.209,2583,6.207,2584,4.836,2585,4.836,2586,4.836,2587,4.836,2588,4.836]],["title/interfaces/WrapGroupDimension.html",[0,0.261,2053,2.674]],["body/interfaces/WrapGroupDimension.html",[0,0.385,2,1.433,3,0.175,4,0.175,5,0.153,7,0.336,8,0.751,10,0.307,11,0.013,12,0.175,15,0.01,16,0.01,17,0.01,18,0.01,19,0.01,20,0.01,142,2.1,1033,3.293,1035,6.082,1036,6.082,2053,4.697,2153,6.744,2589,5.121]],["title/interfaces/WrapGroupDimensions.html",[0,0.261,2052,2.877]],["body/interfaces/WrapGroupDimensions.html",[0,0.37,2,1.375,3,0.168,4,0.168,5,0.147,7,0.322,8,0.732,10,0.314,11,0.014,12,0.168,15,0.009,16,0.009,17,0.009,18,0.009,19,0.009,20,0.009,39,0.663,142,2.138,1033,3.159,2052,4.929,2053,5.245,2590,4.913,2591,7.643,2592,7.643,2593,7.643,2594,7.643]],["title/coverage.html",[2595,5.464]],["body/coverage.html",[0,0.506,1,1.357,5,0.053,6,2.576,9,1.271,10,0.083,11,0.014,14,0.356,15,0.003,16,0.003,17,0.003,18,0.003,19,0.003,20,0.003,42,1.271,51,1.46,63,0.572,66,1.843,68,2.576,71,1.46,105,1.024,107,0.792,129,0.61,137,1.46,138,2.857,140,1.392,142,0.529,156,4.209,167,1.589,170,1.46,171,2.576,172,2.576,174,1.746,179,1.589,187,1.133,190,1.46,219,1.271,220,2.985,227,1.197,233,0.858,235,1.271,236,2.985,237,1.762,242,1.357,266,1.762,281,3.721,282,2.985,284,2.857,309,4.107,393,1.589,394,1.762,415,1.589,454,1.197,455,1.762,456,1.762,494,1.589,495,1.762,496,1.762,499,2.598,501,1.762,502,1.762,503,1.762,504,1.762,505,1.762,506,1.762,507,1.762,508,1.762,509,1.762,583,1.357,584,3.439,585,1.762,610,1.589,611,1.762,633,1.589,634,1.762,662,1.46,663,2.977,664,2.598,665,1.589,668,1.589,669,1.762,670,1.762,671,1.762,698,1.46,699,1.762,700,2.576,715,2.367,720,1.46,724,1.46,731,3.433,747,1.46,790,1.133,826,1.762,828,1.589,829,3.433,830,1.762,831,1.197,832,1.762,833,1.762,854,1.357,855,2.576,856,2.576,867,1.357,872,1.589,873,1.762,942,1.357,943,2.576,944,1.357,947,1.46,948,1.762,950,2.367,954,1.46,956,1.46,1005,0.978,1006,1.762,1007,1.762,1030,1.589,1032,1.46,1033,3.439,1034,1.762,1045,1.357,1046,1.762,1053,1.46,1054,1.762,1056,1.589,1057,1.762,1068,1.357,1086,1.589,1101,1.357,1119,1.357,1189,2.576,1196,1.197,1197,1.762,1198,1.762,1269,1.762,1285,1.589,1286,1.762,1359,1.46,1360,2.576,1361,2.576,1369,3.517,1370,1.024,1375,1.762,1376,1.762,1455,1.589,1494,1.076,1498,1.357,1500,1.024,1502,1.357,1504,1.357,1513,1.076,1516,1.076,1519,1.076,1520,0.978,1522,0.978,1524,0.935,1526,1.197,1528,1.197,1531,1.589,1532,1.762,1533,1.762,1534,1.762,1628,1.589,1629,4.876,1645,1.762,1647,1.762,1650,1.762,1679,2.774,1680,2.774,1681,2.985,1690,2.367,1691,1.762,1738,1.762,1772,1.46,1800,1.762,1860,2.53,1869,1.589,1870,1.271,1880,1.762,1924,1.589,1932,1.762,1944,1.589,1950,2.576,1956,1.589,1957,1.589,1968,1.46,1969,2.576,1974,1.46,1997,1.762,2018,1.762,2019,1.762,2027,1.46,2028,1.762,2041,2.857,2052,1.46,2053,1.357,2055,1.762,2581,1.762,2582,1.762,2589,1.762,2590,1.762,2596,2.025,2597,1.762,2598,2.025,2599,4.761,2600,5.901,2601,7.444,2602,8.15,2603,5.233,2604,7.02,2605,5.233,2606,4.14,2607,2.025,2608,2.025,2609,4.761,2610,2.025,2611,2.025,2612,2.025,2613,2.857,2614,2.025,2615,2.857,2616,3.283,2617,2.025,2618,2.857,2619,2.025,2620,2.025,2621,4.14,2622,2.025,2623,2.025,2624,2.025,2625,5.233,2626,3.283,2627,2.025,2628,4.761,2629,2.025,2630,4.14,2631,3.283,2632,2.025,2633,2.025,2634,2.025,2635,1.762,2636,2.025,2637,2.025,2638,2.857,2639,1.762,2640,1.762,2641,2.025,2642,4.876,2643,2.025,2644,2.025,2645,2.025,2646,2.025,2647,2.025,2648,2.025,2649,2.025,2650,2.025,2651,3.283,2652,2.025,2653,1.762,2654,1.762,2655,1.762,2656,4.14,2657,2.025,2658,2.025,2659,2.025,2660,2.025,2661,4.876,2662,1.762,2663,2.025,2664,2.025,2665,2.025,2666,2.025,2667,3.283,2668,3.283,2669,2.025,2670,2.025,2671,2.025,2672,2.025]],["title/dependencies.html",[1860,2.553,2673,3.323]],["body/dependencies.html",[11,0.014,15,0.009,16,0.009,17,0.009,18,0.009,19,0.009,20,0.009,41,0.933,148,2.56,150,3.177,582,4.615,686,3.824,692,4.615,1078,3.824,1115,3.824,1116,3.824,1874,3.554,1876,5.164,1877,5.164,2051,4.615,2674,5.303,2675,5.303,2676,8.028,2677,5.303,2678,5.303,2679,5.303,2680,5.303,2681,5.303,2682,5.303,2683,5.303,2684,5.303,2685,5.303,2686,5.303,2687,5.303,2688,4.615,2689,5.303,2690,5.303,2691,5.303,2692,5.303,2693,5.303,2694,5.303,2695,5.303,2696,5.303,2697,5.303,2698,4.615,2699,5.303,2700,5.303,2701,6.579,2702,5.303,2703,5.303,2704,5.303,2705,5.303,2706,5.303,2707,5.303,2708,5.303]],["title/index.html",[280,2.608,1319,2.608,2709,2.892]],["body/index.html",[2,1.481,11,0.012,15,0.01,16,0.01,17,0.01,18,0.01,19,0.01,20,0.01,52,4.385,90,2.807,129,1.833,378,5.293,627,6.22,907,4.773,2597,5.293,2688,5.293,2698,5.293,2710,6.081,2711,6.081,2712,6.081,2713,6.081,2714,6.081,2715,6.081,2716,6.081,2717,7.147,2718,6.081,2719,6.081,2720,7.147,2721,6.081,2722,6.081]],["title/license.html",[1319,2.608,2709,2.892,2723,2.892]],["body/license.html",[11,0.011,15,0.008,16,0.008,17,0.008,18,0.008,19,0.008,20,0.008,57,2.161,468,3.416,1334,4.436,1756,4,1815,4.436,1963,5.037,2372,6.114,2380,4.436,2723,4.436,2724,6.418,2725,7.374,2726,6.418,2727,6.418,2728,6.418,2729,5.097,2730,5.097,2731,5.097,2732,6.418,2733,5.097,2734,5.097,2735,5.097,2736,5.097,2737,5.097,2738,5.097,2739,8.039,2740,5.097,2741,5.097,2742,5.097,2743,5.097,2744,5.097,2745,6.418,2746,5.097,2747,5.097,2748,6.418,2749,5.097,2750,5.097,2751,5.097,2752,5.097,2753,5.097,2754,5.097,2755,6.418,2756,5.097,2757,5.097,2758,5.097,2759,5.097,2760,5.097,2761,6.418,2762,6.418,2763,5.097,2764,5.097,2765,5.097,2766,5.097,2767,5.097,2768,5.097,2769,5.097,2770,5.097,2771,5.097,2772,5.097,2773,5.097,2774,5.097,2775,5.097,2776,5.097,2777,5.097,2778,5.097,2779,5.097,2780,5.097,2781,5.097,2782,5.097,2783,5.097,2784,5.097,2785,5.097,2786,5.097,2787,5.097,2788,5.097,2789,5.097,2790,5.097,2791,5.097]],["title/modules.html",[2792,5.464]],["body/modules.html",[11,0.011,15,0.01,16,0.01,17,0.013,18,0.01,19,0.01,20,0.01,22,4.539,23,2.926,441,6.184,714,4.539,949,4.539,1859,3.876,1919,4.17,1923,3.876,1943,3.876,1952,4.17,2793,7.431,2794,7.431,2795,8.157,2796,7.879,2797,7.879,2798,7.879]],["title/overview.html",[2799,5.464]],["body/overview.html",[2,0.829,11,0.014,15,0.006,16,0.006,17,0.006,18,0.006,19,0.006,20,0.006,21,1.384,23,1.721,59,1.807,61,1.642,62,1.807,67,1.504,84,2.011,207,1.442,283,2.011,583,3.83,1005,3.814,1370,3.997,1371,2.67,1494,4.198,1500,3.997,1504,4.755,1520,3.814,1522,3.814,1524,3.647,1667,2.67,1859,5.491,1860,1.807,1861,2.135,1862,2.135,1863,2.96,1864,2.96,1865,2.96,1866,2.135,1867,2.135,1868,2.135,1919,5.883,1920,2.96,1921,2.96,1923,5.53,1938,2.96,1940,2.96,1941,2.96,1943,4.616,1952,5.854,1953,2.96,2038,2.96,2039,2.96,2040,2.96,2800,3.401,2801,4.885,2802,2.96,2803,3.401,2804,2.96]],["title/miscellaneous/typealiases.html",[2805,2.892,2806,4.804]],["body/miscellaneous/typealiases.html",[7,0.357,10,0.257,11,0.013,14,1.279,15,0.01,16,0.01,17,0.01,18,0.01,19,0.01,20,0.01,129,1.886,663,3.325,664,3.928,665,5.704,667,5.24,2807,5.447,2808,6.259,2809,5.447]],["title/miscellaneous/variables.html",[2805,2.892,2810,4.181]],["body/miscellaneous/variables.html",[7,0.18,10,0.303,11,0.014,14,0.556,15,0.005,16,0.005,17,0.005,18,0.005,19,0.005,20,0.005,51,3.339,68,2.48,100,2.144,104,3.673,107,2.144,108,2.75,140,1.34,142,1.211,153,2.48,168,1.286,187,1.768,190,3.339,216,3.23,217,3.365,218,3.509,273,1.869,281,1.397,335,2.75,352,1.679,409,2.75,415,3.635,423,1.984,454,1.869,584,2.591,595,2.75,663,1.679,715,2.279,724,3.339,731,4.352,752,2.75,790,2.591,811,2.279,829,3.339,831,1.869,950,2.279,956,3.339,977,2.75,1005,1.526,1030,2.48,1086,3.635,1090,4.03,1196,1.869,1316,2.75,1370,1.599,1455,3.635,1468,4.771,1494,1.679,1498,2.118,1500,1.599,1502,2.118,1513,1.679,1516,1.679,1519,1.679,1520,1.526,1522,1.526,1524,1.459,1526,1.869,1528,1.869,1642,3.635,1667,2.48,1772,3.339,1860,3.78,1869,3.635,1924,3.635,1944,3.635,1956,2.48,1957,3.635,1963,3.635,2081,2.75,2292,2.75,2558,2.75,2613,4.03,2615,5.253,2618,4.03,2635,2.75,2638,2.75,2639,4.03,2640,4.03,2642,2.75,2653,2.75,2654,4.03,2655,4.03,2661,2.75,2662,4.771,2802,2.75,2804,2.75,2807,2.75,2809,5.844,2810,2.75,2811,3.16,2812,6.715,2813,4.631,2814,3.16,2815,3.16,2816,3.16,2817,3.16,2818,3.16,2819,3.16,2820,3.16,2821,7.566,2822,3.16,2823,3.16,2824,3.16,2825,4.631,2826,3.16,2827,4.631,2828,3.16,2829,3.16,2830,4.631,2831,4.631,2832,3.16,2833,4.631,2834,6.036,2835,3.16,2836,3.16,2837,4.631,2838,4.631,2839,4.631,2840,4.631,2841,3.16,2842,3.16,2843,3.16,2844,3.16,2845,3.16,2846,3.16,2847,3.16,2848,3.16,2849,3.16,2850,3.16,2851,3.16,2852,3.16,2853,3.16,2854,3.16,2855,3.16,2856,3.16,2857,3.16,2858,3.16,2859,3.16,2860,3.16,2861,3.16,2862,3.16,2863,3.16,2864,3.16,2865,3.16,2866,3.16,2867,3.16,2868,3.16,2869,3.16,2870,3.16,2871,3.16,2872,4.631,2873,3.16,2874,5.482,2875,3.16,2876,4.631,2877,4.631,2878,4.631,2879,3.16,2880,3.16,2881,3.16,2882,3.16,2883,3.16,2884,3.16,2885,3.16,2886,3.16,2887,3.16,2888,3.16,2889,3.16,2890,3.16]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":281,"title":{},"body":{"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"injectables/DataService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"interfaces/RandomPasswordOps.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0,1}[0",{"_index":2849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.39",{"_index":2684,"title":{},"body":{"dependencies.html":{}}}],["0.0.51",{"_index":2686,"title":{},"body":{"dependencies.html":{}}}],["0.1.0",{"_index":2680,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":2708,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1158,"title":{},"body":{"classes/LeafletMap.html":{}}}],["0.6.2",{"_index":2691,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2602,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2621,"title":{},"body":{"coverage.html":{}}}],["0/103",{"_index":2619,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2622,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2637,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2626,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2616,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2627,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2647,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2599,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2617,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":2620,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2604,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2625,"title":{},"body":{"coverage.html":{}}}],["0/41",{"_index":2612,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2600,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2605,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2603,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2623,"title":{},"body":{"coverage.html":{}}}],["0/84",{"_index":2614,"title":{},"body":{"coverage.html":{}}}],["0/99",{"_index":2624,"title":{},"body":{"coverage.html":{}}}],["00:00:00",{"_index":452,"title":{},"body":{"injectables/CookiesService.html":{}}}],["01",{"_index":449,"title":{},"body":{"injectables/CookiesService.html":{}}}],["0123456789",{"_index":1671,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["0x10000",{"_index":1655,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["1",{"_index":273,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"interfaces/RandomPasswordOps.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":2706,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":2697,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":2696,"title":{},"body":{"dependencies.html":{}}}],["1.60934",{"_index":1356,"title":{},"body":{"injectables/MapService.html":{}}}],["1/1",{"_index":2609,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2632,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1283,"title":{},"body":{"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["100",{"_index":309,"title":{},"body":{"classes/Color.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["1000",{"_index":482,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"modules/VirtualScrollerModule.html":{}}}],["100mb",{"_index":561,"title":{},"body":{"classes/CustomValidators.html":{}}}],["100vh",{"_index":2084,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["100vw",{"_index":2083,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["1080",{"_index":2126,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["11",{"_index":1083,"title":{},"body":{"classes/LeafletMap.html":{}}}],["11/11",{"_index":2629,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2803,"title":{},"body":{"overview.html":{}}}],["123",{"_index":401,"title":{},"body":{"injectables/CookiesService.html":{}}}],["13",{"_index":2802,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":317,"title":{},"body":{"classes/Color.html":{}}}],["1500",{"_index":1993,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["16",{"_index":1030,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["17",{"_index":2870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.4.0",{"_index":2687,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":2872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["180",{"_index":1344,"title":{},"body":{"injectables/MapService.html":{}}}],["19",{"_index":1188,"title":{},"body":{"classes/LeafletMap.html":{}}}],["1920",{"_index":2124,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["1970",{"_index":451,"title":{},"body":{"injectables/CookiesService.html":{}}}],["1px",{"_index":2099,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["1st",{"_index":2392,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["2",{"_index":389,"title":{},"body":{"classes/Color.html":{},"injectables/MapService.html":{},"modules/VirtualScrollerModule.html":{}}}],["2,63})\\.([a",{"_index":2823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.9.0",{"_index":2693,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":362,"title":{},"body":{"classes/Color.html":{}}}],["2014",{"_index":2727,"title":{},"body":{"license.html":{}}}],["2019",{"_index":2728,"title":{},"body":{"license.html":{}}}],["27",{"_index":2804,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["280",{"_index":343,"title":{},"body":{"classes/Color.html":{}}}],["288",{"_index":342,"title":{},"body":{"classes/Color.html":{}}}],["2nd",{"_index":2381,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["2x",{"_index":2368,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["3.0.3",{"_index":2700,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":2682,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":2636,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":779,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["360",{"_index":305,"title":{},"body":{"classes/Color.html":{}}}],["37",{"_index":2859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":2857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":1316,"title":{},"body":{"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["39;users.add&#39",{"_index":250,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["39;users.update&#39",{"_index":249,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["4",{"_index":1407,"title":{},"body":{"components/PinInputComponent.html":{}}}],["4.2.7",{"_index":2704,"title":{},"body":{"dependencies.html":{}}}],["4.6288702",{"_index":1080,"title":{},"body":{"classes/LeafletMap.html":{}}}],["40",{"_index":335,"title":{},"body":{"classes/Color.html":{},"miscellaneous/variables.html":{}}}],["4000",{"_index":1983,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["46",{"_index":2863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4][0",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":2057,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["5/6",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1269,"title":{},"body":{"directives/LongPressDirective.html":{},"coverage.html":{}}}],["500",{"_index":375,"title":{},"body":{"classes/Color.html":{},"directives/FinishTypingDirective.html":{},"directives/LongPressDirective.html":{}}}],["512",{"_index":2886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5]|2[0",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":2801,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":2701,"title":{},"body":{"dependencies.html":{}}}],["6371",{"_index":1354,"title":{},"body":{"injectables/MapService.html":{}}}],["65",{"_index":312,"title":{},"body":{"classes/Color.html":{}}}],["70px",{"_index":376,"title":{},"body":{"classes/Color.html":{}}}],["74.1193724",{"_index":1081,"title":{},"body":{"classes/LeafletMap.html":{}}}],["75",{"_index":314,"title":{},"body":{"classes/Color.html":{}}}],["750",{"_index":2056,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["8",{"_index":1667,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["80",{"_index":307,"title":{},"body":{"classes/Color.html":{}}}],["83",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9!#$%&'*+/=?^_",{"_index":2825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.6",{"_index":2676,"title":{},"body":{"dependencies.html":{}}}],["9.18.1",{"_index":2695,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":1343,"title":{},"body":{"injectables/MapService.html":{}}}],["91",{"_index":2866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93",{"_index":2868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9\\_",{"_index":2822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9](?:[a",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])(?=.*[a",{"_index":2852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?\\.)+[a",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?|\\[(?:(?:25[0",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]*[.]{0,1}[0",{"_index":2850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]+$/.test(value.tostring",{"_index":1466,"title":{},"body":{"components/PinInputComponent.html":{}}}],["9]+/g",{"_index":2851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]:(?:[\\x01",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]?)\\.){3}(?:25[0",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]?|[a",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9][0",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{2",{"_index":2824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]|[01]?[0",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9a",{"_index":1467,"title":{},"body":{"components/PinInputComponent.html":{}}}],["_",{"_index":1419,"title":{},"body":{"components/PinInputComponent.html":{},"interfaces/RandomPasswordOps.html":{}}}],["_arguments",{"_index":2345,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_awsdata",{"_index":73,"title":{},"body":{"injectables/AwsService.html":{}}}],["_blank",{"_index":620,"title":{},"body":{"injectables/DownloadService.html":{}}}],["_bufferamount",{"_index":2127,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_checkresizeinterval",{"_index":2148,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_childscrolldim",{"_index":2317,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_clientconfig",{"_index":701,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["_config",{"_index":732,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["_elementref",{"_index":842,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["_enableunequalchildrensizes",{"_index":2114,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_form",{"_index":1812,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["_googleauth",{"_index":961,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["_horizontal",{"_index":2160,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_html",{"_index":1976,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["_html.classname",{"_index":1978,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["_html.innerhtml",{"_index":1985,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["_invisiblepaddingproperty",{"_index":2313,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_isenabled",{"_index":884,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["_items",{"_index":2152,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_margindir",{"_index":2319,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_ngcontrol",{"_index":1703,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["_offsettype",{"_index":2314,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_openiddata",{"_index":238,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["_pageoffsettype",{"_index":2316,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_parentscroll",{"_index":2172,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_renderer",{"_index":1012,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["_scheme",{"_index":1543,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["_schemedarkclassname",{"_index":1544,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["_schemelightclassname",{"_index":1545,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["_scrolldebouncetime",{"_index":2136,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_scrollthrottlingtime",{"_index":2132,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_scrolltype",{"_index":2315,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_sererrors",{"_index":1749,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["_states",{"_index":1741,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["_this",{"_index":2346,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["_translatedir",{"_index":2318,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["a[href",{"_index":625,"title":{},"body":{"injectables/DownloadService.html":{}}}],["abcdefghijklmnopqrstuvwxyz",{"_index":1673,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["above",{"_index":2760,"title":{},"body":{"license.html":{}}}],["absoluta",{"_index":616,"title":{},"body":{"injectables/DownloadService.html":{}}}],["absolute",{"_index":2085,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["abstractcontrol",{"_index":577,"title":{},"body":{"classes/CustomValidators.html":{},"interfaces/ErrorDetails.html":{},"directives/SerErrorsDirective.html":{}}}],["accesorios",{"_index":77,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{}}}],["access_token",{"_index":784,"title":{},"body":{"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{}}}],["accesstoken",{"_index":2888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acciones",{"_index":118,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{}}}],["accurate",{"_index":2370,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["acorde",{"_index":1593,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["action",{"_index":2785,"title":{},"body":{"license.html":{}}}],["active",{"_index":1909,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["actively",{"_index":2395,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["actual",{"_index":1311,"title":{},"body":{"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["actual_component",{"_index":1530,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["actualizar",{"_index":438,"title":{},"body":{"injectables/CookiesService.html":{}}}],["additional",{"_index":2403,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["additionaloffset",{"_index":2216,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["addmarker",{"_index":1062,"title":{},"body":{"classes/LeafletMap.html":{}}}],["addmarker(latlng",{"_index":1096,"title":{},"body":{"classes/LeafletMap.html":{}}}],["addnewbuttontext",{"_index":635,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["addnewitemonfilter",{"_index":636,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["address",{"_index":1495,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["address/address",{"_index":1931,"title":{},"body":{"modules/SerFormModule.html":{}}}],["addresscolcomponent",{"_index":1494,"title":{},"body":{"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["addscrolleventhandlers",{"_index":2480,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["adicionales",{"_index":498,"title":{},"body":{"classes/CustomValidators.html":{}}}],["adminitida",{"_index":569,"title":{},"body":{"classes/CustomValidators.html":{}}}],["admitidas",{"_index":575,"title":{},"body":{"classes/CustomValidators.html":{}}}],["afterviewinit",{"_index":1377,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SerErrorsDirective.html":{}}}],["agrega",{"_index":1599,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["al",{"_index":90,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"injectables/PrefersColorSchemeService.html":{},"index.html":{}}}],["aleatorias",{"_index":1663,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["aleatorio",{"_index":1646,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["alejar",{"_index":1868,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["alfanúmerico",{"_index":1648,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["alias",{"_index":2808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligntobeginning",{"_index":2215,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["alreadyexist",{"_index":167,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{},"coverage.html":{}}}],["alreadyexist(http",{"_index":157,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{}}}],["alt",{"_index":2871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alternar",{"_index":1610,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["ampliar",{"_index":1866,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["and/or",{"_index":2753,"title":{},"body":{"license.html":{}}}],["andres",{"_index":2730,"title":{},"body":{"license.html":{}}}],["angle",{"_index":1326,"title":{},"body":{"injectables/MapService.html":{}}}],["angular",{"_index":2688,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2675,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1874,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":144,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{}}}],["angular/compiler",{"_index":2677,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":148,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorDetails.html":{},"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"dependencies.html":{}}}],["angular/forms/src/model",{"_index":2011,"title":{},"body":{"interfaces/String.html":{}}}],["angular/platform",{"_index":1876,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":2678,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":2250,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["animationcompletedcallback",{"_index":2218,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["animationmilliseconds",{"_index":2217,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["animationrequest",{"_index":2234,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["any).fb",{"_index":812,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["any).gapi",{"_index":997,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["any).mapbox_access_token",{"_index":2889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any)[rule",{"_index":1798,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["anyways",{"_index":2382,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["api",{"_index":234,"title":{},"body":{"interfaces/CenterPoint.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"injectables/MapService.html":{}}}],["aplicar",{"_index":1592,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["app",{"_index":58,"title":{},"body":{"modules/AwsModule.html":{}}}],["appid",{"_index":726,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["applyfilter",{"_index":586,"title":{},"body":{"injectables/DataService.html":{}}}],["applyfilter(item",{"_index":588,"title":{},"body":{"injectables/DataService.html":{}}}],["appmodule",{"_index":64,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["aqu",{"_index":2717,"title":{},"body":{"index.html":{}}}],["archivo",{"_index":567,"title":{},"body":{"classes/CustomValidators.html":{}}}],["args",{"_index":2001,"title":{},"body":{"interfaces/String.html":{}}}],["argumentos",{"_index":467,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/LongPressDirective.html":{}}}],["arguments",{"_index":2342,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["arising",{"_index":2789,"title":{},"body":{"license.html":{}}}],["array",{"_index":2393,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["array(this.codelength",{"_index":1458,"title":{},"body":{"components/PinInputComponent.html":{}}}],["array.isarray(value",{"_index":2890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arrayendindex",{"_index":2554,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["arraygroupby",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["arraystartindex",{"_index":2533,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["arreglo",{"_index":246,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["assets",{"_index":130,"title":{},"body":{"injectables/AwsService.html":{}}}],["associated",{"_index":2740,"title":{},"body":{"license.html":{}}}],["async",{"_index":1396,"title":{},"body":{"components/PinInputComponent.html":{}}}],["asyncvalidatorfn",{"_index":145,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{}}}],["atleastpermissions",{"_index":239,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["atleastpermissions(requiredpermissions",{"_index":243,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["attribution",{"_index":2876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autenticación",{"_index":723,"title":{},"body":{"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["autenticarse",{"_index":231,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{}}}],["auth",{"_index":1002,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["authors",{"_index":2778,"title":{},"body":{"license.html":{}}}],["auto",{"_index":2076,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["automatico",{"_index":1614,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["available",{"_index":1342,"title":{},"body":{"injectables/MapService.html":{}}}],["averagechildheight",{"_index":2547,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["averagechildwidth",{"_index":2546,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["aws",{"_index":194,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["aws.service",{"_index":43,"title":{},"body":{"modules/AwsModule.html":{}}}],["aws/aws.service",{"_index":182,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["aws_config",{"_index":51,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["awsdata",{"_index":1,"title":{"interfaces/AwsData.html":{}},"body":{"interfaces/AwsData.html":{},"injectables/AwsService.html":{},"interfaces/S3.html":{},"coverage.html":{}}}],["awsdata(value",{"_index":123,"title":{},"body":{"injectables/AwsService.html":{}}}],["awsmodule",{"_index":22,"title":{"modules/AwsModule.html":{}},"body":{"modules/AwsModule.html":{},"modules.html":{}}}],["awsmodule.forroot",{"_index":54,"title":{},"body":{"modules/AwsModule.html":{}}}],["awsservice",{"_index":42,"title":{"injectables/AwsService.html":{}},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{}}}],["background",{"_index":202,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["backspace",{"_index":2862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["badge",{"_index":1517,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{}}}],["badge]'},{'name",{"_index":1515,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["badgeshowlimit",{"_index":637,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["basecolor",{"_index":366,"title":{},"body":{"classes/Color.html":{}}}],["basecolor.changehue(basecolor.hue",{"_index":370,"title":{},"body":{"classes/Color.html":{}}}],["basecolor.changelight(basecolor.light)).hsl",{"_index":372,"title":{},"body":{"classes/Color.html":{}}}],["basecolor.sat",{"_index":371,"title":{},"body":{"classes/Color.html":{}}}],["basepathfield",{"_index":529,"title":{},"body":{"classes/CustomValidators.html":{}}}],["basevalidationmodel",{"_index":137,"title":{"interfaces/BaseValidationModel.html":{}},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{},"coverage.html":{}}}],["become",{"_index":2396,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["behaviorsubject",{"_index":1834,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["behaviorsubject(null",{"_index":1828,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["bg",{"_index":1961,"title":{},"body":{"modules/SerUiModule.html":{}}}],["bgimage",{"_index":170,"title":{"interfaces/BgImage.html":{}},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{}}}],["bgimage]'},{'name",{"_index":1508,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["bgimagedirective",{"_index":187,"title":{"directives/BgImageDirective.html":{}},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["black",{"_index":379,"title":{},"body":{"classes/Color.html":{}}}],["block",{"_index":2069,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["blur",{"_index":1700,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["body",{"_index":1601,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.add(this.schemedarkclassname",{"_index":1605,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.add(this.schemelightclassname",{"_index":1609,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.contains(this.schemedarkclassname",{"_index":1607,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.contains(this.schemelightclassname",{"_index":1603,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.remove(this.schemedarkclassname",{"_index":1608,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["body.classlist.remove(this.schemelightclassname",{"_index":1604,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["boolean",{"_index":226,"title":{},"body":{"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{},"injectables/FullscreenService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerErrorsDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["bootstrap",{"_index":62,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["border",{"_index":2090,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["borrar",{"_index":440,"title":{},"body":{"injectables/CookiesService.html":{}}}],["bottleneck",{"_index":2376,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["bottom",{"_index":2289,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["boundingrect",{"_index":2301,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["boundingrect.height",{"_index":2312,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["boundingrect.width",{"_index":2311,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["bowser",{"_index":2692,"title":{},"body":{"dependencies.html":{}}}],["box",{"_index":2088,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["browser",{"_index":1877,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{},"dependencies.html":{}}}],["browsermodule",{"_index":1875,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{}}}],["browserwidth",{"_index":2657,"title":{},"body":{"coverage.html":{}}}],["bucket",{"_index":13,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/S3.html":{}}}],["bufferamount",{"_index":2128,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["bufferamount(value",{"_index":2131,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["buffersize",{"_index":2566,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["busqueda",{"_index":521,"title":{},"body":{"classes/CustomValidators.html":{}}}],["c",{"_index":2726,"title":{},"body":{"license.html":{}}}],["cabecera",{"_index":572,"title":{},"body":{"classes/CustomValidators.html":{}}}],["cacheditemslength",{"_index":2349,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["cachedmeasurement",{"_index":2207,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["cachedmeasurement.childheight",{"_index":2213,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["cachedmeasurement.childwidth",{"_index":2211,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["calculateviewport",{"_index":2570,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["callback",{"_index":839,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["cambiar",{"_index":1578,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["cambio",{"_index":1541,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["campo",{"_index":517,"title":{},"body":{"classes/CustomValidators.html":{}}}],["campos",{"_index":544,"title":{},"body":{"classes/CustomValidators.html":{}}}],["cancelanimationframe(animationrequest",{"_index":2248,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["caninputvalue",{"_index":1390,"title":{},"body":{"components/PinInputComponent.html":{}}}],["caninputvalue(value",{"_index":1412,"title":{},"body":{"components/PinInputComponent.html":{}}}],["canvas",{"_index":358,"title":{},"body":{"classes/Color.html":{}}}],["canvas.getcontext('2d",{"_index":365,"title":{},"body":{"classes/Color.html":{}}}],["canvas.height",{"_index":363,"title":{},"body":{"classes/Color.html":{}}}],["canvas.toblob(result",{"_index":390,"title":{},"body":{"classes/Color.html":{}}}],["canvas.width",{"_index":361,"title":{},"body":{"classes/Color.html":{}}}],["capital",{"_index":2005,"title":{},"body":{"interfaces/String.html":{}}}],["caracteres",{"_index":1640,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["carga",{"_index":804,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["cargarse",{"_index":806,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["catch((err",{"_index":1004,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["catcherror",{"_index":151,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["caused",{"_index":2361,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["causing",{"_index":2373,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["cc",{"_index":2662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["center",{"_index":381,"title":{},"body":{"classes/Color.html":{}}}],["centerpoint",{"_index":219,"title":{"interfaces/CenterPoint.html":{}},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"coverage.html":{}}}],["centerpoint(options",{"_index":1098,"title":{},"body":{"classes/LeafletMap.html":{}}}],["change",{"_index":330,"title":{},"body":{"classes/Color.html":{}}}],["changed",{"_index":2367,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["changedetectorref",{"_index":2047,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["changeeventarg",{"_index":2461,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["changehue",{"_index":296,"title":{},"body":{"classes/Color.html":{}}}],["changehue(hue",{"_index":318,"title":{},"body":{"classes/Color.html":{}}}],["changelight",{"_index":297,"title":{},"body":{"classes/Color.html":{}}}],["changelight(light",{"_index":321,"title":{},"body":{"classes/Color.html":{}}}],["changes.items",{"_index":2198,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["changes.items.previousvalue",{"_index":2199,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["changes.items.previousvalue.length",{"_index":2200,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["charge",{"_index":2736,"title":{},"body":{"license.html":{}}}],["charset",{"_index":1669,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["charset.length",{"_index":1678,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["check",{"_index":327,"title":{},"body":{"classes/Color.html":{},"injectables/MapService.html":{}}}],["checklatlog",{"_index":1287,"title":{},"body":{"injectables/MapService.html":{}}}],["checklatlog(lat",{"_index":1292,"title":{},"body":{"injectables/MapService.html":{}}}],["checkpropstate",{"_index":1803,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["checkpropstate(prop",{"_index":1814,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["checkresizeinterval",{"_index":2029,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["checkresizeinterval(value",{"_index":2150,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["checkscrollelementresized",{"_index":2300,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["checkscrollelementresizedtimer",{"_index":2147,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["checkstatus",{"_index":1804,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["child",{"_index":2391,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["childheight",{"_index":1035,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{}}}],["children",{"_index":2510,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["children.length",{"_index":2513,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["children[0][propertyname",{"_index":2515,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["childrenlength",{"_index":2512,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["childwidth",{"_index":1036,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{}}}],["chrome",{"_index":915,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["ciertas",{"_index":117,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{}}}],["circuit",{"_index":2407,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["claim",{"_index":2781,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1367,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["claimsservice",{"_index":71,"title":{"injectables/ClaimsService.html":{}},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"coverage.html":{}}}],["claro",{"_index":1613,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["claro/oscuro",{"_index":1579,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["clase",{"_index":901,"title":{},"body":{"injectables/FullscreenService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["clases",{"_index":283,"title":{},"body":{"classes/Color.html":{},"classes/CustomValidators.html":{},"classes/FacebookSDKConfig.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"classes/LeafletMap.html":{},"overview.html":{}}}],["class",{"_index":63,"title":{"classes/Color.html":{},"classes/CustomValidators.html":{},"classes/FacebookSDKConfig.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"classes/LeafletMap.html":{}},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"coverage.html":{}}}],["class.active",{"_index":1884,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.directive",{"_index":1965,"title":{},"body":{"modules/SerUiModule.html":{}}}],["class.directive.ts",{"_index":2019,"title":{},"body":{"directives/ToggleClassDirective.html":{},"coverage.html":{}}}],["class.directive.ts:10",{"_index":2024,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["class.directive.ts:12",{"_index":2022,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["class.directive.ts:8",{"_index":2023,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["class.dirty",{"_index":1885,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.disabled",{"_index":1886,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.focus",{"_index":1887,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.horizontal",{"_index":2061,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["class.invalid",{"_index":1888,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.longpress",{"_index":1214,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["class.pending",{"_index":1889,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.press",{"_index":1215,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["class.selfscroll",{"_index":2064,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["class.show",{"_index":1406,"title":{},"body":{"components/PinInputComponent.html":{}}}],["class.valid",{"_index":1890,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["class.vertical",{"_index":2063,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["classes",{"_index":638,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["clearall",{"_index":639,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["clearinterval(this.checkscrollelementresizedtimer",{"_index":2490,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["cleartimeout(this.inputchangedpromise",{"_index":851,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["cleartimeout(this.timeout",{"_index":1270,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["cli",{"_index":2689,"title":{},"body":{"dependencies.html":{}}}],["clic",{"_index":627,"title":{},"body":{"injectables/DownloadService.html":{},"index.html":{}}}],["click",{"_index":462,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["click(val",{"_index":469,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["clicks",{"_index":1255,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["client",{"_index":265,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["client.ts",{"_index":1361,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{}}}],["client_id",{"_index":958,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["clientconfig",{"_index":702,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["clientconfig(value",{"_index":712,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["clientrect",{"_index":2283,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["clientrect.height",{"_index":2525,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["clientrect.width",{"_index":2523,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["clipboard.directive",{"_index":1964,"title":{},"body":{"modules/SerUiModule.html":{}}}],["clipboard.directive.ts",{"_index":456,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"coverage.html":{}}}],["clipboard.directive.ts:10",{"_index":465,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["clipboard.directive.ts:12",{"_index":470,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["clipboard.directive.ts:9",{"_index":463,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["closed",{"_index":798,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["cluster",{"_index":1137,"title":{},"body":{"classes/LeafletMap.html":{}}}],["cluster_serfiltermodule",{"_index":1863,"title":{},"body":{"modules/SerFilterModule.html":{},"overview.html":{}}}],["cluster_serfiltermodule_declarations",{"_index":1864,"title":{},"body":{"modules/SerFilterModule.html":{},"overview.html":{}}}],["cluster_serfiltermodule_exports",{"_index":1865,"title":{},"body":{"modules/SerFilterModule.html":{},"overview.html":{}}}],["cluster_serformmodule",{"_index":1920,"title":{},"body":{"modules/SerFormModule.html":{},"overview.html":{}}}],["cluster_serformmodule_declarations",{"_index":1922,"title":{},"body":{"modules/SerFormModule.html":{}}}],["cluster_serformmodule_exports",{"_index":1921,"title":{},"body":{"modules/SerFormModule.html":{},"overview.html":{}}}],["cluster_serselectmodule",{"_index":1938,"title":{},"body":{"modules/SerSelectModule.html":{},"overview.html":{}}}],["cluster_serselectmodule_declarations",{"_index":1939,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["cluster_serselectmodule_exports",{"_index":1942,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["cluster_serselectmodule_imports",{"_index":1940,"title":{},"body":{"modules/SerSelectModule.html":{},"overview.html":{}}}],["cluster_serselectmodule_providers",{"_index":1941,"title":{},"body":{"modules/SerSelectModule.html":{},"overview.html":{}}}],["cluster_seruimodule",{"_index":1953,"title":{},"body":{"modules/SerUiModule.html":{},"overview.html":{}}}],["cluster_seruimodule_declarations",{"_index":1954,"title":{},"body":{"modules/SerUiModule.html":{}}}],["cluster_seruimodule_exports",{"_index":1955,"title":{},"body":{"modules/SerUiModule.html":{}}}],["cluster_virtualscrollermodule",{"_index":2038,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["cluster_virtualscrollermodule_declarations",{"_index":2040,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["cluster_virtualscrollermodule_exports",{"_index":2039,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["clustermarkers",{"_index":1084,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["cobertura",{"_index":2596,"title":{},"body":{"coverage.html":{}}}],["code",{"_index":2377,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["codeinputs",{"_index":1386,"title":{},"body":{"components/PinInputComponent.html":{}}}],["codelength",{"_index":1403,"title":{},"body":{"components/PinInputComponent.html":{}}}],["coincidan",{"_index":20,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["coincide",{"_index":515,"title":{},"body":{"classes/CustomValidators.html":{}}}],["col",{"_index":1496,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["col.component",{"_index":1933,"title":{},"body":{"modules/SerFormModule.html":{}}}],["col.component.ts",{"_index":2611,"title":{},"body":{"coverage.html":{}}}],["col/address",{"_index":1932,"title":{},"body":{"modules/SerFormModule.html":{},"coverage.html":{}}}],["color",{"_index":282,"title":{"classes/Color.html":{}},"body":{"classes/Color.html":{},"injectables/PrefersColorSchemeService.html":{},"coverage.html":{}}}],["colors",{"_index":332,"title":{},"body":{"classes/Color.html":{}}}],["commonmodule",{"_index":1873,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["compareitems",{"_index":2157,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["comparison",{"_index":580,"title":{},"body":{"classes/CustomValidators.html":{}}}],["compat",{"_index":2702,"title":{},"body":{"dependencies.html":{}}}],["completa",{"_index":879,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["component",{"_index":1369,"title":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["component_template",{"_index":1492,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["componente",{"_index":1489,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["componentes",{"_index":1371,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"overview.html":{}}}],["components",{"_index":1493,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{}}}],["con",{"_index":232,"title":{},"body":{"interfaces/CenterPoint.html":{},"classes/CustomValidators.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["conditions",{"_index":1815,"title":{},"body":{"directives/SerErrorsDirective.html":{},"license.html":{}}}],["config",{"_index":81,"title":{},"body":{"injectables/AwsService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["config(value",{"_index":755,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["config/facebook",{"_index":749,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["config/google",{"_index":975,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["configprovider",{"_index":36,"title":{},"body":{"modules/AwsModule.html":{}}}],["connected",{"_index":772,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["connection",{"_index":2790,"title":{},"body":{"license.html":{}}}],["console.log(&#39;current",{"_index":1315,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log(&#39;error",{"_index":1318,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log('changed",{"_index":1620,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["console.log('current",{"_index":1328,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log('error",{"_index":1329,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log('facebook",{"_index":761,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["console.log('google",{"_index":983,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["console.warn('facebook",{"_index":796,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["const",{"_index":357,"title":{},"body":{"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"injectables/DataService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{}}}],["constructor",{"_index":78,"title":{},"body":{"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["constructor(@inject(aws_config",{"_index":124,"title":{},"body":{"injectables/AwsService.html":{}}}],["constructor(@inject(forwardref",{"_index":1779,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["constructor(@inject(ng_fsdk_config",{"_index":757,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["constructor(@inject(ng_gapi_config",{"_index":981,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["constructor(_elementref",{"_index":840,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["constructor(_form",{"_index":1809,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["constructor(_ngcontrol",{"_index":1701,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["constructor(_sererrors",{"_index":1747,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["constructor(clientconfig",{"_index":703,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["constructor(config",{"_index":79,"title":{},"body":{"injectables/AwsService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["constructor(cookiesservice",{"_index":395,"title":{},"body":{"injectables/CookiesService.html":{}}}],["constructor(el",{"_index":212,"title":{},"body":{"directives/BgImageDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["constructor(hue",{"_index":299,"title":{},"body":{"classes/Color.html":{}}}],["constructor(options",{"_index":1067,"title":{},"body":{"classes/LeafletMap.html":{}}}],["constructor(preferscolorschemeservice",{"_index":1535,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["constructor(private",{"_index":70,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"injectables/ExternalScriptService.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["constructor(protected",{"_index":2258,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["constructor(public",{"_index":874,"title":{},"body":{"injectables/FullscreenService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{}}}],["constructor(template",{"_index":1682,"title":{},"body":{"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{}}}],["consultado",{"_index":276,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["consultar",{"_index":247,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["container",{"_index":1077,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["containerelementref",{"_index":2191,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["containeroffset",{"_index":2456,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["contener",{"_index":1366,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["content",{"_index":2079,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["content.children[0",{"_index":2520,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["contentchild",{"_index":1901,"title":{},"body":{"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{}}}],["contentchild('container",{"_index":2190,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["contentchild('header",{"_index":2188,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["contentchild(sercontroldirective",{"_index":1898,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["contentelementref",{"_index":2185,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["context",{"_index":2639,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":2786,"title":{},"body":{"license.html":{}}}],["contraseña",{"_index":1634,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["contraseñas",{"_index":1662,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["contributors",{"_index":2877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":159,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorDetails.html":{},"directives/SerErrorsDirective.html":{}}}],["control's",{"_index":500,"title":{},"body":{"classes/CustomValidators.html":{}}}],["control.directive",{"_index":1903,"title":{},"body":{"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{}}}],["control.directive.ts",{"_index":1691,"title":{},"body":{"directives/SerControlDirective.html":{},"coverage.html":{}}}],["control.directive.ts:11",{"_index":1711,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:12",{"_index":1712,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:13",{"_index":1710,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:14",{"_index":1716,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:15",{"_index":1714,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:16",{"_index":1715,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:17",{"_index":1713,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:18",{"_index":1702,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:23",{"_index":1705,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:28",{"_index":1704,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:32",{"_index":1709,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:41",{"_index":1707,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.directive.ts:49",{"_index":1706,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["control.errors",{"_index":1852,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["controlname",{"_index":1839,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["controlpropsstate",{"_index":1846,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["controlvalueaccessor",{"_index":1378,"title":{},"body":{"components/PinInputComponent.html":{}}}],["convertir",{"_index":2003,"title":{},"body":{"interfaces/String.html":{}}}],["cookie",{"_index":399,"title":{},"body":{"injectables/CookiesService.html":{},"modules/FacebookSDKModule.html":{}}}],["cookie.substr(0",{"_index":446,"title":{},"body":{"injectables/CookiesService.html":{}}}],["cookies",{"_index":408,"title":{},"body":{"injectables/CookiesService.html":{}}}],["cookiesservice",{"_index":393,"title":{"injectables/CookiesService.html":{}},"body":{"injectables/CookiesService.html":{},"coverage.html":{}}}],["copied",{"_index":459,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["copies",{"_index":2755,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1963,"title":{},"body":{"modules/SerUiModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["copyright",{"_index":2725,"title":{},"body":{"license.html":{}}}],["copytoclipboard",{"_index":457,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["copytoclipboard]'},{'name",{"_index":1509,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["copytoclipboarddirective",{"_index":454,"title":{"directives/CopyToClipboardDirective.html":{}},"body":{"directives/CopyToClipboardDirective.html":{},"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["correctamente",{"_index":807,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["countitemsperwrapgroup",{"_index":2503,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["coverage",{"_index":2595,"title":{"coverage.html":{}},"body":{}}],["crea",{"_index":890,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["create",{"_index":1136,"title":{},"body":{"classes/LeafletMap.html":{}}}],["credential_id",{"_index":1362,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["ctrl",{"_index":2869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":364,"title":{},"body":{"classes/Color.html":{}}}],["ctx.beginpath",{"_index":367,"title":{},"body":{"classes/Color.html":{}}}],["ctx.fill",{"_index":373,"title":{},"body":{"classes/Color.html":{}}}],["ctx.fillstyle",{"_index":369,"title":{},"body":{"classes/Color.html":{}}}],["ctx.filltext(initials.touppercase",{"_index":388,"title":{},"body":{"classes/Color.html":{}}}],["ctx.font",{"_index":374,"title":{},"body":{"classes/Color.html":{}}}],["ctx.rect(0",{"_index":368,"title":{},"body":{"classes/Color.html":{}}}],["ctx.textalign",{"_index":380,"title":{},"body":{"classes/Color.html":{}}}],["ctx.textbaseline",{"_index":382,"title":{},"body":{"classes/Color.html":{}}}],["currenttween",{"_index":2347,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["customvalidators",{"_index":494,"title":{"classes/CustomValidators.html":{}},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["cutprecision",{"_index":1288,"title":{},"body":{"injectables/MapService.html":{}}}],["cutprecision(obj",{"_index":1297,"title":{},"body":{"injectables/MapService.html":{}}}],["código",{"_index":1644,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["damages",{"_index":2782,"title":{},"body":{"license.html":{}}}],["dark",{"_index":1546,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["data",{"_index":595,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["data.filter((item",{"_index":599,"title":{},"body":{"injectables/DataService.html":{}}}],["data.scrollposition",{"_index":2246,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dataservice",{"_index":583,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":426,"title":{},"body":{"injectables/CookiesService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["datos",{"_index":210,"title":{},"body":{"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["db",{"_index":514,"title":{},"body":{"classes/CustomValidators.html":{}}}],["de",{"_index":129,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"components/SerFormElementComponent.html":{},"directives/ToggleClassDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["deal",{"_index":2743,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2791,"title":{},"body":{"license.html":{}}}],["debe",{"_index":530,"title":{},"body":{"classes/CustomValidators.html":{}}}],["deberia",{"_index":531,"title":{},"body":{"classes/CustomValidators.html":{}}}],["debounce(func",{"_index":2336,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["declaraciones",{"_index":1870,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["declare",{"_index":2002,"title":{},"body":{"interfaces/String.html":{}}}],["decoradores",{"_index":1441,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["deep",{"_index":2087,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["default",{"_index":2264,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["defaultchildheight",{"_index":2527,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["defaultchildwidth",{"_index":2526,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["defaultoptions",{"_index":1666,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"modules/VirtualScrollerModule.html":{}}}],["defaultoptions?.letterslowercase",{"_index":1672,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["defaultoptions?.lettersuppercase",{"_index":1674,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["defaultoptions?.numbers",{"_index":1670,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["defaultoptions?.specialchars",{"_index":1675,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["defaultopts",{"_index":1980,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["defaultopts.duration",{"_index":1994,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["defaultopts.iconname",{"_index":1986,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["defaultscrolllengthperwrapgroup",{"_index":2552,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["defecto",{"_index":218,"title":{},"body":{"directives/BgImageDirective.html":{},"classes/Color.html":{},"directives/CopyToClipboardDirective.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"miscellaneous/variables.html":{}}}],["definido",{"_index":30,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["del",{"_index":87,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{},"injectables/FullscreenService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["delay",{"_index":152,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["delay(1000",{"_index":161,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["delete",{"_index":409,"title":{},"body":{"injectables/CookiesService.html":{},"miscellaneous/variables.html":{}}}],["delete(name",{"_index":413,"title":{},"body":{"injectables/CookiesService.html":{}}}],["deleteall",{"_index":410,"title":{},"body":{"injectables/CookiesService.html":{}}}],["demostraciones",{"_index":2716,"title":{},"body":{"index.html":{}}}],["dependencias",{"_index":2674,"title":{},"body":{"dependencies.html":{}}}],["dependencies",{"_index":1860,"title":{"dependencies.html":{}},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["deprecation",{"_index":1625,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["descarga",{"_index":622,"title":{},"body":{"injectables/DownloadService.html":{}}}],["descripción",{"_index":84,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"injectables/MapService.html":{},"overview.html":{}}}],["description",{"_index":44,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["desea",{"_index":1591,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["deshabilita",{"_index":881,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["devuelve",{"_index":37,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/WhenScrolledDirective.html":{}}}],["dicho",{"_index":513,"title":{},"body":{"classes/CustomValidators.html":{}}}],["different",{"_index":2364,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions",{"_index":2225,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.itemcount",{"_index":2564,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.itemsperwrapgroup",{"_index":2555,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.maxscrollposition",{"_index":2569,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.scrolllength",{"_index":2572,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.viewportlength",{"_index":2568,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions.wrapgroupsperpage",{"_index":2228,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["dimensions[this._childscrolldim",{"_index":2229,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["directiva",{"_index":1490,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["directivas",{"_index":207,"title":{},"body":{"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{},"overview.html":{}}}],["directive",{"_index":174,"title":{"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{},"coverage.html":{}}}],["directives",{"_index":1507,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["dirty",{"_index":1693,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["disable",{"_index":885,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["disabled",{"_index":1694,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["disabledkey",{"_index":640,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["dismiss",{"_index":1205,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["display",{"_index":2068,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["disponible",{"_index":2794,"title":{},"body":{"modules.html":{}}}],["disposeresizehandler",{"_index":2351,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["disposescrollhandler",{"_index":2350,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["distance",{"_index":1327,"title":{},"body":{"injectables/MapService.html":{}}}],["distancepoints",{"_index":1289,"title":{},"body":{"injectables/MapService.html":{}}}],["distancepoints(options",{"_index":1301,"title":{},"body":{"injectables/MapService.html":{}}}],["distancia",{"_index":1303,"title":{},"body":{"injectables/MapService.html":{}}}],["distribute",{"_index":2751,"title":{},"body":{"license.html":{}}}],["docheck",{"_index":1739,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["document",{"_index":909,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["document.addeventlistener('fullscreenchange",{"_index":923,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["document.addeventlistener('mozfullscreenchange",{"_index":927,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["document.addeventlistener('msfullscreenchange",{"_index":926,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["document.addeventlistener('webkitfullscreenchange",{"_index":925,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["document.body",{"_index":2479,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["document.body.append(_html",{"_index":1988,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["document.body.appendchild(selbox",{"_index":488,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["document.body.appendchild(this.downloadelement",{"_index":621,"title":{},"body":{"injectables/DownloadService.html":{}}}],["document.body.removechild(_html",{"_index":1992,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["document.body.removechild(selbox",{"_index":492,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["document.body.removechild(this.downloadelement",{"_index":632,"title":{},"body":{"injectables/DownloadService.html":{}}}],["document.cookie",{"_index":443,"title":{},"body":{"injectables/CookiesService.html":{}}}],["document.cookie.split",{"_index":445,"title":{},"body":{"injectables/CookiesService.html":{}}}],["document.createelement('a",{"_index":618,"title":{},"body":{"injectables/DownloadService.html":{}}}],["document.createelement('canvas",{"_index":360,"title":{},"body":{"classes/Color.html":{}}}],["document.createelement('div",{"_index":1977,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["document.createelement('script",{"_index":693,"title":{},"body":{"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["document.createelement('textarea",{"_index":478,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["document.documentelement",{"_index":929,"title":{},"body":{"injectables/FullscreenService.html":{},"modules/VirtualScrollerModule.html":{}}}],["document.execcommand('copy",{"_index":491,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["document.getelementbyid(id",{"_index":691,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["document.getelementsbytagname('body')[0",{"_index":1602,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["document.getelementsbytagname('head')[0].appendchild(node",{"_index":821,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["document.getelementsbytagname('script')[0",{"_index":690,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["document.scrollingelement",{"_index":2478,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["documentación",{"_index":2597,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation",{"_index":2741,"title":{},"body":{"license.html":{}}}],["dom",{"_index":1373,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["domain",{"_index":415,"title":{},"body":{"injectables/CookiesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dominio",{"_index":418,"title":{},"body":{"injectables/CookiesService.html":{}}}],["don't",{"_index":1253,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["done",{"_index":1982,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["dos",{"_index":1306,"title":{},"body":{"injectables/MapService.html":{}}}],["down",{"_index":2858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadelement",{"_index":612,"title":{},"body":{"injectables/DownloadService.html":{}}}],["downloadservice",{"_index":610,"title":{"injectables/DownloadService.html":{}},"body":{"injectables/DownloadService.html":{},"coverage.html":{}}}],["dropdownsettings",{"_index":633,"title":{"interfaces/DropdownSettings.html":{}},"body":{"interfaces/DropdownSettings.html":{},"coverage.html":{}}}],["duplicatepathfield",{"_index":541,"title":{},"body":{"classes/CustomValidators.html":{}}}],["duration",{"_index":1157,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["dynamic",{"_index":582,"title":{},"body":{"classes/CustomValidators.html":{},"dependencies.html":{}}}],["d{5}))?/g",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d{8})|(\\d{10})|(\\d{11})|(\\d{6",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e",{"_index":907,"title":{},"body":{"injectables/FullscreenService.html":{},"components/PinInputComponent.html":{},"index.html":{}}}],["e.data",{"_index":1478,"title":{},"body":{"components/PinInputComponent.html":{}}}],["e.preventdefault",{"_index":1482,"title":{},"body":{"components/PinInputComponent.html":{}}}],["e.stoppropagation",{"_index":1483,"title":{},"body":{"components/PinInputComponent.html":{}}}],["e.target",{"_index":1477,"title":{},"body":{"components/PinInputComponent.html":{}}}],["each",{"_index":2402,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["easing(tween.easing.quadratic.out",{"_index":2243,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["edge",{"_index":920,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["ejem",{"_index":560,"title":{},"body":{"classes/CustomValidators.html":{},"injectables/ExternalScriptService.html":{}}}],["ejemplo",{"_index":69,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["el",{"_index":48,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/ToggleClassDirective.html":{}}}],["elem",{"_index":928,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["elem.mozrequestfullscreen",{"_index":934,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["elem.msrequestfullscreen",{"_index":932,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["elem.requestfullscreen",{"_index":930,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["elem.webkitrequestfullscreen",{"_index":931,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["element",{"_index":865,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{}}}],["element'},{'name",{"_index":1501,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["element.component",{"_index":1925,"title":{},"body":{"modules/SerFormModule.html":{}}}],["element.component.ts",{"_index":1880,"title":{},"body":{"components/SerFormElementComponent.html":{},"coverage.html":{}}}],["element.component.ts:13",{"_index":1899,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:14",{"_index":1900,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:17",{"_index":1893,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:22",{"_index":1894,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:27",{"_index":1891,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:32",{"_index":1892,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:37",{"_index":1897,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:42",{"_index":1895,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.component.ts:47",{"_index":1896,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["element.getboundingclientrect",{"_index":2284,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["element/ser",{"_index":1690,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"coverage.html":{}}}],["elementclientrect",{"_index":2495,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["elementclientrect.left",{"_index":2499,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["elementclientrect.top",{"_index":2501,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["elemento",{"_index":1487,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["elementref",{"_index":177,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["elimina",{"_index":404,"title":{},"body":{"injectables/CookiesService.html":{}}}],["elm",{"_index":1016,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["elm._basescrollheight",{"_index":1023,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["elm.scrollheight",{"_index":1024,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["elm.value",{"_index":1022,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["email",{"_index":790,"title":{},"body":{"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"classes/GoogleClientConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emite",{"_index":809,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["emulando",{"_index":626,"title":{},"body":{"injectables/DownloadService.html":{}}}],["en",{"_index":31,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["enable",{"_index":886,"title":{},"body":{"injectables/FullscreenService.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["enablecheckall",{"_index":641,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["enabledark",{"_index":1547,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["enablefilterselectall",{"_index":642,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["enablelight",{"_index":1548,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["enablesearchfilter",{"_index":643,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["enableunequalchildrensizes",{"_index":2115,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["enableunequalchildrensizes(value",{"_index":2117,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["encapsulation",{"_index":1881,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["end",{"_index":2559,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["endchanged",{"_index":2432,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["endindex",{"_index":1047,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["endindexwithbuffer",{"_index":1048,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["endindexwithinwrapgroup",{"_index":2556,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["endpress",{"_index":1206,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["enough",{"_index":2371,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["enter",{"_index":2861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entradas",{"_index":211,"title":{},"body":{"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["entrar",{"_index":902,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["entre",{"_index":1305,"title":{},"body":{"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["eqpos",{"_index":447,"title":{},"body":{"injectables/CookiesService.html":{}}}],["err",{"_index":995,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["error",{"_index":1338,"title":{},"body":{"injectables/MapService.html":{}}}],["error(msg",{"_index":1317,"title":{},"body":{"injectables/MapService.html":{}}}],["error.directive",{"_index":1926,"title":{},"body":{"modules/SerFormModule.html":{}}}],["error.directive.ts",{"_index":1738,"title":{},"body":{"directives/SerErrorDirective.html":{},"coverage.html":{}}}],["error.directive.ts:20",{"_index":1750,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:24",{"_index":1751,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:29",{"_index":1752,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:31",{"_index":1759,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:32",{"_index":1758,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:33",{"_index":1760,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:34",{"_index":1757,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:35",{"_index":1748,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:39",{"_index":1755,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:58",{"_index":1753,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["error.directive.ts:64",{"_index":1754,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["errordetails",{"_index":662,"title":{"interfaces/ErrorDetails.html":{}},"body":{"interfaces/ErrorDetails.html":{},"directives/SerErrorsDirective.html":{},"coverage.html":{}}}],["errorname",{"_index":666,"title":{},"body":{"interfaces/ErrorDetails.html":{},"directives/SerErrorsDirective.html":{}}}],["errornames",{"_index":1742,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["erroroptions",{"_index":667,"title":{},"body":{"interfaces/ErrorDetails.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"miscellaneous/typealiases.html":{}}}],["errors",{"_index":1770,"title":{},"body":{"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{}}}],["errors.control.haserror(errors.errorname",{"_index":1794,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["errors.directive",{"_index":1771,"title":{},"body":{"directives/SerErrorDirective.html":{},"modules/SerFormModule.html":{}}}],["errors.directive.ts",{"_index":1800,"title":{},"body":{"directives/SerErrorsDirective.html":{},"coverage.html":{}}}],["errors.directive.ts:16",{"_index":1813,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:18",{"_index":1829,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:19",{"_index":1827,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:20",{"_index":1811,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:24",{"_index":1831,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:29",{"_index":1833,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:33",{"_index":1821,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:37",{"_index":1823,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:41",{"_index":1819,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:46",{"_index":1816,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:62",{"_index":1817,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:78",{"_index":1825,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:82",{"_index":1824,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.directive.ts:89",{"_index":1826,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["errors.ts",{"_index":665,"title":{},"body":{"interfaces/ErrorDetails.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["errors/ser",{"_index":664,"title":{},"body":{"interfaces/ErrorDetails.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFormModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["es",{"_index":111,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{}}}],["escape",{"_index":2860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escapetoclose",{"_index":644,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["escuchadores",{"_index":460,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/LongPressDirective.html":{},"directives/SerControlDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["especiales",{"_index":1641,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["esquema",{"_index":1537,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["estado",{"_index":883,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["etiqueta",{"_index":687,"title":{},"body":{"injectables/ExternalScriptService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["ev",{"_index":1617,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{},"directives/WhenScrolledDirective.html":{}}}],["ev.matches",{"_index":1619,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["ev.target.clientheight",{"_index":2587,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["ev.target.scrollheight",{"_index":2588,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["event",{"_index":468,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"injectables/FullscreenService.html":{},"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{},"license.html":{}}}],["event.button",{"_index":1256,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["event.clientx",{"_index":1258,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["event.clienty",{"_index":1260,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["event.preventdefault",{"_index":1266,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["event.touches[0].clientx",{"_index":1261,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["event.touches[0].clienty",{"_index":1262,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["eventemitter",{"_index":464,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/GoogleSDKService.html":{},"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["evento",{"_index":810,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["example",{"_index":50,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["excede",{"_index":553,"title":{},"body":{"classes/CustomValidators.html":{}}}],["except",{"_index":2401,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["excluir",{"_index":520,"title":{},"body":{"classes/CustomValidators.html":{}}}],["executerefreshoutsideangularzone",{"_index":2112,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["existe",{"_index":512,"title":{},"body":{"classes/CustomValidators.html":{}}}],["expires",{"_index":425,"title":{},"body":{"injectables/CookiesService.html":{}}}],["expires=thu",{"_index":448,"title":{},"body":{"injectables/CookiesService.html":{}}}],["export",{"_index":12,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{}}}],["exporta",{"_index":1871,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["exportas",{"_index":1836,"title":{},"body":{"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["exports",{"_index":1862,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["express",{"_index":2769,"title":{},"body":{"license.html":{}}}],["ext",{"_index":573,"title":{},"body":{"classes/CustomValidators.html":{}}}],["extends",{"_index":866,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"interfaces/IViewport.html":{}}}],["extensiones",{"_index":574,"title":{},"body":{"classes/CustomValidators.html":{}}}],["extensión",{"_index":568,"title":{},"body":{"classes/CustomValidators.html":{}}}],["externalscriptservice",{"_index":668,"title":{"injectables/ExternalScriptService.html":{}},"body":{"injectables/ExternalScriptService.html":{},"coverage.html":{}}}],["externos",{"_index":683,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["extiende",{"_index":857,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"interfaces/IViewport.html":{}}}],["facebook",{"_index":685,"title":{},"body":{"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{}}}],["facebook.initparams",{"_index":710,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{}}}],["facebook_client_id",{"_index":727,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["facebookprofile",{"_index":782,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["facebookprofile.picture",{"_index":793,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["facebooksdkconfig",{"_index":698,"title":{"classes/FacebookSDKConfig.html":{}},"body":{"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"coverage.html":{}}}],["facebooksdkconfig(config",{"_index":759,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["facebooksdkmodule",{"_index":714,"title":{"modules/FacebookSDKModule.html":{}},"body":{"modules/FacebookSDKModule.html":{},"modules.html":{}}}],["facebooksdkmodule.forroot",{"_index":725,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["facebooksdkservice",{"_index":720,"title":{"injectables/FacebookSDKService.html":{}},"body":{"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"coverage.html":{}}}],["facebookuserprofile",{"_index":747,"title":{"interfaces/FacebookUserProfile.html":{}},"body":{"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"coverage.html":{}}}],["false",{"_index":603,"title":{},"body":{"injectables/DataService.html":{},"injectables/FacebookSDKService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["fb.api('/me",{"_index":773,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fb.api('/me/picture",{"_index":777,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fb.appevents.logpageview",{"_index":824,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fb.init(this.config.clientconfig",{"_index":823,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fb.login((response",{"_index":770,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fichero",{"_index":5,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["field",{"_index":139,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["fields",{"_index":774,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fijaciones",{"_index":1213,"title":{},"body":{"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"components/SerFormElementComponent.html":{}}}],["file",{"_index":173,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"classes/CustomValidators.html":{}}}],["file/read",{"_index":180,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["files",{"_index":2742,"title":{},"body":{"license.html":{}}}],["filter",{"_index":589,"title":{},"body":{"injectables/DataService.html":{}}}],["filter'},{'name",{"_index":1499,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["filter((obj",{"_index":1785,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["filter(boolean",{"_index":1784,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["filter.component",{"_index":1879,"title":{},"body":{"modules/SerFilterModule.html":{}}}],["filter.component.ts",{"_index":2613,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.interface.ts",{"_index":830,"title":{},"body":{"interfaces/FilterSettings.html":{},"coverage.html":{}}}],["filter.module",{"_index":1935,"title":{},"body":{"modules/SerFormModule.html":{}}}],["filter.module.ts",{"_index":1869,"title":{},"body":{"modules/SerFilterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter/ser",{"_index":1934,"title":{},"body":{"modules/SerFormModule.html":{}}}],["filterdata",{"_index":587,"title":{},"body":{"injectables/DataService.html":{}}}],["filterdata(data",{"_index":593,"title":{},"body":{"injectables/DataService.html":{}}}],["filteredlist",{"_index":598,"title":{},"body":{"injectables/DataService.html":{}}}],["filterselectalltext",{"_index":645,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["filtersettings",{"_index":828,"title":{"interfaces/FilterSettings.html":{}},"body":{"interfaces/FilterSettings.html":{},"coverage.html":{}}}],["filterunselectalltext",{"_index":646,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["finish",{"_index":1959,"title":{},"body":{"modules/SerUiModule.html":{}}}],["finishtyping",{"_index":835,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["finishtyping]'},{'name",{"_index":1510,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["finishtypingdirective",{"_index":831,"title":{"directives/FinishTypingDirective.html":{}},"body":{"directives/FinishTypingDirective.html":{},"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firefox",{"_index":922,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["first_name",{"_index":786,"title":{},"body":{"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{}}}],["first_name,last_name,email",{"_index":775,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["firstoffset",{"_index":2514,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["firstrun",{"_index":2197,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["fitmarkersbounds",{"_index":1063,"title":{},"body":{"classes/LeafletMap.html":{}}}],["fitmarkersbounds(padding",{"_index":1100,"title":{},"body":{"classes/LeafletMap.html":{}}}],["fitness",{"_index":2774,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":480,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["fjs",{"_index":689,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["fjs.parentnode.insertbefore(js",{"_index":697,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["flex",{"_index":2095,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["flyto",{"_index":1102,"title":{},"body":{"classes/LeafletMap.html":{}}}],["fn",{"_index":1430,"title":{},"body":{"components/PinInputComponent.html":{}}}],["focus",{"_index":1695,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["following",{"_index":2759,"title":{},"body":{"license.html":{}}}],["force",{"_index":2356,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["forin",{"_index":1145,"title":{},"body":{"classes/LeafletMap.html":{}}}],["form",{"_index":499,"title":{},"body":{"classes/CustomValidators.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"coverage.html":{}}}],["form.module.ts",{"_index":1924,"title":{},"body":{"modules/SerFormModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":146,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["formelement",{"_index":1883,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["formgroup",{"_index":2012,"title":{},"body":{"interfaces/String.html":{}}}],["formgroup.prototype.setvalueanderrors",{"_index":2016,"title":{},"body":{"interfaces/String.html":{}}}],["formgroupdirective",{"_index":1810,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["formsmodule",{"_index":1878,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{}}}],["forroot",{"_index":27,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["forroot(configprovider",{"_index":28,"title":{},"body":{"modules/AwsModule.html":{}}}],["forroot(fsdkconfigprovider",{"_index":717,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["forroot(gapiconfigprovider",{"_index":951,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["forward",{"_index":2412,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["forwardref",{"_index":1381,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{}}}],["found",{"_index":602,"title":{},"body":{"injectables/DataService.html":{}}}],["free",{"_index":2735,"title":{},"body":{"license.html":{}}}],["fromintersectionobserver",{"_index":2669,"title":{},"body":{"coverage.html":{}}}],["frommutationobserver",{"_index":2670,"title":{},"body":{"coverage.html":{}}}],["fsdkconfigprovider",{"_index":719,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["fsdkurl",{"_index":734,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["fsdoc",{"_index":908,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.exitfullscreen",{"_index":935,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.fullscreenelement",{"_index":910,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.mozcancelfullscreen",{"_index":938,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.mozfullscreenelement",{"_index":921,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.msexitfullscreen",{"_index":937,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.msfullscreenelement",{"_index":918,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.webkitexitfullscreen",{"_index":936,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdoc.webkitfullscreenelement",{"_index":913,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["fsdocument",{"_index":854,"title":{"interfaces/FsDocument.html":{}},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"coverage.html":{}}}],["fsdocumentelement",{"_index":867,"title":{"interfaces/FsDocumentElement.html":{}},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"coverage.html":{}}}],["fullscreen",{"_index":892,"title":{},"body":{"injectables/FullscreenService.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["fullscreenservice",{"_index":872,"title":{"injectables/FullscreenService.html":{}},"body":{"injectables/FullscreenService.html":{},"coverage.html":{}}}],["función",{"_index":680,"title":{},"body":{"injectables/ExternalScriptService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/String.html":{}}}],["function",{"_index":156,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/Color.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["furnished",{"_index":2758,"title":{},"body":{"license.html":{}}}],["gambadeveloper@sersoluciones.com",{"_index":2731,"title":{},"body":{"license.html":{}}}],["gapi",{"_index":684,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["gapi.auth2.clientconfig",{"_index":946,"title":{},"body":{"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"interfaces/GoogleUserProfile.html":{}}}],["gapi.auth2.googleauth",{"_index":967,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gapi.auth2.googleuser",{"_index":985,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gapi.auth2.init(this.config.clientconfig).then((auth",{"_index":1000,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gapi.load('auth2",{"_index":999,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gapiconfigprovider",{"_index":953,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["gapiurl",{"_index":962,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gb",{"_index":559,"title":{},"body":{"classes/CustomValidators.html":{}}}],["general",{"_index":2800,"title":{},"body":{"overview.html":{}}}],["generar",{"_index":1643,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["generated",{"_index":333,"title":{},"body":{"classes/Color.html":{}}}],["generatedefaultimage",{"_index":2648,"title":{},"body":{"coverage.html":{}}}],["generatedefaultimage(name",{"_index":350,"title":{},"body":{"classes/Color.html":{}}}],["generatepassword",{"_index":2665,"title":{},"body":{"coverage.html":{}}}],["generatepassword(options",{"_index":1665,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["generatevalue",{"_index":1391,"title":{},"body":{"components/PinInputComponent.html":{}}}],["geolocation",{"_index":1331,"title":{},"body":{"injectables/MapService.html":{}}}],["get(name",{"_index":420,"title":{},"body":{"injectables/CookiesService.html":{}}}],["get(url",{"_index":614,"title":{},"body":{"injectables/DownloadService.html":{}}}],["getall",{"_index":411,"title":{},"body":{"injectables/CookiesService.html":{}}}],["getawsdata",{"_index":96,"title":{},"body":{"injectables/AwsService.html":{}}}],["getclientconfig",{"_index":706,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["getcomputedstyle(element",{"_index":2285,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["getconfig",{"_index":743,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["getcurrentposition",{"_index":1290,"title":{},"body":{"injectables/MapService.html":{}}}],["getelementsize(element",{"_index":2282,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["getelementsoffset",{"_index":2491,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["geterror",{"_index":1805,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["geterror(name",{"_index":1818,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["geterrors",{"_index":1830,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["getfiletype",{"_index":2607,"title":{},"body":{"coverage.html":{}}}],["getgoogleauth",{"_index":971,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["gethaserrors",{"_index":1832,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["getisenabled",{"_index":897,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["getobjectbyvalue",{"_index":2644,"title":{},"body":{"coverage.html":{}}}],["getobjindexbyvalue",{"_index":2645,"title":{},"body":{"coverage.html":{}}}],["getopeniddata",{"_index":260,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["getrandomint",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["getrandomint(min",{"_index":1660,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["gets3bgurl",{"_index":75,"title":{},"body":{"injectables/AwsService.html":{}}}],["gets3bgurl(key",{"_index":82,"title":{},"body":{"injectables/AwsService.html":{}}}],["gets3url",{"_index":76,"title":{},"body":{"injectables/AwsService.html":{}}}],["gets3url(key",{"_index":93,"title":{},"body":{"injectables/AwsService.html":{}}}],["getscheme",{"_index":1565,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["getschemedarkclassname",{"_index":1573,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["getschemelightclassname",{"_index":1569,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["getscrollelement",{"_index":2476,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["getscrollheight",{"_index":1010,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["getscrollheight(elm",{"_index":1014,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["getstyles",{"_index":2658,"title":{},"body":{"coverage.html":{}}}],["getting",{"_index":1319,"title":{"index.html":{},"license.html":{}},"body":{"injectables/MapService.html":{}}}],["ghpages",{"_index":2690,"title":{},"body":{"dependencies.html":{}}}],["gmt",{"_index":453,"title":{},"body":{"injectables/CookiesService.html":{}}}],["google",{"_index":955,"title":{},"body":{"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{}}}],["google_client_id",{"_index":959,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["googleauth",{"_index":963,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["googleauth(value",{"_index":980,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["googleclientconfig",{"_index":942,"title":{"classes/GoogleClientConfig.html":{}},"body":{"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"coverage.html":{}}}],["googleprofile",{"_index":987,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["googlesdkconfig",{"_index":947,"title":{"classes/GoogleSDKConfig.html":{}},"body":{"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"coverage.html":{}}}],["googlesdkconfig(config",{"_index":982,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["googlesdkmodule",{"_index":949,"title":{"modules/GoogleSDKModule.html":{}},"body":{"modules/GoogleSDKModule.html":{},"modules.html":{}}}],["googlesdkmodule.forroot",{"_index":957,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["googlesdkservice",{"_index":954,"title":{"injectables/GoogleSDKService.html":{}},"body":{"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"coverage.html":{}}}],["googleuserprofile",{"_index":944,"title":{"interfaces/GoogleUserProfile.html":{}},"body":{"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"coverage.html":{}}}],["gps",{"_index":1310,"title":{},"body":{"injectables/MapService.html":{}}}],["granted",{"_index":2734,"title":{},"body":{"license.html":{}}}],["greaterorequalthan",{"_index":501,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["greaterorequalthan(basepathfield",{"_index":523,"title":{},"body":{"classes/CustomValidators.html":{}}}],["greaterthan",{"_index":502,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["greaterthan(basepathfield",{"_index":534,"title":{},"body":{"classes/CustomValidators.html":{}}}],["green",{"_index":1981,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["group",{"_index":1154,"title":{},"body":{"classes/LeafletMap.html":{}}}],["groupby",{"_index":647,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["groupwrapper",{"_index":1144,"title":{},"body":{"classes/LeafletMap.html":{}}}],["groupwrapper.push(this.markers[key",{"_index":1147,"title":{},"body":{"classes/LeafletMap.html":{}}}],["grow",{"_index":1936,"title":{},"body":{"modules/SerFormModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["growoninput",{"_index":1009,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["growoninput]'},{'name",{"_index":1511,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["growoninputdirective",{"_index":1005,"title":{"directives/GrowOnInputDirective.html":{}},"body":{"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["gráfica",{"_index":2793,"title":{},"body":{"modules.html":{}}}],["guid",{"_index":1645,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"coverage.html":{}}}],["habilita",{"_index":876,"title":{},"body":{"injectables/FullscreenService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["habilita/deshablita",{"_index":939,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["handlechanged",{"_index":2464,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["haserror",{"_index":1806,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["haserror(name",{"_index":1820,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["haserrors",{"_index":1808,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["haspdfviewer",{"_index":2659,"title":{},"body":{"coverage.html":{}}}],["haspermission",{"_index":240,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["haspermission(requiredpermission",{"_index":251,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["haspermissions",{"_index":241,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["haspermissions(requiredpermissions",{"_index":256,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["hasvalue",{"_index":105,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"classes/Color.html":{},"injectables/DataService.html":{},"classes/LeafletMap.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"coverage.html":{}}}],["hasvalue(data",{"_index":596,"title":{},"body":{"injectables/DataService.html":{}}}],["hasvalue(filter",{"_index":597,"title":{},"body":{"injectables/DataService.html":{}}}],["hasvalue(filteredlist",{"_index":601,"title":{},"body":{"injectables/DataService.html":{}}}],["hasvalue(groupwrapper",{"_index":1148,"title":{},"body":{"classes/LeafletMap.html":{}}}],["hasvalue(input.value",{"_index":1471,"title":{},"body":{"components/PinInputComponent.html":{}}}],["hasvalue(key",{"_index":134,"title":{},"body":{"injectables/AwsService.html":{}}}],["hasvalue(lastname",{"_index":385,"title":{},"body":{"classes/Color.html":{}}}],["hasvalue(obj",{"_index":1450,"title":{},"body":{"components/PinInputComponent.html":{}}}],["hasvalue(offset",{"_index":1169,"title":{},"body":{"classes/LeafletMap.html":{}}}],["hasvalue(this.image.file",{"_index":196,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["hasvalue(this.image.url",{"_index":204,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["hasvalue(this.markers",{"_index":1143,"title":{},"body":{"classes/LeafletMap.html":{}}}],["hasvalue(this.value[i",{"_index":1460,"title":{},"body":{"components/PinInputComponent.html":{}}}],["hasvalue(value",{"_index":163,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{}}}],["hay",{"_index":17,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["headerelementref",{"_index":2189,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["height",{"_index":2082,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["heightchange",{"_index":2308,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["hereby",{"_index":2733,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1746,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["hide",{"_index":1991,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["highlight.js",{"_index":2694,"title":{},"body":{"dependencies.html":{}}}],["highlightjs",{"_index":2699,"title":{},"body":{"dependencies.html":{}}}],["holders",{"_index":2779,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":2062,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["horizontal(value",{"_index":2162,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["host",{"_index":461,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"components/SerFormElementComponent.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["host.horizontal",{"_index":2091,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["host.horizontal.selfscroll",{"_index":2074,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["host.vertical.selfscroll",{"_index":2077,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["hostbinding",{"_index":1244,"title":{},"body":{"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{}}}],["hostbinding('class.active",{"_index":1908,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.dirty",{"_index":1911,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.disabled",{"_index":1904,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.focus",{"_index":1906,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.invalid",{"_index":1915,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.longpress",{"_index":1248,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostbinding('class.pending",{"_index":1917,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('class.press",{"_index":1245,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostbinding('class.show",{"_index":1448,"title":{},"body":{"components/PinInputComponent.html":{}}}],["hostbinding('class.valid",{"_index":1913,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["hostbinding('hidden",{"_index":1778,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["hostbindings",{"_index":1224,"title":{},"body":{"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"components/SerFormElementComponent.html":{}}}],["hostlistener",{"_index":471,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"directives/SerControlDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["hostlistener('blur",{"_index":1720,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["hostlistener('click",{"_index":475,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["hostlistener('focus",{"_index":1717,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["hostlistener('mousedown",{"_index":1250,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlistener('mousemove",{"_index":1278,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlistener('mouseup",{"_index":1273,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlistener('touchend",{"_index":1274,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlistener('touchmove",{"_index":1279,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlistener('touchstart",{"_index":1251,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["hostlisteners",{"_index":466,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/LongPressDirective.html":{},"directives/SerControlDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["hsl",{"_index":285,"title":{},"body":{"classes/Color.html":{}}}],["html",{"_index":1488,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["htmlcanvaselement",{"_index":359,"title":{},"body":{"classes/Color.html":{}}}],["htmldocument",{"_index":858,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["htmlelement",{"_index":868,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"modules/VirtualScrollerModule.html":{}}}],["htmlelement).classlist.toggle(this.toggleclass",{"_index":2026,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["htmlinputelement",{"_index":1438,"title":{},"body":{"components/PinInputComponent.html":{}}}],["htmlinputelement).value",{"_index":1462,"title":{},"body":{"components/PinInputComponent.html":{}}}],["htmlscriptelement",{"_index":694,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["http",{"_index":518,"title":{},"body":{"classes/CustomValidators.html":{}}}],["http.post(url",{"_index":165,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["httpclient",{"_index":143,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{}}}],["https://${this.awsdata.s3.bucket}.s3.amazonaws.com/${key",{"_index":135,"title":{},"body":{"injectables/AwsService.html":{}}}],["https://apis.google.com/js/api.js",{"_index":969,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["https://apis.google.com/js/platform.js?onload=googlesdkloaded",{"_index":674,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["https://connect.facebook.net/en_us/sdk.js",{"_index":741,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["hue",{"_index":286,"title":{},"body":{"classes/Color.html":{}}}],["iaws",{"_index":102,"title":{},"body":{"injectables/AwsService.html":{}}}],["iconclass",{"_index":1970,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["iconname",{"_index":1971,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["id",{"_index":140,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"classes/LeafletMap.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id/claims.service.ts",{"_index":237,"title":{},"body":{"injectables/ClaimsService.html":{},"coverage.html":{}}}],["id/claims.service.ts:16",{"_index":259,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/claims.service.ts:17",{"_index":261,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/claims.service.ts:20",{"_index":263,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/claims.service.ts:32",{"_index":252,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/claims.service.ts:44",{"_index":244,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/claims.service.ts:63",{"_index":257,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["id/iopen",{"_index":1360,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{}}}],["id_token",{"_index":945,"title":{},"body":{"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{}}}],["identificador",{"_index":2598,"title":{},"body":{"coverage.html":{}}}],["idimension",{"_index":2054,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["idimensions",{"_index":1032,"title":{"interfaces/IDimensions.html":{}},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["ie",{"_index":919,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["ie/edge",{"_index":933,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["ifacebook",{"_index":748,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["igoogle",{"_index":976,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["igual",{"_index":527,"title":{},"body":{"classes/CustomValidators.html":{}}}],["iguales",{"_index":547,"title":{},"body":{"classes/CustomValidators.html":{}}}],["image",{"_index":190,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["image.directive",{"_index":1962,"title":{},"body":{"modules/SerUiModule.html":{}}}],["image.directive.ts",{"_index":172,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{}}}],["image.directive.ts:19",{"_index":214,"title":{},"body":{"directives/BgImageDirective.html":{}}}],["image.directive.ts:20",{"_index":213,"title":{},"body":{"directives/BgImageDirective.html":{}}}],["image.directive.ts:24",{"_index":215,"title":{},"body":{"directives/BgImageDirective.html":{}}}],["image/jpeg",{"_index":353,"title":{},"body":{"classes/Color.html":{}}}],["image/png",{"_index":354,"title":{},"body":{"classes/Color.html":{}}}],["image\\/([a",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image\\/(jpe?g|png|gif|bmp))/i",{"_index":192,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["imageregex",{"_index":191,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["imagery",{"_index":2881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implementa",{"_index":208,"title":{},"body":{"directives/BgImageDirective.html":{},"directives/FinishTypingDirective.html":{},"classes/GoogleClientConfig.html":{},"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["implements",{"_index":188,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/FinishTypingDirective.html":{},"classes/GoogleClientConfig.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["implied",{"_index":2770,"title":{},"body":{"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IViewport.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimensions.html":{}}}],["importa",{"_index":1946,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["imports",{"_index":53,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["inarray",{"_index":266,"title":{},"body":{"injectables/ClaimsService.html":{},"coverage.html":{}}}],["included",{"_index":2763,"title":{},"body":{"license.html":{}}}],["including",{"_index":2745,"title":{},"body":{"license.html":{}}}],["incluyen",{"_index":1635,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["index",{"_index":280,"title":{"index.html":{}},"body":{"injectables/ClaimsService.html":{},"modules/VirtualScrollerModule.html":{}}}],["indexlengthchanged",{"_index":2194,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["indicado",{"_index":555,"title":{},"body":{"classes/CustomValidators.html":{}}}],["infinite",{"_index":2397,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["infinte",{"_index":2404,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{}}}],["información",{"_index":767,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["inicial",{"_index":1538,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["inicializar",{"_index":47,"title":{},"body":{"modules/AwsModule.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["inicio",{"_index":764,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["init",{"_index":1549,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["initial",{"_index":2097,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["initialized",{"_index":2394,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["initials",{"_index":384,"title":{},"body":{"classes/Color.html":{}}}],["initialview",{"_index":1079,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["initmarkercluster",{"_index":1064,"title":{},"body":{"classes/LeafletMap.html":{}}}],["inject",{"_index":103,"title":{},"body":{"injectables/AwsService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"directives/SerErrorDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["inject('virtual",{"_index":2262,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["inject(platform_id",{"_index":2260,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["injectable",{"_index":66,"title":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"injectables/SnackbarService.html":{}},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["injectiontoken",{"_index":104,"title":{},"body":{"injectables/AwsService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('aws.config",{"_index":108,"title":{},"body":{"injectables/AwsService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('facebook.config",{"_index":752,"title":{},"body":{"injectables/FacebookSDKService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('google.config",{"_index":977,"title":{},"body":{"injectables/GoogleSDKService.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":176,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["input'},{'name",{"_index":1497,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["input('bgimage",{"_index":189,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["input('copytoclipboard",{"_index":473,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["input('sererrors",{"_index":1838,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["input.component",{"_index":1928,"title":{},"body":{"modules/SerFormModule.html":{}}}],["input.component.html",{"_index":1385,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts",{"_index":1376,"title":{},"body":{"components/PinInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:107",{"_index":1426,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:142",{"_index":1421,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:160",{"_index":1429,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:163",{"_index":1418,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:165",{"_index":1432,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:168",{"_index":1427,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:170",{"_index":1434,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:19",{"_index":1443,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:20",{"_index":1411,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:22",{"_index":1439,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:24",{"_index":1408,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:25",{"_index":1410,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:26",{"_index":1409,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:28",{"_index":1437,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:29",{"_index":1446,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:30",{"_index":1445,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:31",{"_index":1444,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:33",{"_index":1436,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:39",{"_index":1416,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:44",{"_index":1415,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:55",{"_index":1413,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:67",{"_index":1414,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.component.ts:86",{"_index":1423,"title":{},"body":{"components/PinInputComponent.html":{}}}],["input.directive",{"_index":1937,"title":{},"body":{"modules/SerFormModule.html":{}}}],["input.directive.ts",{"_index":1007,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"coverage.html":{}}}],["input.directive.ts:10",{"_index":1013,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["input.directive.ts:14",{"_index":1015,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["input.directive.ts:21",{"_index":1018,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["input.directive.ts:34",{"_index":1017,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["inputchangedpromise",{"_index":836,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["inputs",{"_index":1387,"title":{},"body":{"components/PinInputComponent.html":{}}}],["inputslist",{"_index":1388,"title":{},"body":{"components/PinInputComponent.html":{}}}],["insert",{"_index":675,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["insert(id",{"_index":677,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["insertar",{"_index":681,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["instala",{"_index":2718,"title":{},"body":{"index.html":{}}}],["install",{"_index":2721,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":198,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["instancia",{"_index":891,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["interactuar",{"_index":978,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["interacturar",{"_index":753,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AwsData.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"interfaces/CenterPoint.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"interfaces/GoogleUserProfile.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"interfaces/SnackbarOpts.html":{},"interfaces/String.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{}},"body":{"interfaces/AwsData.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"interfaces/GoogleUserProfile.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["interface.ts",{"_index":856,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AwsData.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"interfaces/CenterPoint.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"interfaces/GoogleUserProfile.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"interfaces/SnackbarOpts.html":{},"interfaces/String.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"index.html":{},"overview.html":{}}}],["intuitivas",{"_index":2715,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1696,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["invalidatecachedmeasurementatindex(index",{"_index":2206,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["invisiblepaddingelementref",{"_index":2187,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["inyectables",{"_index":67,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"injectables/SnackbarService.html":{},"overview.html":{}}}],["iopen",{"_index":264,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["ipageinfo",{"_index":1045,"title":{"interfaces/IPageInfo.html":{}},"body":{"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["isangularuniversalssr",{"_index":2257,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["iscodehidden",{"_index":1404,"title":{},"body":{"components/PinInputComponent.html":{}}}],["isdisabled",{"_index":1389,"title":{},"body":{"components/PinInputComponent.html":{}}}],["isenabled",{"_index":888,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["isenabled(value",{"_index":905,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["isnan(arrayendindex",{"_index":2562,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["isnan(arraystartindex",{"_index":2561,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["isnan(data.scrollposition",{"_index":2245,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["isplatformserver",{"_index":2049,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["isplatformserver(platformid",{"_index":2266,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["issuperuser",{"_index":1368,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["isvalid",{"_index":1807,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["isvalid(name",{"_index":1822,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["it'd",{"_index":2384,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["item",{"_index":592,"title":{},"body":{"injectables/DataService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{}}}],["item.directive",{"_index":1947,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["item.directive.ts",{"_index":1681,"title":{},"body":{"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"coverage.html":{}}}],["item.directive.ts:10",{"_index":1689,"title":{},"body":{"directives/SDItemDirective.html":{}}}],["item.directive.ts:16",{"_index":1684,"title":{},"body":{"directives/SDBadgeDirective.html":{}}}],["item.directive.ts:17",{"_index":1685,"title":{},"body":{"directives/SDBadgeDirective.html":{}}}],["item.directive.ts:23",{"_index":1686,"title":{},"body":{"directives/SDBadgeItemDirective.html":{}}}],["item.directive.ts:24",{"_index":1687,"title":{},"body":{"directives/SDBadgeItemDirective.html":{}}}],["item.directive.ts:9",{"_index":1688,"title":{},"body":{"directives/SDItemDirective.html":{}}}],["item.grptitle",{"_index":605,"title":{},"body":{"injectables/DataService.html":{}}}],["item.nativeelement",{"_index":1461,"title":{},"body":{"components/PinInputComponent.html":{}}}],["item1",{"_index":2158,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["item2",{"_index":2159,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["item[prop",{"_index":608,"title":{},"body":{"injectables/DataService.html":{}}}],["item[prop].tostring().tolowercase().indexof(filter.tolowercase",{"_index":609,"title":{},"body":{"injectables/DataService.html":{}}}],["item]'},{'name",{"_index":1518,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["itemcount",{"_index":1037,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{}}}],["itemorderchanged",{"_index":2426,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["items",{"_index":2153,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{}}}],["items(value",{"_index":2155,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["itemsarraychanged",{"_index":2204,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["itemsarraymodified",{"_index":2409,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["itemspercol",{"_index":2530,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["itemsperpage",{"_index":1038,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{}}}],["itemsperrow",{"_index":2528,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["itemsperwrapgroup",{"_index":1039,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{}}}],["iteration",{"_index":2360,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["iviewport",{"_index":1053,"title":{"interfaces/IViewport.html":{}},"body":{"interfaces/IViewport.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["jan",{"_index":450,"title":{},"body":{"injectables/CookiesService.html":{}}}],["js",{"_index":692,"title":{},"body":{"injectables/ExternalScriptService.html":{},"dependencies.html":{}}}],["js.id",{"_index":695,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["js.src",{"_index":696,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["jssdk",{"_index":673,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["junto",{"_index":766,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["kb",{"_index":557,"title":{},"body":{"classes/CustomValidators.html":{}}}],["keep",{"_index":2357,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["keeping",{"_index":346,"title":{},"body":{"classes/Color.html":{}}}],["key",{"_index":85,"title":{},"body":{"injectables/AwsService.html":{},"classes/CustomValidators.html":{},"classes/LeafletMap.html":{}}}],["keyboard_keys",{"_index":2655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keyboardevent",{"_index":1425,"title":{},"body":{"components/PinInputComponent.html":{}}}],["keys.ts",{"_index":2654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keyup",{"_index":849,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{}}}],["kind",{"_index":2768,"title":{},"body":{"license.html":{}}}],["km",{"_index":1304,"title":{},"body":{"injectables/MapService.html":{}}}],["l",{"_index":1114,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.control.fullscreen(this.options.fullscreen",{"_index":1131,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.control.fullscreenoptions",{"_index":1191,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.control.layers",{"_index":1070,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.control.layers(this.options.layers",{"_index":1126,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.control.layersoptions",{"_index":1192,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.control.mouseposition(this.options.mousepositionoptions",{"_index":1129,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.control.mousepositionoptions",{"_index":1193,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.control.zoom(this.options.zoom",{"_index":1132,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.control.zoomoptions",{"_index":1194,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.featuregroup(groupwrapper",{"_index":1155,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.latlng",{"_index":1106,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.map",{"_index":1072,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.map(this.options.container",{"_index":1123,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.marker([latlng.lat",{"_index":1165,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.markerclustergroup",{"_index":1074,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.markerclustergroupoptions",{"_index":1195,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["l.pointexpression",{"_index":1108,"title":{},"body":{"classes/LeafletMap.html":{}}}],["l.tilelayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accesstoken",{"_index":2879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":2875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.zoompanoptions",{"_index":1109,"title":{},"body":{"classes/LeafletMap.html":{}}}],["la",{"_index":233,"title":{},"body":{"interfaces/CenterPoint.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"coverage.html":{}}}],["labelkey",{"_index":648,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["large",{"_index":2374,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["las",{"_index":407,"title":{},"body":{"injectables/CookiesService.html":{}}}],["last_name",{"_index":788,"title":{},"body":{"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{}}}],["lastname",{"_index":351,"title":{},"body":{"classes/Color.html":{}}}],["lastname.charat(0",{"_index":387,"title":{},"body":{"classes/Color.html":{}}}],["lat",{"_index":221,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"injectables/MapService.html":{}}}],["latitud",{"_index":1294,"title":{},"body":{"injectables/MapService.html":{}}}],["latitude",{"_index":1325,"title":{},"body":{"injectables/MapService.html":{}}}],["latlng",{"_index":227,"title":{"interfaces/LatLng.html":{}},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["latlng.lng",{"_index":1166,"title":{},"body":{"classes/LeafletMap.html":{}}}],["latlng2latlngoptions",{"_index":235,"title":{"interfaces/LatLng2LatLngOptions.html":{}},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["lax",{"_index":429,"title":{},"body":{"injectables/CookiesService.html":{}}}],["layercontrol",{"_index":1058,"title":{},"body":{"classes/LeafletMap.html":{}}}],["layers",{"_index":1085,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["layersoptions",{"_index":1092,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["lazyloading",{"_index":649,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["leaflet",{"_index":1078,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"dependencies.html":{}}}],["leaflet.markercluster",{"_index":1115,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"dependencies.html":{}}}],["leaflet_map_layers",{"_index":1086,"title":{},"body":{"classes/LeafletMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["leaflet_map_layers['mapbox",{"_index":1089,"title":{},"body":{"classes/LeafletMap.html":{}}}],["leafletmap",{"_index":1056,"title":{"classes/LeafletMap.html":{}},"body":{"classes/LeafletMap.html":{},"coverage.html":{}}}],["leafletmapoptions",{"_index":1068,"title":{"interfaces/LeafletMapOptions.html":{}},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"coverage.html":{}}}],["leafletpadding",{"_index":1101,"title":{"interfaces/LeafletPadding.html":{}},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"coverage.html":{}}}],["left",{"_index":2081,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["leftcmd",{"_index":2865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":1861,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["length",{"_index":1346,"title":{},"body":{"injectables/MapService.html":{},"interfaces/RandomPasswordOps.html":{},"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{}}}],["letra",{"_index":2004,"title":{},"body":{"interfaces/String.html":{}}}],["letras",{"_index":1636,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["letterslowercase",{"_index":1630,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["lettersuppercase",{"_index":1631,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["leyenda",{"_index":1486,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["liability",{"_index":2783,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2780,"title":{},"body":{"license.html":{}}}],["libreria",{"_index":805,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["librería",{"_index":2710,"title":{},"body":{"index.html":{}}}],["license",{"_index":2723,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":287,"title":{},"body":{"classes/Color.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["lightbackground",{"_index":300,"title":{},"body":{"classes/Color.html":{}}}],["lightness",{"_index":345,"title":{},"body":{"classes/Color.html":{}}}],["limitation",{"_index":2746,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2771,"title":{},"body":{"license.html":{}}}],["limits",{"_index":348,"title":{},"body":{"classes/Color.html":{}}}],["limitselection",{"_index":650,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["line",{"_index":185,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["list",{"_index":2466,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["listado",{"_index":275,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["listener",{"_index":837,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["literal",{"_index":423,"title":{},"body":{"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"miscellaneous/variables.html":{}}}],["lng",{"_index":222,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"injectables/MapService.html":{}}}],["loaded",{"_index":762,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["loading",{"_index":651,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["loadsdk",{"_index":735,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["location",{"_index":1320,"title":{},"body":{"injectables/MapService.html":{}}}],["login",{"_index":736,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["lon1",{"_index":1345,"title":{},"body":{"injectables/MapService.html":{}}}],["long",{"_index":1966,"title":{},"body":{"modules/SerUiModule.html":{}}}],["longitud",{"_index":1295,"title":{},"body":{"injectables/MapService.html":{}}}],["longitude",{"_index":1324,"title":{},"body":{"injectables/MapService.html":{}}}],["longpress",{"_index":1199,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["longpress]'},{'name",{"_index":1512,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["longpressdirective",{"_index":1196,"title":{"directives/LongPressDirective.html":{}},"body":{"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["longpressing",{"_index":1200,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["loop",{"_index":1207,"title":{},"body":{"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["loop(event",{"_index":1237,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["los",{"_index":543,"title":{},"body":{"classes/CustomValidators.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["lowerorequalthan",{"_index":503,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["lowerorequalthan(basepathfield",{"_index":536,"title":{},"body":{"classes/CustomValidators.html":{}}}],["lowerthan",{"_index":504,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["lowerthan(basepathfield",{"_index":538,"title":{},"body":{"classes/CustomValidators.html":{}}}],["main",{"_index":2383,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["map",{"_index":153,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/LeafletMap.html":{},"miscellaneous/variables.html":{}}}],["map(states",{"_index":1787,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["map(val",{"_index":2008,"title":{},"body":{"interfaces/String.html":{}}}],["mapbox",{"_index":2878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapbox/streets",{"_index":2883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapoptions",{"_index":1087,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["mapservice",{"_index":1285,"title":{"injectables/MapService.html":{}},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["margin",{"_index":2328,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["marginbottom",{"_index":2288,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["marginleft",{"_index":2290,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["marginright",{"_index":2291,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["margintop",{"_index":2286,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["markercluster",{"_index":1059,"title":{},"body":{"classes/LeafletMap.html":{}}}],["markers",{"_index":1060,"title":{},"body":{"classes/LeafletMap.html":{}}}],["match",{"_index":505,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["match(originalpathfield",{"_index":540,"title":{},"body":{"classes/CustomValidators.html":{}}}],["matching",{"_index":16,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs(boundingrect.height",{"_index":2309,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.abs(boundingrect.width",{"_index":2306,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.asin(math.sqrt(a",{"_index":1355,"title":{},"body":{"injectables/MapService.html":{}}}],["math.ceil((viewportheight",{"_index":2549,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.ceil((viewportwidth",{"_index":2548,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.ceil(arraystartindex",{"_index":2535,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.ceil(itemcount",{"_index":2551,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.ceil(this._elementref.nativeelement.scrollheight",{"_index":1029,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["math.cos(options.from.lat",{"_index":1350,"title":{},"body":{"injectables/MapService.html":{}}}],["math.cos(options.to.lat",{"_index":1351,"title":{},"body":{"injectables/MapService.html":{}}}],["math.floor((1",{"_index":1654,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["math.floor((today.gettime",{"_index":1652,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["math.floor(math.random",{"_index":1661,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["math.max(0",{"_index":2573,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.max(math.ceil(viewportheight",{"_index":2531,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.max(math.ceil(viewportwidth",{"_index":2529,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.max(scrollposition",{"_index":2457,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.max(viewportheight",{"_index":2545,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(math.max(arrayendindex",{"_index":2565,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(math.max(arraystartindex",{"_index":2563,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(maxheightforwrapgroup",{"_index":2544,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(scrolloffset",{"_index":2541,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(this.minmeasuredchildheight",{"_index":2524,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.min(this.minmeasuredchildwidth",{"_index":2522,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.pi",{"_index":1349,"title":{},"body":{"injectables/MapService.html":{}}}],["math.random",{"_index":1653,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["math.round(ev.target.scrolltop",{"_index":2586,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["math.round(newpadding",{"_index":2578,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.round(newscrolllength",{"_index":2579,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.round(this.horizontal",{"_index":2504,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["math.sin(((options.to.lat",{"_index":1347,"title":{},"body":{"injectables/MapService.html":{}}}],["math.sin(((options.to.lng",{"_index":1352,"title":{},"body":{"injectables/MapService.html":{}}}],["max",{"_index":324,"title":{},"body":{"classes/Color.html":{},"injectables/MapService.html":{},"interfaces/RandomPasswordOps.html":{},"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["maxchildsizeperwrapgroup",{"_index":2591,"title":{},"body":{"interfaces/WrapGroupDimensions.html":{}}}],["maxfilesize",{"_index":506,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["maxfilesize(size",{"_index":550,"title":{},"body":{"classes/CustomValidators.html":{}}}],["maxheight",{"_index":652,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["maxheightforwrapgroup",{"_index":2537,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxhue",{"_index":288,"title":{},"body":{"classes/Color.html":{}}}],["maximo",{"_index":554,"title":{},"body":{"classes/CustomValidators.html":{}}}],["maxlight",{"_index":289,"title":{},"body":{"classes/Color.html":{}}}],["maxretries",{"_index":2222,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxruntimes",{"_index":2354,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxsat",{"_index":290,"title":{},"body":{"classes/Color.html":{}}}],["maxscrollposition",{"_index":1040,"title":{},"body":{"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["maxvisibleheightforwrapgroup",{"_index":2543,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxvisiblewidthforwrapgroup",{"_index":2542,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxwidthforwrapgroup",{"_index":2536,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["maxzoom",{"_index":2882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mayor",{"_index":526,"title":{},"body":{"classes/CustomValidators.html":{}}}],["mayúsculas",{"_index":1638,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["mediante",{"_index":624,"title":{},"body":{"injectables/DownloadService.html":{}}}],["mediaquerylist",{"_index":1561,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["mediaquerylistevent",{"_index":1618,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["medio",{"_index":570,"title":{},"body":{"classes/CustomValidators.html":{}}}],["member",{"_index":2042,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["membererrors",{"_index":2015,"title":{},"body":{"interfaces/String.html":{}}}],["menor",{"_index":532,"title":{},"body":{"classes/CustomValidators.html":{}}}],["menos",{"_index":274,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["menu",{"_index":1680,"title":{},"body":{"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"modules/SerSelectModule.html":{},"coverage.html":{}}}],["merchantability",{"_index":2773,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2750,"title":{},"body":{"license.html":{}}}],["mergeobjs",{"_index":1119,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["mergeobjs(defaultoptions",{"_index":1668,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["mergeobjs(pad",{"_index":1153,"title":{},"body":{"classes/LeafletMap.html":{}}}],["mergeobjs(this.options",{"_index":1121,"title":{},"body":{"classes/LeafletMap.html":{}}}],["meta",{"_index":209,"title":{},"body":{"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["metadata",{"_index":2059,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["metodo",{"_index":802,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{}}}],["mg",{"_index":558,"title":{},"body":{"classes/CustomValidators.html":{}}}],["middle",{"_index":383,"title":{},"body":{"classes/Color.html":{}}}],["middlepoint",{"_index":1291,"title":{},"body":{"injectables/MapService.html":{}}}],["middlepoint(options",{"_index":1322,"title":{},"body":{"injectables/MapService.html":{}}}],["min",{"_index":326,"title":{},"body":{"classes/Color.html":{},"interfaces/RandomPasswordOps.html":{}}}],["minfilesize",{"_index":507,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["minfilesize(size",{"_index":562,"title":{},"body":{"classes/CustomValidators.html":{}}}],["minhue",{"_index":291,"title":{},"body":{"classes/Color.html":{}}}],["minlight",{"_index":292,"title":{},"body":{"classes/Color.html":{}}}],["minsat",{"_index":293,"title":{},"body":{"classes/Color.html":{}}}],["minúsculas",{"_index":1637,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["miscellaneous",{"_index":2805,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{}}],["miscelánea",{"_index":2807,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2724,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1621,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["model",{"_index":141,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["modelo",{"_index":516,"title":{},"body":{"classes/CustomValidators.html":{}}}],["modify",{"_index":2749,"title":{},"body":{"license.html":{}}}],["modifyoverflowstyleofparentscroll",{"_index":2030,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["modo",{"_index":877,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["module",{"_index":21,"title":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{}},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["modules",{"_index":2792,"title":{"modules.html":{}},"body":{}}],["modulewithproviders",{"_index":38,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["montaje",{"_index":2713,"title":{},"body":{"index.html":{}}}],["more",{"_index":2386,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["mousedown",{"_index":1216,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mousedown(event",{"_index":1227,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mouseevent",{"_index":1228,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mouseevent).button",{"_index":1276,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mousemove",{"_index":1217,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mousemove(event",{"_index":1231,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mouseposition",{"_index":1118,"title":{},"body":{"classes/LeafletMap.html":{}}}],["mousepositionoptions",{"_index":1190,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["mouseup",{"_index":1218,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mouseup(event",{"_index":1233,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mousex",{"_index":1201,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mousey",{"_index":1202,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mozcancelfullscreen",{"_index":859,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["mozfullscreenelement",{"_index":860,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["mozrequestfullscreen",{"_index":870,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{}}}],["msexitfullscreen",{"_index":861,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["msfullscreenelement",{"_index":862,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["msg",{"_index":1321,"title":{},"body":{"injectables/MapService.html":{}}}],["msj",{"_index":1972,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["msrequestfullscreen",{"_index":869,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["multi",{"_index":1382,"title":{},"body":{"components/PinInputComponent.html":{}}}],["máximo",{"_index":1659,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["método",{"_index":126,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["métodos",{"_index":25,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/WhenScrolledDirective.html":{}}}],["mínimo",{"_index":564,"title":{},"body":{"classes/CustomValidators.html":{},"interfaces/RandomPasswordOps.html":{}}}],["módulo",{"_index":45,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["módulos",{"_index":23,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"modules.html":{},"overview.html":{}}}],["n",{"_index":1677,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["name",{"_index":417,"title":{},"body":{"injectables/CookiesService.html":{},"components/PinInputComponent.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{}}}],["name.charat(0",{"_index":386,"title":{},"body":{"classes/Color.html":{},"directives/SerErrorsDirective.html":{}}}],["navegador",{"_index":441,"title":{},"body":{"injectables/CookiesService.html":{},"injectables/FullscreenService.html":{},"modules.html":{}}}],["navegar",{"_index":2795,"title":{},"body":{"modules.html":{}}}],["navigator",{"_index":1335,"title":{},"body":{"injectables/MapService.html":{}}}],["navigator.geolocation.getcurrentposition((position",{"_index":1336,"title":{},"body":{"injectables/MapService.html":{}}}],["ndice",{"_index":7,"title":{},"body":{"interfaces/AwsData.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["necessary",{"_index":2388,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["new",{"_index":107,"title":{},"body":{"injectables/AwsService.html":{},"classes/Color.html":{},"directives/CopyToClipboardDirective.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpadding",{"_index":2575,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["newscrolllength",{"_index":2577,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["newtween",{"_index":2241,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["newtween.update(time",{"_index":2253,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["newtween['isplaying",{"_index":2252,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["next",{"_index":184,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["next(position",{"_index":1314,"title":{},"body":{"injectables/MapService.html":{}}}],["ng",{"_index":2086,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ng_fsdk_config",{"_index":724,"title":{},"body":{"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng_gapi_config",{"_index":956,"title":{},"body":{"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng_value_accessor",{"_index":1379,"title":{},"body":{"components/PinInputComponent.html":{}}}],["ngafterviewinit",{"_index":1392,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SerErrorsDirective.html":{}}}],["ngcontrol",{"_index":1019,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"directives/SerControlDirective.html":{}}}],["ngdocheck",{"_index":1745,"title":{},"body":{"directives/SerErrorDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["ngmodule",{"_index":40,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["ngonchanges",{"_index":195,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/SerErrorsDirective.html":{}}}],["ngonchanges(changes",{"_index":2193,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ngondestroy",{"_index":838,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["ngoninit",{"_index":1011,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["ngx",{"_index":2698,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngzone",{"_index":2045,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["nico",{"_index":1649,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["nodatalabel",{"_index":653,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["node",{"_index":813,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.async",{"_index":818,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.defer",{"_index":819,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.id",{"_index":820,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.onload",{"_index":822,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.src",{"_index":814,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["node.type",{"_index":816,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["nombre",{"_index":34,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["noninfringement",{"_index":2777,"title":{},"body":{"license.html":{}}}],["noop",{"_index":2615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":2355,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["notice",{"_index":2761,"title":{},"body":{"license.html":{}}}],["notinarray",{"_index":2646,"title":{},"body":{"coverage.html":{}}}],["nowrap",{"_index":2094,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["npm",{"_index":2720,"title":{},"body":{"index.html":{}}}],["null",{"_index":579,"title":{},"body":{"classes/CustomValidators.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"components/PinInputComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["number",{"_index":142,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"interfaces/CenterPoint.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["numberofknownwrapgroupchildsizes",{"_index":2592,"title":{},"body":{"interfaces/WrapGroupDimensions.html":{}}}],["numberofwrapgroups",{"_index":2550,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["numbers",{"_index":1632,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["numunknownchildsizes",{"_index":2553,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["número",{"_index":1658,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["números",{"_index":1639,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["o",{"_index":114,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{}}}],["obj",{"_index":1300,"title":{},"body":{"injectables/MapService.html":{},"components/PinInputComponent.html":{}}}],["obj.tostring().split",{"_index":1452,"title":{},"body":{"components/PinInputComponent.html":{}}}],["obj[0",{"_index":1358,"title":{},"body":{"injectables/MapService.html":{}}}],["object",{"_index":1642,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["objecttographparams",{"_index":2634,"title":{},"body":{"coverage.html":{}}}],["objeto",{"_index":88,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/CenterPoint.html":{},"injectables/CookiesService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["objhasvalue",{"_index":2652,"title":{},"body":{"coverage.html":{}}}],["observa",{"_index":1540,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["observable",{"_index":149,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/Color.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"directives/SerErrorDirective.html":{}}}],["observable((observer",{"_index":769,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{}}}],["observable(observer",{"_index":356,"title":{},"body":{"classes/Color.html":{}}}],["observable.combinelatest([states",{"_index":1791,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["observar",{"_index":1577,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["observer",{"_index":751,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["observer.complete",{"_index":392,"title":{},"body":{"classes/Color.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["observer.error('geolocation",{"_index":1341,"title":{},"body":{"injectables/MapService.html":{}}}],["observer.error(err",{"_index":996,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["observer.error(error",{"_index":1340,"title":{},"body":{"injectables/MapService.html":{}}}],["observer.next",{"_index":1003,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["observer.next(facebookprofile",{"_index":795,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["observer.next(googleprofile",{"_index":994,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["observer.next(position",{"_index":1337,"title":{},"body":{"injectables/MapService.html":{}}}],["observer.next(result",{"_index":391,"title":{},"body":{"classes/Color.html":{}}}],["observer.next(true",{"_index":825,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["obtaining",{"_index":2738,"title":{},"body":{"license.html":{}}}],["obtener",{"_index":127,"title":{},"body":{"injectables/AwsService.html":{},"injectables/CookiesService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["obtiene",{"_index":397,"title":{},"body":{"injectables/CookiesService.html":{},"injectables/FullscreenService.html":{},"injectables/MapService.html":{}}}],["of(control.value).pipe",{"_index":160,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["of(null",{"_index":169,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["offset",{"_index":1107,"title":{},"body":{"classes/LeafletMap.html":{},"modules/VirtualScrollerModule.html":{}}}],["offset[0",{"_index":1171,"title":{},"body":{"classes/LeafletMap.html":{}}}],["offset[1",{"_index":1173,"title":{},"body":{"classes/LeafletMap.html":{}}}],["offset_x",{"_index":223,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{}}}],["offset_y",{"_index":224,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{}}}],["offsetleft",{"_index":2323,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["offsettop",{"_index":2332,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["okay",{"_index":2400,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["old",{"_index":914,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["oldparentscrolloverflow",{"_index":2171,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldrefreshcompletedcallback",{"_index":2416,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldstartitem",{"_index":2420,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldstartitemindex",{"_index":2422,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldviewport",{"_index":2414,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldviewport.scrolllength",{"_index":2419,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldviewportitems",{"_index":2415,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["oldviewportitems[0",{"_index":2421,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["onblur",{"_index":1721,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["onchange",{"_index":1393,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onchange(_",{"_index":1417,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onchanges",{"_index":175,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["onchangevalue",{"_index":1699,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["onchangevalue(value",{"_index":1708,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["onclick",{"_index":1394,"title":{},"body":{"components/PinInputComponent.html":{},"directives/ToggleClassDirective.html":{}}}],["onclick(e",{"_index":1420,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onclick(val",{"_index":476,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["ondestroy",{"_index":834,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["onfocus",{"_index":1718,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["oninit",{"_index":1008,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["oninput",{"_index":1395,"title":{},"body":{"components/PinInputComponent.html":{}}}],["oninput(e",{"_index":1422,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onkeydown",{"_index":1397,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onkeydown(e",{"_index":1424,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onload",{"_index":756,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["onlongpress",{"_index":1209,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onlongpressend",{"_index":1210,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onlongpressing",{"_index":1211,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onlynumber",{"_index":1405,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onmousedown(event",{"_index":1252,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onmousemove(event",{"_index":1280,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onmouseup(event",{"_index":1275,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onscroll",{"_index":2139,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["onshortpress",{"_index":1212,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["onstop",{"_index":2247,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ontouch",{"_index":1398,"title":{},"body":{"components/PinInputComponent.html":{}}}],["onupdate((data",{"_index":2244,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["opacity",{"_index":2100,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["opcional",{"_index":35,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"directives/WhenScrolledDirective.html":{}}}],["open",{"_index":1995,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["open(opts",{"_index":1975,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["openid",{"_index":229,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{}}}],["openidclient",{"_index":1359,"title":{"interfaces/OpenIdClient.html":{}},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{}}}],["openiddata",{"_index":242,"title":{"interfaces/OpenIdData.html":{}},"body":{"injectables/ClaimsService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{}}}],["openiddata(value",{"_index":269,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["openstreetmap",{"_index":2874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opera",{"_index":917,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["operativo",{"_index":1595,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["optional",{"_index":2044,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options",{"_index":1061,"title":{},"body":{"classes/LeafletMap.html":{},"injectables/MapService.html":{},"interfaces/RandomPasswordOps.html":{},"modules/VirtualScrollerModule.html":{}}}],["options.checkresizeinterval",{"_index":2275,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.from.lat",{"_index":1348,"title":{},"body":{"injectables/MapService.html":{}}}],["options.from.lng",{"_index":1353,"title":{},"body":{"injectables/MapService.html":{}}}],["options.lng",{"_index":1186,"title":{},"body":{"classes/LeafletMap.html":{}}}],["options.modifyoverflowstyleofparentscroll",{"_index":2278,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.preserve_zoom",{"_index":1187,"title":{},"body":{"classes/LeafletMap.html":{}}}],["options.resizebypassrefreshthreshold",{"_index":2277,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.scrollanimationtime",{"_index":2269,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.scrollbarheight",{"_index":2273,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.scrollbarwidth",{"_index":2271,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.scrolldebouncetime",{"_index":2268,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.scrollthrottlingtime",{"_index":2267,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["options.stripedtable",{"_index":2280,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["opts",{"_index":1984,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["opts.msj",{"_index":1987,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["ordering",{"_index":2043,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["orientado",{"_index":2712,"title":{},"body":{"index.html":{}}}],["original",{"_index":549,"title":{},"body":{"classes/CustomValidators.html":{}}}],["originalpathfield",{"_index":548,"title":{},"body":{"classes/CustomValidators.html":{}}}],["os",{"_index":1542,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["oscuro",{"_index":1612,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["otherwise",{"_index":2788,"title":{},"body":{"license.html":{}}}],["otro",{"_index":528,"title":{},"body":{"classes/CustomValidators.html":{}}}],["out",{"_index":2380,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"license.html":{}}}],["output",{"_index":472,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/GoogleSDKService.html":{},"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["overflow",{"_index":2071,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["overview",{"_index":2799,"title":{"overview.html":{}},"body":{}}],["owasp",{"_index":436,"title":{},"body":{"injectables/CookiesService.html":{}}}],["package",{"_index":2673,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":1149,"title":{},"body":{"classes/LeafletMap.html":{}}}],["pad.paddingbottomright.x",{"_index":1161,"title":{},"body":{"classes/LeafletMap.html":{}}}],["pad.paddingbottomright.y",{"_index":1162,"title":{},"body":{"classes/LeafletMap.html":{}}}],["pad.paddingtopleft.x",{"_index":1159,"title":{},"body":{"classes/LeafletMap.html":{}}}],["pad.paddingtopleft.y",{"_index":1160,"title":{},"body":{"classes/LeafletMap.html":{}}}],["padding",{"_index":1055,"title":{},"body":{"interfaces/IViewport.html":{},"classes/LeafletMap.html":{},"modules/VirtualScrollerModule.html":{}}}],["paddingbottomright",{"_index":1152,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["paddingchanged",{"_index":2437,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["paddingtopleft",{"_index":1150,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["pagecount_fractional",{"_index":1041,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{}}}],["pageinfo",{"_index":2103,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.endindex",{"_index":2106,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.endindexwithbuffer",{"_index":2111,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.maxscrollposition",{"_index":2109,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.scrollendposition",{"_index":2108,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.scrollstartposition",{"_index":2107,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.startindex",{"_index":2105,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageinfo.startindexwithbuffer",{"_index":2110,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pagexoffset",{"_index":2325,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pageyoffset",{"_index":2333,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["pantalla",{"_index":878,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["panto",{"_index":1065,"title":{},"body":{"classes/LeafletMap.html":{}}}],["panto(latlng",{"_index":1105,"title":{},"body":{"classes/LeafletMap.html":{}}}],["para",{"_index":46,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/ExternalScriptService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/String.html":{}}}],["param",{"_index":131,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/MapService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/String.html":{}}}],["parametrizar",{"_index":722,"title":{},"body":{"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["parametros",{"_index":1664,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["parentscroll",{"_index":2065,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["parentscroll(value",{"_index":2174,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["parseint(styles['margin",{"_index":2287,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["particular",{"_index":2775,"title":{},"body":{"license.html":{}}}],["parámetros",{"_index":33,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["password",{"_index":1455,"title":{},"body":{"components/PinInputComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":414,"title":{},"body":{"injectables/CookiesService.html":{},"classes/CustomValidators.html":{}}}],["pending",{"_index":1697,"title":{},"body":{"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{}}}],["perfil",{"_index":768,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["performance",{"_index":2375,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["permiso",{"_index":254,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["permisos",{"_index":115,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["permission",{"_index":2732,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2756,"title":{},"body":{"license.html":{}}}],["person",{"_index":2737,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2757,"title":{},"body":{"license.html":{}}}],["pic",{"_index":781,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["pic.data.url",{"_index":794,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["pic?.data?.url",{"_index":792,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["picture",{"_index":827,"title":{},"body":{"interfaces/FacebookUserProfile.html":{},"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{}}}],["pin",{"_index":1383,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["pin/pin",{"_index":1927,"title":{},"body":{"modules/SerFormModule.html":{}}}],["pininputcomponent",{"_index":1370,"title":{"components/PinInputComponent.html":{}},"body":{"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pipe(take(1)).subscribe",{"_index":1990,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["platform_id",{"_index":2048,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["platformid",{"_index":2261,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["play",{"_index":329,"title":{},"body":{"classes/Color.html":{}}}],["plugins",{"_index":2679,"title":{},"body":{"dependencies.html":{}}}],["plugins/leaflet",{"_index":1117,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["point",{"_index":1174,"title":{},"body":{"classes/LeafletMap.html":{}}}],["popup",{"_index":797,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["por",{"_index":217,"title":{},"body":{"directives/BgImageDirective.html":{},"classes/Color.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":2765,"title":{},"body":{"license.html":{}}}],["posisión",{"_index":1309,"title":{},"body":{"injectables/MapService.html":{}}}],["position",{"_index":1093,"title":{},"body":{"classes/LeafletMap.html":{},"injectables/MapService.html":{},"modules/VirtualScrollerModule.html":{}}}],["positioncontrol",{"_index":1088,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["positionerror",{"_index":1339,"title":{},"body":{"injectables/MapService.html":{}}}],["precision",{"_index":1298,"title":{},"body":{"injectables/MapService.html":{}}}],["preferscolorschemeservice",{"_index":1531,"title":{"injectables/PrefersColorSchemeService.html":{}},"body":{"injectables/PrefersColorSchemeService.html":{},"coverage.html":{}}}],["prepended",{"_index":2411,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["preserve_zoom",{"_index":225,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{}}}],["press",{"_index":1246,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive",{"_index":1967,"title":{},"body":{"modules/SerUiModule.html":{}}}],["press.directive.ts",{"_index":1198,"title":{},"body":{"directives/LongPressDirective.html":{},"coverage.html":{}}}],["press.directive.ts:10",{"_index":1219,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:12",{"_index":1223,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:13",{"_index":1220,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:14",{"_index":1222,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:15",{"_index":1221,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:17",{"_index":1242,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:18",{"_index":1239,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:19",{"_index":1243,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:20",{"_index":1240,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:21",{"_index":1241,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:24",{"_index":1226,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:27",{"_index":1225,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:31",{"_index":1230,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:57",{"_index":1238,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:66",{"_index":1235,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:72",{"_index":1236,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:86",{"_index":1234,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:96",{"_index":1232,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["pressduration",{"_index":1208,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["pressing",{"_index":1203,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["prevent",{"_index":2408,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["previous",{"_index":2359,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["previousscrollboundingrect",{"_index":2299,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["primarykey",{"_index":654,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["principio",{"_index":91,"title":{},"body":{"injectables/AwsService.html":{}}}],["privado",{"_index":803,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["private",{"_index":72,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"directives/ToggleClassDirective.html":{}}}],["probably",{"_index":2369,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["profile",{"_index":960,"title":{},"body":{"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{}}}],["profile.getemail",{"_index":992,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["profile.getfamilyname",{"_index":991,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["profile.getgivenname",{"_index":990,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["profile.getid",{"_index":988,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["profile.getimageurl().replace('=s96",{"_index":993,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["prop",{"_index":607,"title":{},"body":{"injectables/DataService.html":{},"directives/SerErrorsDirective.html":{}}}],["property",{"_index":2060,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["propertyname",{"_index":2509,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["propiedad",{"_index":519,"title":{},"body":{"classes/CustomValidators.html":{}}}],["propiedades",{"_index":8,"title":{},"body":{"interfaces/AwsData.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"interfaces/SnackbarOpts.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{}}}],["protected",{"_index":2113,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["proveedores",{"_index":1945,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["proveidos",{"_index":545,"title":{},"body":{"classes/CustomValidators.html":{}}}],["provide",{"_index":55,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"components/PinInputComponent.html":{},"modules/VirtualScrollerModule.html":{}}}],["provided",{"_index":2766,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":119,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["provider",{"_index":29,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"classes/LeafletMap.html":{},"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["provides",{"_index":1332,"title":{},"body":{"injectables/MapService.html":{}}}],["public",{"_index":74,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["public_profile,email",{"_index":801,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["publish",{"_index":1334,"title":{},"body":{"injectables/MapService.html":{},"license.html":{}}}],["puntos",{"_index":1307,"title":{},"body":{"injectables/MapService.html":{}}}],["purpose",{"_index":2776,"title":{},"body":{"license.html":{}}}],["quality",{"_index":355,"title":{},"body":{"classes/Color.html":{}}}],["que",{"_index":19,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["querylist",{"_index":1440,"title":{},"body":{"components/PinInputComponent.html":{}}}],["quit",{"_index":2379,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["randomnum",{"_index":298,"title":{},"body":{"classes/Color.html":{}}}],["randomnum(min",{"_index":323,"title":{},"body":{"classes/Color.html":{}}}],["randompasswordops",{"_index":1628,"title":{"interfaces/RandomPasswordOps.html":{}},"body":{"interfaces/RandomPasswordOps.html":{},"coverage.html":{}}}],["re",{"_index":2362,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["reactiveformsmodule",{"_index":1872,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{}}}],["read",{"_index":2184,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["readasarraybuffer",{"_index":2608,"title":{},"body":{"coverage.html":{}}}],["readasdataurl",{"_index":179,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{}}}],["readasdataurl(this.image.file).pipe(take(1)).subscribe((result",{"_index":200,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["readonly",{"_index":733,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"modules/VirtualScrollerModule.html":{}}}],["ready",{"_index":1802,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["realizar",{"_index":116,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{}}}],["recalculating",{"_index":2358,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["redirect",{"_index":780,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["redo",{"_index":340,"title":{},"body":{"classes/Color.html":{}}}],["refresh_internal(itemsarraymodified",{"_index":2352,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["refreshcompletedcallback",{"_index":2353,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["registeronchange",{"_index":1399,"title":{},"body":{"components/PinInputComponent.html":{}}}],["registeronchange(fn",{"_index":1428,"title":{},"body":{"components/PinInputComponent.html":{}}}],["registerontouched",{"_index":1400,"title":{},"body":{"components/PinInputComponent.html":{}}}],["registerontouched(fn",{"_index":1431,"title":{},"body":{"components/PinInputComponent.html":{}}}],["registro",{"_index":522,"title":{},"body":{"classes/CustomValidators.html":{}}}],["relative",{"_index":2067,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["remote",{"_index":581,"title":{},"body":{"classes/CustomValidators.html":{}}}],["removescrolleventhandlers",{"_index":2489,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["remueve",{"_index":1600,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["rename",{"_index":1837,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["render",{"_index":2363,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["rendered",{"_index":193,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["rendered.listen(this._elementref.nativeelement",{"_index":848,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["renderer",{"_index":2021,"title":{},"body":{"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["renderer2",{"_index":178,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["representa",{"_index":228,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["requestanimationframe",{"_index":2427,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["requestanimationframe(animate",{"_index":2256,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["requestbody",{"_index":158,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/CustomValidators.html":{}}}],["requestbody).pipe",{"_index":166,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["requestbody.value",{"_index":164,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["require",{"_index":2640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiredfiletype",{"_index":508,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["requiredfiletype(ext",{"_index":565,"title":{},"body":{"classes/CustomValidators.html":{}}}],["requiredpermission",{"_index":253,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["requiredpermissions",{"_index":245,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["res",{"_index":776,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["res.email",{"_index":791,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["res.first_name",{"_index":787,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["res.getauthresponse().id_token",{"_index":989,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["res.getbasicprofile",{"_index":986,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["res.id",{"_index":783,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["res.last_name",{"_index":789,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["resize",{"_index":2484,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["resizebypassrefreshthreshold",{"_index":2031,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["response.authresponse.accesstoken",{"_index":785,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["response.status",{"_index":771,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["restablecer",{"_index":1867,"title":{},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"modules/VirtualScrollerModule.html":{},"overview.html":{}}}],["restriction",{"_index":2744,"title":{},"body":{"license.html":{}}}],["result",{"_index":15,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.bottom",{"_index":2294,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result.height",{"_index":2298,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result.left",{"_index":2295,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result.right",{"_index":2296,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result.top",{"_index":2293,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result.width",{"_index":2297,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["result['cancel",{"_index":2343,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["resultados",{"_index":18,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retryifneeded",{"_index":2223,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["return",{"_index":65,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{}}}],["returns",{"_index":133,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["returntype",{"_index":845,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["retval",{"_index":1676,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["revertparentoverscroll",{"_index":2164,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["right",{"_index":2292,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["right/middle",{"_index":1254,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["rightcmd",{"_index":2867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rights",{"_index":2747,"title":{},"body":{"license.html":{}}}],["root",{"_index":120,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["rotate",{"_index":319,"title":{},"body":{"classes/Color.html":{}}}],["round",{"_index":2557,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["rows",{"_index":1028,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["rules",{"_index":1743,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["runs",{"_index":2387,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ruta",{"_index":86,"title":{},"body":{"injectables/AwsService.html":{},"injectables/CookiesService.html":{}}}],["rxjs",{"_index":150,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"classes/Color.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"injectables/MapService.html":{},"directives/SerControlDirective.html":{},"components/SerFormElementComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"dependencies.html":{}}}],["rxjs/add/observable/combinelatest",{"_index":1769,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/add/operator/distinctuntilchanged",{"_index":1768,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/add/operator/filter",{"_index":1766,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/add/operator/map",{"_index":1767,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/behaviorsubject",{"_index":1835,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["rxjs/observable",{"_index":1763,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/operators",{"_index":155,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["rxjs/subject",{"_index":1764,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rxjs/subscription",{"_index":1765,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["rápidas",{"_index":2714,"title":{},"body":{"index.html":{}}}],["s3",{"_index":9,"title":{"interfaces/S3.html":{}},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/S3.html":{},"coverage.html":{}}}],["s4",{"_index":1647,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"coverage.html":{}}}],["sa",{"_index":2880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safari",{"_index":916,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["salidas",{"_index":458,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/LongPressDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["salir",{"_index":903,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["same",{"_index":2413,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["samesite",{"_index":428,"title":{},"body":{"injectables/CookiesService.html":{}}}],["sat",{"_index":294,"title":{},"body":{"classes/Color.html":{}}}],["save",{"_index":2722,"title":{},"body":{"index.html":{}}}],["savedvalue",{"_index":1021,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["scale",{"_index":344,"title":{},"body":{"classes/Color.html":{}}}],["scalelight",{"_index":295,"title":{},"body":{"classes/Color.html":{}}}],["schemas",{"_index":60,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["scheme",{"_index":1551,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme(value",{"_index":1581,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts",{"_index":1534,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{},"coverage.html":{}}}],["scheme.service.ts:111",{"_index":1559,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:123",{"_index":1560,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:16",{"_index":1562,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:17",{"_index":1566,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:20",{"_index":1568,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:24",{"_index":1564,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:25",{"_index":1570,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:28",{"_index":1572,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:32",{"_index":1563,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:33",{"_index":1574,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:36",{"_index":1576,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:40",{"_index":1554,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:52",{"_index":1558,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:65",{"_index":1557,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:77",{"_index":1555,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme.service.ts:93",{"_index":1556,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scheme/prefers",{"_index":1533,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{},"coverage.html":{}}}],["schemedarkclassname",{"_index":1553,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["schemedarkclassname(value",{"_index":1585,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["schemelightclassname",{"_index":1552,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["schemelightclassname(value",{"_index":1583,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["scope",{"_index":800,"title":{},"body":{"injectables/FacebookSDKService.html":{},"modules/GoogleSDKModule.html":{},"classes/LeafletMap.html":{}}}],["scopes",{"_index":1363,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["script",{"_index":688,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["script.service.ts",{"_index":671,"title":{},"body":{"injectables/ExternalScriptService.html":{},"coverage.html":{}}}],["script.service.ts:16",{"_index":676,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["script.service.ts:20",{"_index":679,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["script/external",{"_index":670,"title":{},"body":{"injectables/ExternalScriptService.html":{},"coverage.html":{}}}],["scritps",{"_index":682,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["scroll",{"_index":1951,"title":{},"body":{"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["scroll.ts",{"_index":2041,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["scroll/defaultoptions.ts",{"_index":2028,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"coverage.html":{}}}],["scroll/idimension.ts",{"_index":1034,"title":{},"body":{"interfaces/IDimensions.html":{},"coverage.html":{}}}],["scroll/ipageinfo.ts",{"_index":1046,"title":{},"body":{"interfaces/IPageInfo.html":{},"coverage.html":{}}}],["scroll/iviewport.ts",{"_index":1054,"title":{},"body":{"interfaces/IViewport.html":{},"coverage.html":{}}}],["scroll/virtual",{"_index":1950,"title":{},"body":{"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["scroll/wrapgroupdimension.ts",{"_index":2589,"title":{},"body":{"interfaces/WrapGroupDimension.html":{},"coverage.html":{}}}],["scroll/wrapgroupdimensions.ts",{"_index":2590,"title":{},"body":{"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["scrollable",{"_index":2078,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollanimationtime",{"_index":2032,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrollbarheight",{"_index":2033,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrollbarwidth",{"_index":2034,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrollclientrect",{"_index":2497,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollclientrect.left",{"_index":2500,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollclientrect.top",{"_index":2502,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolldebouncetime",{"_index":2035,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrolldebouncetime(value",{"_index":2138,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolled.directive",{"_index":1958,"title":{},"body":{"modules/SerUiModule.html":{}}}],["scrolled.directive.ts",{"_index":2582,"title":{},"body":{"directives/WhenScrolledDirective.html":{},"coverage.html":{}}}],["scrolled.directive.ts:10",{"_index":2583,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["scrolled.directive.ts:20",{"_index":2585,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["scrolled.directive.ts:9",{"_index":2584,"title":{},"body":{"directives/WhenScrolledDirective.html":{}}}],["scrollelement",{"_index":2165,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollelement.style['overflow",{"_index":2168,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollelement[this._scrolltype",{"_index":2240,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollendposition",{"_index":1049,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["scroller",{"_index":2263,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scroller,[virtualscroller",{"_index":1506,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrolling",{"_index":2072,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollinto(item",{"_index":2214,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollleft",{"_index":2331,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolllength",{"_index":1042,"title":{},"body":{"interfaces/IDimensions.html":{},"interfaces/IViewport.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrolllengthchanged",{"_index":2435,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolllengthdelta",{"_index":2417,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolloffset",{"_index":2532,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolloffsettoremove",{"_index":2540,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollposition",{"_index":2232,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollpositionchanged",{"_index":2440,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrollstartposition",{"_index":1050,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrollthrottlingtime",{"_index":2036,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["scrollthrottlingtime(value",{"_index":2134,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolltoindex(index",{"_index":2221,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolltop",{"_index":2335,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["scrolltoposition(scrollposition",{"_index":2231,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["sd",{"_index":1514,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{}}}],["sdbadgedirective",{"_index":1513,"title":{"directives/SDBadgeDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sdbadgeitemdirective",{"_index":1516,"title":{"directives/SDBadgeItemDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sditemdirective",{"_index":1519,"title":{"directives/SDItemDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sdk",{"_index":686,"title":{},"body":{"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"dependencies.html":{}}}],["sdk.config",{"_index":750,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["sdk.config.ts",{"_index":700,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{},"coverage.html":{}}}],["sdk.config.ts:10",{"_index":704,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["sdk.config.ts:4",{"_index":705,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["sdk.config.ts:5",{"_index":707,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["sdk.config.ts:8",{"_index":709,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["sdk.module.ts",{"_index":716,"title":{},"body":{"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["sdk.module.ts:30",{"_index":952,"title":{},"body":{"modules/GoogleSDKModule.html":{}}}],["sdk.module.ts:32",{"_index":718,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["sdk.service",{"_index":721,"title":{},"body":{"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["sdk.service.ts",{"_index":731,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sdk.service.ts:19",{"_index":742,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["sdk.service.ts:20",{"_index":740,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:21",{"_index":744,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["sdk.service.ts:24",{"_index":746,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:25",{"_index":970,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:28",{"_index":737,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:32",{"_index":968,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:33",{"_index":972,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:36",{"_index":974,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:38",{"_index":964,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:43",{"_index":739,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["sdk.service.ts:53",{"_index":966,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:83",{"_index":965,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["sdk.service.ts:85",{"_index":738,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["se",{"_index":808,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["searchautofocus",{"_index":655,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["searchby",{"_index":590,"title":{},"body":{"injectables/DataService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["searchby.length",{"_index":604,"title":{},"body":{"injectables/DataService.html":{}}}],["searchplaceholdertext",{"_index":656,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["secret",{"_index":1364,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["secure",{"_index":427,"title":{},"body":{"injectables/CookiesService.html":{}}}],["segoe",{"_index":377,"title":{},"body":{"classes/Color.html":{}}}],["segura",{"_index":435,"title":{},"body":{"injectables/CookiesService.html":{}}}],["según",{"_index":1615,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["selbox",{"_index":477,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.focus",{"_index":489,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.select",{"_index":490,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.style.left",{"_index":483,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.style.opacity",{"_index":485,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.style.position",{"_index":479,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.style.top",{"_index":484,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.style.zindex",{"_index":481,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["selbox.value",{"_index":486,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["select",{"_index":1679,"title":{},"body":{"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"modules/SerSelectModule.html":{},"coverage.html":{}}}],["select'},{'name",{"_index":1503,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["select.component",{"_index":1948,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["select.component.ts",{"_index":2618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["select.interface.ts",{"_index":634,"title":{},"body":{"interfaces/DropdownSettings.html":{},"coverage.html":{}}}],["select.module",{"_index":1930,"title":{},"body":{"modules/SerFormModule.html":{}}}],["select.module.ts",{"_index":1944,"title":{},"body":{"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["select.service",{"_index":1949,"title":{},"body":{"modules/SerSelectModule.html":{}}}],["select.service.ts",{"_index":585,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["select.service.ts:23",{"_index":591,"title":{},"body":{"injectables/DataService.html":{}}}],["select.service.ts:9",{"_index":594,"title":{},"body":{"injectables/DataService.html":{}}}],["select/ser",{"_index":1929,"title":{},"body":{"modules/SerFormModule.html":{}}}],["selectalltext",{"_index":657,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["selectgroup",{"_index":658,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["selector",{"_index":186,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["sell",{"_index":2754,"title":{},"body":{"license.html":{}}}],["ser",{"_index":57,"title":{},"body":{"modules/AwsModule.html":{},"interfaces/CenterPoint.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"license.html":{}}}],["sercontrol",{"_index":1692,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["sercontrol]'},{'name",{"_index":1521,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["sercontroldirective",{"_index":1520,"title":{"directives/SerControlDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sererror",{"_index":1740,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["sererror(value",{"_index":1773,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["sererror]'},{'name",{"_index":1523,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["sererrordirective",{"_index":1522,"title":{"directives/SerErrorDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sererrors",{"_index":1801,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["sererrors]'},{'name",{"_index":1525,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["sererrorsdirective",{"_index":1524,"title":{"directives/SerErrorsDirective.html":{}},"body":{"components/PinInputComponent.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["serfiltercomponent",{"_index":1498,"title":{},"body":{"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serfiltermodule",{"_index":1859,"title":{"modules/SerFilterModule.html":{}},"body":{"modules/SerFilterModule.html":{},"modules/SerFormModule.html":{},"modules.html":{},"overview.html":{}}}],["serformelementcomponent",{"_index":1500,"title":{"components/SerFormElementComponent.html":{}},"body":{"components/PinInputComponent.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["serformmodule",{"_index":1919,"title":{"modules/SerFormModule.html":{}},"body":{"modules/SerFormModule.html":{},"modules.html":{},"overview.html":{}}}],["serselectcomponent",{"_index":1502,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serselectmodule",{"_index":1923,"title":{"modules/SerSelectModule.html":{}},"body":{"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules.html":{},"overview.html":{}}}],["sersol/leaflet",{"_index":1116,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"dependencies.html":{}}}],["sersol/ngx",{"_index":52,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"index.html":{}}}],["seruimodule",{"_index":1952,"title":{"modules/SerUiModule.html":{}},"body":{"modules/SerUiModule.html":{},"modules.html":{},"overview.html":{}}}],["servicio",{"_index":49,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"injectables/GoogleSDKService.html":{}}}],["sesión",{"_index":765,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["set",{"_index":122,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerErrorDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["set(name",{"_index":424,"title":{},"body":{"injectables/CookiesService.html":{}}}],["setawsdata(value",{"_index":98,"title":{},"body":{"injectables/AwsService.html":{}}}],["setbowserclasses",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["setclientconfig(value",{"_index":708,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["setconfig(value",{"_index":745,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["setdisabledstate",{"_index":1401,"title":{},"body":{"components/PinInputComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1433,"title":{},"body":{"components/PinInputComponent.html":{}}}],["setea",{"_index":402,"title":{},"body":{"injectables/CookiesService.html":{},"injectables/PrefersColorSchemeService.html":{}}}],["setenabled",{"_index":906,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["setenabled(e",{"_index":924,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["setgoogleauth(value",{"_index":973,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["setinterval",{"_index":2487,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["setisenabled(value",{"_index":899,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["setopeniddata(value",{"_index":262,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["setscheme",{"_index":1616,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["setscheme(value",{"_index":1567,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["setschemedarkclassname(value",{"_index":1575,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["setschemelightclassname(value",{"_index":1571,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["setsererror(value",{"_index":1761,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["settimeout",{"_index":852,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"directives/SerErrorsDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["settings",{"_index":328,"title":{},"body":{"classes/Color.html":{}}}],["setvalueanderrors(this",{"_index":2013,"title":{},"body":{"interfaces/String.html":{}}}],["setview",{"_index":1066,"title":{},"body":{"classes/LeafletMap.html":{}}}],["setview(latlng",{"_index":1111,"title":{},"body":{"classes/LeafletMap.html":{}}}],["setwhen(value",{"_index":1762,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["shall",{"_index":2762,"title":{},"body":{"license.html":{}}}],["shift",{"_index":2864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["short",{"_index":2406,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["show",{"_index":1449,"title":{},"body":{"components/PinInputComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["showcheckbox",{"_index":659,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["shrink",{"_index":2096,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["si",{"_index":110,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{}}}],["simple",{"_index":1330,"title":{},"body":{"injectables/MapService.html":{}}}],["sin",{"_index":89,"title":{},"body":{"injectables/AwsService.html":{}}}],["singleselection",{"_index":660,"title":{},"body":{"interfaces/DropdownSettings.html":{}}}],["sistema",{"_index":1594,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["size",{"_index":556,"title":{},"body":{"classes/CustomValidators.html":{}}}],["sizechanged",{"_index":2303,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["sized",{"_index":2390,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["sizing",{"_index":2089,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["sliced",{"_index":2365,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["snackbar",{"_index":1979,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["snackbaropts",{"_index":1968,"title":{"interfaces/SnackbarOpts.html":{}},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["snackbarservice",{"_index":1974,"title":{"injectables/SnackbarService.html":{}},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["software",{"_index":2739,"title":{},"body":{"license.html":{}}}],["soluciones",{"_index":2729,"title":{},"body":{"license.html":{}}}],["son",{"_index":546,"title":{},"body":{"classes/CustomValidators.html":{},"injectables/MapService.html":{}}}],["soporta",{"_index":2797,"title":{},"body":{"modules.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleClientConfig.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"modules/SerSelectModule.html":{},"modules/SerUiModule.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{}}}],["space",{"_index":2093,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["spec\\.ts",{"_index":2856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specialchars",{"_index":1633,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["split",{"_index":444,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src",{"_index":678,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["src/.../array.ts",{"_index":2818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../aws.service.ts",{"_index":2811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../facebook",{"_index":2816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google",{"_index":2817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../keyboard",{"_index":2814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../patterns.ts",{"_index":2812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../providers.ts",{"_index":2815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ser",{"_index":2809,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/aws/aws.module.ts",{"_index":24,"title":{},"body":{"modules/AwsModule.html":{}}}],["src/aws/aws.module.ts:32",{"_index":32,"title":{},"body":{"modules/AwsModule.html":{}}}],["src/aws/aws.service.ts",{"_index":68,"title":{},"body":{"injectables/AwsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/aws/aws.service.ts:18",{"_index":95,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/aws.service.ts:19",{"_index":97,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/aws.service.ts:22",{"_index":99,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/aws.service.ts:24",{"_index":80,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/aws.service.ts:38",{"_index":94,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/aws.service.ts:54",{"_index":83,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/aws/iaws.ts",{"_index":6,"title":{},"body":{"interfaces/AwsData.html":{},"interfaces/S3.html":{},"coverage.html":{}}}],["src/cookie/cookies.service.ts",{"_index":394,"title":{},"body":{"injectables/CookiesService.html":{},"coverage.html":{}}}],["src/cookie/cookies.service.ts:136",{"_index":416,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/cookie/cookies.service.ts:145",{"_index":419,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/cookie/cookies.service.ts:17",{"_index":412,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/cookie/cookies.service.ts:26",{"_index":422,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/cookie/cookies.service.ts:64",{"_index":421,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/cookie/cookies.service.ts:85",{"_index":431,"title":{},"body":{"injectables/CookiesService.html":{}}}],["src/external",{"_index":669,"title":{},"body":{"injectables/ExternalScriptService.html":{},"coverage.html":{}}}],["src/facebook/config/facebook",{"_index":699,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"coverage.html":{}}}],["src/facebook/facebook",{"_index":715,"title":{},"body":{"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/facebook/ifacebook.ts",{"_index":826,"title":{},"body":{"interfaces/FacebookUserProfile.html":{},"coverage.html":{}}}],["src/file/read.ts",{"_index":2606,"title":{},"body":{"coverage.html":{}}}],["src/form/address/address",{"_index":2610,"title":{},"body":{"coverage.html":{}}}],["src/form/filter/ser",{"_index":829,"title":{},"body":{"interfaces/FilterSettings.html":{},"modules/SerFilterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/form/grow",{"_index":1006,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"coverage.html":{}}}],["src/form/pin/pin",{"_index":1375,"title":{},"body":{"components/PinInputComponent.html":{},"coverage.html":{}}}],["src/form/select/ser",{"_index":584,"title":{},"body":{"injectables/DataService.html":{},"interfaces/DropdownSettings.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"modules/SerSelectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/form/select/virtual",{"_index":1033,"title":{},"body":{"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["src/form/ser",{"_index":663,"title":{},"body":{"interfaces/ErrorDetails.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"modules/SerFormModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/form/validations/comparison.ts",{"_index":2628,"title":{},"body":{"coverage.html":{}}}],["src/form/validations/custom",{"_index":495,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["src/form/validations/file.ts",{"_index":2630,"title":{},"body":{"coverage.html":{}}}],["src/form/validations/match.ts",{"_index":2631,"title":{},"body":{"coverage.html":{}}}],["src/form/validations/remote.ts",{"_index":138,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"coverage.html":{}}}],["src/fullscreen/fullscreen",{"_index":855,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"coverage.html":{}}}],["src/fullscreen/fullscreen.service.ts",{"_index":873,"title":{},"body":{"injectables/FullscreenService.html":{},"coverage.html":{}}}],["src/fullscreen/fullscreen.service.ts:106",{"_index":895,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:19",{"_index":896,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:20",{"_index":898,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:23",{"_index":900,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:25",{"_index":889,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:67",{"_index":894,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/fullscreen/fullscreen.service.ts:86",{"_index":893,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["src/google/config/google",{"_index":948,"title":{},"body":{"classes/GoogleSDKConfig.html":{},"coverage.html":{}}}],["src/google/google",{"_index":950,"title":{},"body":{"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/google/igoogle.ts",{"_index":943,"title":{},"body":{"classes/GoogleClientConfig.html":{},"interfaces/GoogleUserProfile.html":{},"coverage.html":{}}}],["src/graphql/utils.ts",{"_index":2633,"title":{},"body":{"coverage.html":{}}}],["src/interfaces/string.extensions.ts",{"_index":1997,"title":{},"body":{"interfaces/String.html":{},"coverage.html":{}}}],["src/interfaces/string.extensions.ts:3",{"_index":2000,"title":{},"body":{"interfaces/String.html":{}}}],["src/map/leaflet/main.ts",{"_index":1057,"title":{},"body":{"classes/LeafletMap.html":{},"coverage.html":{}}}],["src/map/leaflet/main.ts:112",{"_index":1097,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:12",{"_index":1073,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:125",{"_index":1110,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:13",{"_index":1076,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:137",{"_index":1113,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:14",{"_index":1075,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:149",{"_index":1099,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:15",{"_index":1071,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:16",{"_index":1095,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:36",{"_index":1069,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:59",{"_index":1104,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/main.ts:66",{"_index":1103,"title":{},"body":{"classes/LeafletMap.html":{}}}],["src/map/leaflet/providers.ts",{"_index":2635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/map/leaflet/types.ts",{"_index":1189,"title":{},"body":{"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"coverage.html":{}}}],["src/map/map.service.ts",{"_index":1286,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/map/map.service.ts:22",{"_index":1308,"title":{},"body":{"injectables/MapService.html":{}}}],["src/map/map.service.ts:44",{"_index":1293,"title":{},"body":{"injectables/MapService.html":{}}}],["src/map/map.service.ts:52",{"_index":1302,"title":{},"body":{"injectables/MapService.html":{}}}],["src/map/map.service.ts:58",{"_index":1299,"title":{},"body":{"injectables/MapService.html":{}}}],["src/map/map.service.ts:67",{"_index":1323,"title":{},"body":{"injectables/MapService.html":{}}}],["src/map/types.ts",{"_index":220,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"coverage.html":{}}}],["src/open",{"_index":236,"title":{},"body":{"injectables/ClaimsService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"coverage.html":{}}}],["src/prefers",{"_index":1532,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{},"coverage.html":{}}}],["src/test.ts",{"_index":2638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/ui/bg",{"_index":171,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"coverage.html":{}}}],["src/ui/copy",{"_index":455,"title":{},"body":{"directives/CopyToClipboardDirective.html":{},"coverage.html":{}}}],["src/ui/download.service.ts",{"_index":611,"title":{},"body":{"injectables/DownloadService.html":{},"coverage.html":{}}}],["src/ui/download.service.ts:20",{"_index":615,"title":{},"body":{"injectables/DownloadService.html":{}}}],["src/ui/download.service.ts:8",{"_index":613,"title":{},"body":{"injectables/DownloadService.html":{}}}],["src/ui/finish",{"_index":832,"title":{},"body":{"directives/FinishTypingDirective.html":{},"coverage.html":{}}}],["src/ui/long",{"_index":1197,"title":{},"body":{"directives/LongPressDirective.html":{},"coverage.html":{}}}],["src/ui/ser",{"_index":1956,"title":{},"body":{"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/ui/snackbar.service.ts",{"_index":1969,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["src/ui/snackbar.service.ts:18",{"_index":1996,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/ui/toggle",{"_index":2018,"title":{},"body":{"directives/ToggleClassDirective.html":{},"coverage.html":{}}}],["src/ui/when",{"_index":2581,"title":{},"body":{"directives/WhenScrolledDirective.html":{},"coverage.html":{}}}],["src/utils/array.ts",{"_index":2642,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/avatar.ts",{"_index":284,"title":{},"body":{"classes/Color.html":{},"coverage.html":{}}}],["src/utils/avatar.ts:10",{"_index":304,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:11",{"_index":302,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:13",{"_index":311,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:14",{"_index":306,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:16",{"_index":315,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:17",{"_index":310,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:19",{"_index":313,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:20",{"_index":308,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:22",{"_index":301,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:46",{"_index":325,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:51",{"_index":320,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:57",{"_index":322,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:8",{"_index":303,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/avatar.ts:9",{"_index":316,"title":{},"body":{"classes/Color.html":{}}}],["src/utils/bowser.ts",{"_index":2649,"title":{},"body":{"coverage.html":{}}}],["src/utils/check.ts",{"_index":2651,"title":{},"body":{"coverage.html":{}}}],["src/utils/keyboard",{"_index":2653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/navigator.ts",{"_index":2656,"title":{},"body":{"coverage.html":{}}}],["src/utils/object.ts",{"_index":2660,"title":{},"body":{"coverage.html":{}}}],["src/utils/patterns.ts",{"_index":2661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/random.ts",{"_index":1629,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"coverage.html":{}}}],["src/utils/rx",{"_index":2667,"title":{},"body":{"coverage.html":{}}}],["ssrchildheight",{"_index":2122,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ssrchildwidth",{"_index":2121,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ssrviewportheight",{"_index":2125,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["ssrviewportwidth",{"_index":2123,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["start",{"_index":2249,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["startchanged",{"_index":2429,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["started",{"_index":2709,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":1051,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["startindexwithbuffer",{"_index":1052,"title":{},"body":{"interfaces/IPageInfo.html":{},"modules/VirtualScrollerModule.html":{}}}],["state",{"_index":2014,"title":{},"body":{"interfaces/String.html":{}}}],["states",{"_index":1744,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["states.indexof(rule",{"_index":1789,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["static",{"_index":26,"title":{},"body":{"modules/AwsModule.html":{},"classes/CustomValidators.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["stopped",{"_index":2399,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["street",{"_index":1090,"title":{},"body":{"classes/LeafletMap.html":{},"miscellaneous/variables.html":{}}}],["strict",{"_index":430,"title":{},"body":{"injectables/CookiesService.html":{}}}],["string",{"_index":14,"title":{"interfaces/String.html":{}},"body":{"interfaces/AwsData.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"classes/GoogleClientConfig.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string.prototype.tocapitalize",{"_index":2006,"title":{},"body":{"interfaces/String.html":{}}}],["stripedtable",{"_index":2037,"title":{},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{}}}],["styles",{"_index":2066,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["su",{"_index":571,"title":{},"body":{"classes/CustomValidators.html":{}}}],["subject",{"_index":1756,"title":{},"body":{"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"license.html":{}}}],["sublicense",{"_index":2752,"title":{},"body":{"license.html":{}}}],["subscribe(([states",{"_index":1792,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["subscription",{"_index":1020,"title":{},"body":{"directives/GrowOnInputDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"components/SerFormElementComponent.html":{}}}],["substantial",{"_index":2764,"title":{},"body":{"license.html":{}}}],["substring(1",{"_index":1657,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["sumofknownwrapgroupchildheights",{"_index":2593,"title":{},"body":{"interfaces/WrapGroupDimensions.html":{}}}],["sumofknownwrapgroupchildwidths",{"_index":2594,"title":{},"body":{"interfaces/WrapGroupDimensions.html":{}}}],["sumofvisiblemaxheights",{"_index":2539,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["sumofvisiblemaxwidths",{"_index":2538,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["svg",{"_index":2798,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":154,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["switchmap((value",{"_index":162,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["t",{"_index":606,"title":{},"body":{"injectables/DataService.html":{}}}],["tab",{"_index":2873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":2672,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2671,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":181,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["tamaño",{"_index":552,"title":{},"body":{"classes/CustomValidators.html":{},"interfaces/RandomPasswordOps.html":{}}}],["target",{"_index":1476,"title":{},"body":{"components/PinInputComponent.html":{}}}],["target.value",{"_index":1479,"title":{},"body":{"components/PinInputComponent.html":{}}}],["targetlatlng",{"_index":1182,"title":{},"body":{"classes/LeafletMap.html":{}}}],["targetpathfield",{"_index":524,"title":{},"body":{"classes/CustomValidators.html":{}}}],["targetpoint",{"_index":1179,"title":{},"body":{"classes/LeafletMap.html":{}}}],["targetzoom",{"_index":1112,"title":{},"body":{"classes/LeafletMap.html":{}}}],["targetzoom).subtract(offset",{"_index":1181,"title":{},"body":{"classes/LeafletMap.html":{}}}],["tema",{"_index":1611,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["template",{"_index":1372,"title":{},"body":{"components/PinInputComponent.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{}}}],["templateref",{"_index":1683,"title":{},"body":{"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{}}}],["templateurl",{"_index":1384,"title":{},"body":{"components/PinInputComponent.html":{}}}],["text",{"_index":1456,"title":{},"body":{"components/PinInputComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["text/javascript",{"_index":817,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["textarea",{"_index":1027,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["think",{"_index":2385,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["third_id",{"_index":1365,"title":{},"body":{"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["this._awsdata",{"_index":121,"title":{},"body":{"injectables/AwsService.html":{}}}],["this._bufferamount",{"_index":2129,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._checkresizeinterval",{"_index":2149,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._childscrolldim",{"_index":2326,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._clientconfig",{"_index":711,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["this._config",{"_index":754,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["this._elementref.nativeelement.nodename",{"_index":1026,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["this._elementref.nativeelement.rows",{"_index":1031,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["this._enableunequalchildrensizes",{"_index":2116,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._form.control.get(this.controlname",{"_index":1855,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this._googleauth",{"_index":979,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["this._horizontal",{"_index":2161,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._invisiblepaddingproperty",{"_index":2321,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._isenabled",{"_index":904,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this._items",{"_index":2154,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._margindir",{"_index":2327,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._ngcontrol?.control?.dirty",{"_index":1728,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._ngcontrol?.control?.disabled",{"_index":1730,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._ngcontrol?.control?.invalid",{"_index":1726,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._ngcontrol?.control?.pending",{"_index":1732,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._ngcontrol?.control?.valid",{"_index":1724,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._ngcontrol?.control?.valuechanges.subscribe((value",{"_index":1735,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this._offsettype",{"_index":2322,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._openiddata",{"_index":268,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this._pageoffsettype",{"_index":2324,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._parentscroll",{"_index":2173,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._renderer?.listen(this._elementref.nativeelement",{"_index":1025,"title":{},"body":{"directives/GrowOnInputDirective.html":{}}}],["this._scheme",{"_index":1580,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this._schemedarkclassname",{"_index":1584,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this._schemelightclassname",{"_index":1582,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this._scrolldebouncetime",{"_index":2137,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._scrollthrottlingtime",{"_index":2133,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._scrolltype",{"_index":2238,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._sererrors.control",{"_index":1797,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this._sererrors.subject",{"_index":1783,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this._states",{"_index":1780,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this._states.asobservable().distinctuntilchanged",{"_index":1782,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this._states.next",{"_index":1795,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this._translatedir",{"_index":2329,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._translatedir}(${offset}px",{"_index":2460,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this._translatedir}(${viewport.padding}px",{"_index":2452,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.addscrolleventhandlers",{"_index":2151,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.applyfilter(item",{"_index":600,"title":{},"body":{"injectables/DataService.html":{}}}],["this.aws.gets3bgurl(this.image.url",{"_index":205,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["this.awsdata",{"_index":125,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.awsservice.gets3url(&#39;assets/file.png&#39",{"_index":92,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.awsservice.gets3url('assets/file.png",{"_index":132,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.bufferamount",{"_index":2567,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.cacheditemslength",{"_index":2195,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.calculatedimensions",{"_index":2226,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.calculatepadding(index",{"_index":2227,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.calculatepadding(pageinfo.startindexwithbuffer",{"_index":2576,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.calculatepageinfo(scrollstartposition",{"_index":2574,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.calculateviewport",{"_index":2428,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.callback.emit",{"_index":853,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["this.caninputvalue(e.key.tolowercase",{"_index":1485,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.caninputvalue(value",{"_index":1481,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.changedetectorref.markforcheck",{"_index":2472,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.checkpropstate('invalid",{"_index":1843,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.checkpropstate('valid",{"_index":1844,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.checkresizeinterval",{"_index":2274,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.checkscrollelementresized",{"_index":2488,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.checkscrollelementresizedtimer",{"_index":2486,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.checkstatus",{"_index":1856,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.childheight",{"_index":2517,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.childwidth",{"_index":2516,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.claimsservice.atleastpermissions([&#39;users.view&#39",{"_index":248,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimsservice.atleastpermissions(['users.view",{"_index":277,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimsservice.haspermission(&#39;users.view&#39",{"_index":255,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimsservice.haspermission('users.view",{"_index":271,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimsservice.haspermissions([&#39;users.view&#39",{"_index":258,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.clientconfig",{"_index":713,"title":{},"body":{"classes/FacebookSDKConfig.html":{},"classes/GoogleSDKConfig.html":{}}}],["this.codeinputs",{"_index":1457,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.codelength",{"_index":1474,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.compareitems(oldstartitem",{"_index":2424,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.config",{"_index":758,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["this.containerelementref",{"_index":2492,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.containerelementref.nativeelement",{"_index":2493,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.containerelementref.nativeelement[this._offsettype",{"_index":2494,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.contentelementref.nativeelement).children",{"_index":2511,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.control",{"_index":1851,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control.errors",{"_index":1841,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control.geterror(name",{"_index":1845,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control.haserror(name",{"_index":1850,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control.statuschanges.subscribe(this.checkstatus.bind(this",{"_index":1857,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control[condition",{"_index":1848,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.control[prop",{"_index":1849,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.cookiesservice.delete('test",{"_index":403,"title":{},"body":{"injectables/CookiesService.html":{}}}],["this.cookiesservice.deleteall",{"_index":405,"title":{},"body":{"injectables/CookiesService.html":{}}}],["this.cookiesservice.get('test",{"_index":396,"title":{},"body":{"injectables/CookiesService.html":{}}}],["this.cookiesservice.set('test",{"_index":400,"title":{},"body":{"injectables/CookiesService.html":{}}}],["this.copied.emit(this.valtocopy",{"_index":493,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["this.currenttween",{"_index":2235,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.currenttween.stop",{"_index":2236,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.dark",{"_index":1606,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.debounce",{"_index":2143,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.dirty",{"_index":1727,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.disable",{"_index":940,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.disabled",{"_index":1729,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.dismiss",{"_index":1284,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.disposeresizehandler",{"_index":2483,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.disposescrollhandler",{"_index":2481,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.downloadelement",{"_index":617,"title":{},"body":{"injectables/DownloadService.html":{}}}],["this.downloadelement.click",{"_index":631,"title":{},"body":{"injectables/DownloadService.html":{}}}],["this.downloadelement.setattribute('download",{"_index":629,"title":{},"body":{"injectables/DownloadService.html":{}}}],["this.downloadelement.setattribute('href",{"_index":628,"title":{},"body":{"injectables/DownloadService.html":{}}}],["this.downloadelement.setattribute('target",{"_index":619,"title":{},"body":{"injectables/DownloadService.html":{}}}],["this.el.nativeelement",{"_index":2025,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["this.element.nativeelement",{"_index":2177,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.enable",{"_index":941,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.enabledark",{"_index":1597,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.enablelight",{"_index":1598,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.enableunequalchildrensizes",{"_index":2130,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.endpress",{"_index":1277,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.errornames",{"_index":1774,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.errornames.indexof(obj.errorname",{"_index":1786,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.errors",{"_index":1842,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.errors.hasownproperty(errorname",{"_index":1853,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.executerefreshoutsideangularzone",{"_index":2474,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.externalscriptservice.insert('google",{"_index":672,"title":{},"body":{"injectables/ExternalScriptService.html":{}}}],["this.focus",{"_index":1719,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.formelement?.dirty",{"_index":1912,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.disabled",{"_index":1905,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.focus",{"_index":1907,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.hasvalue",{"_index":1910,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.invalid",{"_index":1916,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.pending",{"_index":1918,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.formelement?.valid",{"_index":1914,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["this.fsdkurl",{"_index":815,"title":{},"body":{"injectables/FacebookSDKService.html":{}}}],["this.fullscreenservice.disable",{"_index":880,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.fullscreenservice.enable",{"_index":875,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.fullscreenservice.isenabled",{"_index":882,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.gapiurl",{"_index":998,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["this.getelementsize(child",{"_index":2521,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getelementsize(scrollelement",{"_index":2498,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getelementsize(this.element.nativeelement",{"_index":2496,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getelementsize(this.getscrollelement",{"_index":2302,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getelementsoffset",{"_index":2233,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getscrollelement",{"_index":2166,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getscrollelement()[this._scrolltype",{"_index":2455,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.getscrollstartposition",{"_index":2571,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.googleauth",{"_index":1001,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["this.googleauth.signin().then((res",{"_index":984,"title":{},"body":{"injectables/GoogleSDKService.html":{}}}],["this.hasvalue",{"_index":1722,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.headerelementref",{"_index":2454,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.headerelementref.nativeelement.clientheight",{"_index":2458,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.hidden",{"_index":1793,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.horizontal",{"_index":2178,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.hue",{"_index":337,"title":{},"body":{"classes/Color.html":{}}}],["this.image.file",{"_index":197,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["this.imageregex.test(this.image.file.type",{"_index":199,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["this.initmarkercluster",{"_index":1139,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.inputchangedpromise",{"_index":850,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["this.inputs.foreach((input",{"_index":1470,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.inputs.push(item.nativeelement",{"_index":1464,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.inputs[prev].focus",{"_index":1484,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.inputslist.foreach((item",{"_index":1459,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.invalid",{"_index":1725,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.invalidatecachedmeasurementatindex(index",{"_index":2205,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.isangularuniversalssr",{"_index":2265,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.iscodehidden",{"_index":1454,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.isenabled",{"_index":912,"title":{},"body":{"injectables/FullscreenService.html":{}}}],["this.items.findindex(x",{"_index":2423,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.items.indexof(item",{"_index":2219,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.items.length",{"_index":2196,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.items.slice(viewport.startindexwithbuffer",{"_index":2468,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.layercontrol",{"_index":1125,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.listener",{"_index":847,"title":{},"body":{"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"directives/WhenScrolledDirective.html":{}}}],["this.loadsdk().subscribe",{"_index":760,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["this.longpressing",{"_index":1249,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.loop(event",{"_index":1265,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.map",{"_index":1122,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.addcontrol(new",{"_index":1128,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.addcontrol(this.layercontrol",{"_index":1130,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.addlayer(this.markercluster",{"_index":1142,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.containerpointtolatlng([x",{"_index":1175,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.fitbounds(group.getbounds",{"_index":1163,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.flyto([options.lat",{"_index":1185,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.flytobounds(group.getbounds",{"_index":1156,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.getzoom",{"_index":1177,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.latlngtocontainerpoint(latlng).x",{"_index":1170,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.latlngtocontainerpoint(latlng).y",{"_index":1172,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.project(latlng",{"_index":1180,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.setview([this.options.initialview.lat",{"_index":1133,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.setview(latlng",{"_index":1178,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.setview(point",{"_index":1176,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.setview(targetlatlng",{"_index":1184,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.map.unproject(targetpoint",{"_index":1183,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.mapservice.getcurrentposition().pipe(take(1)).subscribe",{"_index":1313,"title":{},"body":{"injectables/MapService.html":{}}}],["this.markercluster",{"_index":1140,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.markercluster.addlayer(this.markers[id",{"_index":1167,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.markers",{"_index":1146,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.markers[id",{"_index":1164,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.markers[id].addto(this.map",{"_index":1168,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.maxhue",{"_index":339,"title":{},"body":{"classes/Color.html":{}}}],["this.maxlight",{"_index":336,"title":{},"body":{"classes/Color.html":{}}}],["this.minlight",{"_index":334,"title":{},"body":{"classes/Color.html":{}}}],["this.minmeasuredchildheight",{"_index":2119,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.minmeasuredchildwidth",{"_index":2118,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.modifyoverflowstyleofparentscroll",{"_index":2176,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.mousex",{"_index":1257,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.mousey",{"_index":1259,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.observer",{"_index":1734,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.observer?.unsubscribe",{"_index":1737,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.oldparentscrolloverflow",{"_index":2167,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.oldparentscrolloverflow.x",{"_index":2170,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.oldparentscrolloverflow.y",{"_index":2169,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.onchangevalue(this._ngcontrol?.control?.value",{"_index":1733,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.onchangevalue(value",{"_index":1736,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.onload.emit",{"_index":763,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["this.onlongpress.emit(event",{"_index":1264,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.onlongpressend.emit(true",{"_index":1272,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.onlongpressing.emit(event",{"_index":1268,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.onlynumber",{"_index":1465,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.onscroll",{"_index":2142,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.onshortpress.emit",{"_index":1271,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.ontouch",{"_index":1480,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.openiddata.claims.indexof(requiredpermission",{"_index":272,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.options.clustermarkers.config",{"_index":1141,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.options.clustermarkers.enable",{"_index":1138,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.options.initialview.lng",{"_index":1134,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.options.initialview.zoom",{"_index":1135,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.options.layersoptions",{"_index":1127,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.options.mapoptions",{"_index":1124,"title":{},"body":{"classes/LeafletMap.html":{}}}],["this.parentscroll",{"_index":2477,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.pending",{"_index":1731,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.preferscolorschemeservice.init",{"_index":1536,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.preferscolorschemeservice.watch",{"_index":1539,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.pressduration",{"_index":1267,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.pressing",{"_index":1247,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.previousscrollboundingrect",{"_index":2304,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousscrollboundingrect.height",{"_index":2310,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousscrollboundingrect.width",{"_index":2307,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport",{"_index":2104,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.endindex",{"_index":2434,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.maxscrollposition",{"_index":2445,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.padding",{"_index":2439,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.scrollendposition",{"_index":2443,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.scrolllength",{"_index":2418,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.scrollstartposition",{"_index":2410,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.startindex",{"_index":2431,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.previousviewport.startindexwithbuffer",{"_index":2425,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.randomnum(this.minhue",{"_index":338,"title":{},"body":{"classes/Color.html":{}}}],["this.ready",{"_index":1840,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.refresh_internal(false",{"_index":2144,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.refresh_internal(indexlengthchanged",{"_index":2201,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.refresh_internal(true",{"_index":2156,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.removescrolleventhandlers",{"_index":2192,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.rendered.removestyle(this.el.nativeelement",{"_index":206,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["this.rendered.setstyle(this.el.nativeelement",{"_index":201,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["this.renderer.listen('window",{"_index":2482,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.renderer.listen(scrollelement",{"_index":2485,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.renderer.setproperty(scrollelement",{"_index":2237,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.renderer.setstyle(this.contentelementref.nativeelement",{"_index":2449,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.renderer.setstyle(this.headerelementref.nativeelement",{"_index":2459,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.renderer.setstyle(this.invisiblepaddingelementref.nativeelement",{"_index":2446,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.resetwrapgroupdimensions",{"_index":2281,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.resizebypassrefreshthreshold",{"_index":2276,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.revertparentoverscroll",{"_index":2175,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.rules",{"_index":1777,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.rules.every(rule",{"_index":1788,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.rules.filter((rule",{"_index":1796,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.scalelight",{"_index":349,"title":{},"body":{"classes/Color.html":{}}}],["this.scheme",{"_index":1586,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.addeventlistener",{"_index":1623,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.addeventlistener('change",{"_index":1624,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.addlistener",{"_index":1626,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.addlistener(setscheme",{"_index":1627,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.matches",{"_index":1596,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scheme.onchange",{"_index":1622,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["this.scrollanimationtime",{"_index":2224,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrollbarheight",{"_index":2272,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrollbarwidth",{"_index":2270,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrolldebouncetime",{"_index":2141,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrollthrottlingtime",{"_index":2145,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrolltoindex(index",{"_index":2220,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.scrolltoposition(scroll",{"_index":2230,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.setvalue(state",{"_index":2017,"title":{},"body":{"interfaces/String.html":{}}}],["this.ssrchildheight",{"_index":2506,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.ssrchildwidth",{"_index":2508,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.ssrviewportheight",{"_index":2505,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.ssrviewportwidth",{"_index":2507,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.states",{"_index":1781,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.stripedtable",{"_index":2279,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.subject.next",{"_index":1854,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.subject.unsubscribe",{"_index":1858,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["this.subscription",{"_index":1790,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.subscription.unsubscribe",{"_index":1799,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["this.throttletrailing",{"_index":2146,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.throttletrailing(func",{"_index":2339,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.timeout",{"_index":1263,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.type",{"_index":1453,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.updatedirection",{"_index":2163,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.updateonscrollfunction",{"_index":2135,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.usemargininsteadoftranslate",{"_index":2448,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.valid",{"_index":1723,"title":{},"body":{"directives/SerControlDirective.html":{}}}],["this.valtocopy",{"_index":487,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["this.value",{"_index":1451,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.value[i",{"_index":1463,"title":{},"body":{"components/PinInputComponent.html":{}}}],["this.viewportitems",{"_index":2202,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.viewportitems.length",{"_index":2203,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.vschange.emit(changeeventarg",{"_index":2473,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.vsend.emit(changeeventarg",{"_index":2471,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.vsstart.emit(changeeventarg",{"_index":2470,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.vsupdate.emit(this.viewportitems",{"_index":2469,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.wrapgroupdimensions.maxchildsizeperwrapgroup[index",{"_index":2208,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.wrapgroupdimensions.numberofknownwrapgroupchildsizes",{"_index":2209,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.wrapgroupdimensions.sumofknownwrapgroupchildheights",{"_index":2212,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.wrapgroupdimensions.sumofknownwrapgroupchildwidths",{"_index":2210,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.zone.run(handlechanged",{"_index":2475,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["this.zone.runoutsideangular",{"_index":2255,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["throttled",{"_index":2338,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["throttled.apply(this",{"_index":2341,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["throttled['cancel",{"_index":2340,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["throttletrailing(func",{"_index":2344,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tiene",{"_index":113,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"classes/CustomValidators.html":{}}}],["tilesize",{"_index":2885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":2251,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["timeout",{"_index":1204,"title":{},"body":{"directives/LongPressDirective.html":{},"modules/VirtualScrollerModule.html":{}}}],["timer",{"_index":1973,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["timer(1000",{"_index":1989,"title":{},"body":{"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["timestamp",{"_index":433,"title":{},"body":{"injectables/CookiesService.html":{}}}],["tipo",{"_index":10,"title":{},"body":{"interfaces/AwsData.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"interfaces/CenterPoint.html":{},"injectables/ClaimsService.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/DataService.html":{},"injectables/DownloadService.html":{},"interfaces/DropdownSettings.html":{},"interfaces/ErrorDetails.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"interfaces/FacebookUserProfile.html":{},"interfaces/FilterSettings.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"modules/GoogleSDKModule.html":{},"injectables/GoogleSDKService.html":{},"interfaces/GoogleUserProfile.html":{},"directives/GrowOnInputDirective.html":{},"interfaces/IDimensions.html":{},"interfaces/IPageInfo.html":{},"interfaces/IViewport.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/S3.html":{},"directives/SDBadgeDirective.html":{},"directives/SDBadgeItemDirective.html":{},"directives/SDItemDirective.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"directives/ToggleClassDirective.html":{},"interfaces/VirtualScrollerDefaultOptions.html":{},"directives/WhenScrolledDirective.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toarray",{"_index":1772,"title":{},"body":{"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toarray(conditions).every((condition",{"_index":1847,"title":{},"body":{"directives/SerErrorsDirective.html":{}}}],["toarray(value",{"_index":1775,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["tocapitalize",{"_index":1998,"title":{},"body":{"interfaces/String.html":{}}}],["tocapitalize(...args",{"_index":1999,"title":{},"body":{"interfaces/String.html":{}}}],["todas",{"_index":406,"title":{},"body":{"injectables/CookiesService.html":{}}}],["today",{"_index":1651,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["toggle",{"_index":887,"title":{},"body":{"injectables/FullscreenService.html":{},"injectables/PrefersColorSchemeService.html":{},"modules/SerUiModule.html":{}}}],["toggleclass",{"_index":2020,"title":{},"body":{"directives/ToggleClassDirective.html":{}}}],["toggleclass]'},{'name",{"_index":1527,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["toggleclassdirective",{"_index":1526,"title":{"directives/ToggleClassDirective.html":{}},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"directives/ToggleClassDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":437,"title":{},"body":{"injectables/CookiesService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{}}}],["tooltipster",{"_index":2703,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":2080,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["topright",{"_index":1094,"title":{},"body":{"classes/LeafletMap.html":{}}}],["tort",{"_index":2787,"title":{},"body":{"license.html":{}}}],["tostring(16",{"_index":1656,"title":{},"body":{"interfaces/RandomPasswordOps.html":{}}}],["total",{"_index":2098,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["touch",{"_index":2073,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["touchevent",{"_index":1229,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["tradicional",{"_index":623,"title":{},"body":{"injectables/DownloadService.html":{}}}],["transform",{"_index":2451,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["translatex",{"_index":2330,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["translatey",{"_index":2334,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tree",{"_index":1374,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["trigger",{"_index":2467,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["true",{"_index":168,"title":{},"body":{"interfaces/BaseValidationModel.html":{},"injectables/DataService.html":{},"modules/FacebookSDKModule.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"interfaces/RandomPasswordOps.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2705,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":183,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"directives/CopyToClipboardDirective.html":{},"directives/FinishTypingDirective.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"modules/SerFilterModule.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["tu",{"_index":2796,"title":{},"body":{"modules.html":{}}}],["tween",{"_index":2050,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tween.tween",{"_index":2348,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tween.tween(tweenconfigobj",{"_index":2242,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tweenconfigobj",{"_index":2239,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tweenconfigobj.scrollposition",{"_index":2254,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["tweenjs/tween.js",{"_index":2051,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"dependencies.html":{}}}],["type",{"_index":352,"title":{},"body":{"classes/Color.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorDetails.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"components/PinInputComponent.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2806,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1357,"title":{},"body":{"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"modules/VirtualScrollerModule.html":{}}}],["types",{"_index":331,"title":{},"body":{"classes/Color.html":{},"classes/LeafletMap.html":{},"injectables/MapService.html":{}}}],["types/facebook",{"_index":2681,"title":{},"body":{"dependencies.html":{}}}],["types/gapi",{"_index":2683,"title":{},"body":{"dependencies.html":{}}}],["types/gapi.auth2",{"_index":2685,"title":{},"body":{"dependencies.html":{}}}],["typically",{"_index":2378,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["typing.directive",{"_index":1960,"title":{},"body":{"modules/SerUiModule.html":{}}}],["typing.directive.ts",{"_index":833,"title":{},"body":{"directives/FinishTypingDirective.html":{},"coverage.html":{}}}],["typing.directive.ts:10",{"_index":846,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["typing.directive.ts:11",{"_index":841,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["typing.directive.ts:26",{"_index":844,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["typing.directive.ts:9",{"_index":843,"title":{},"body":{"directives/FinishTypingDirective.html":{}}}],["ugly",{"_index":341,"title":{},"body":{"classes/Color.html":{}}}],["ui",{"_index":378,"title":{},"body":{"classes/Color.html":{},"index.html":{}}}],["ui.module.ts",{"_index":1957,"title":{},"body":{"modules/SerUiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":270,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"interfaces/RandomPasswordOps.html":{},"interfaces/String.html":{}}}],["una",{"_index":398,"title":{},"body":{"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/FullscreenService.html":{}}}],["undefined",{"_index":911,"title":{},"body":{"injectables/FullscreenService.html":{},"modules/VirtualScrollerModule.html":{}}}],["unicamente",{"_index":1590,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["uniqueid",{"_index":1650,"title":{},"body":{"interfaces/RandomPasswordOps.html":{},"coverage.html":{}}}],["unix",{"_index":432,"title":{},"body":{"injectables/CookiesService.html":{}}}],["unselectalltext",{"_index":661,"title":{},"body":{"interfaces/DropdownSettings.html":{},"interfaces/FilterSettings.html":{}}}],["until",{"_index":2398,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["up",{"_index":2558,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":2465,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["updatedirection",{"_index":2320,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["updateonscrollfunction",{"_index":2140,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["url",{"_index":128,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"classes/CustomValidators.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{}}}],["url(${result",{"_index":203,"title":{},"body":{"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{}}}],["url(https://${this.awsdata.s3.bucket}.s3.amazonaws.com/${key",{"_index":136,"title":{},"body":{"injectables/AwsService.html":{}}}],["url.split('/').pop",{"_index":630,"title":{},"body":{"injectables/DownloadService.html":{}}}],["usado",{"_index":230,"title":{},"body":{"interfaces/CenterPoint.html":{},"interfaces/LatLng.html":{},"interfaces/LatLng2LatLngOptions.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["usagenotes",{"_index":1588,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["usando",{"_index":1312,"title":{},"body":{"injectables/MapService.html":{}}}],["usarse",{"_index":1589,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["use",{"_index":2748,"title":{},"body":{"license.html":{}}}],["useexisting",{"_index":1380,"title":{},"body":{"components/PinInputComponent.html":{}}}],["usefactory",{"_index":2580,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["usemargininsteadoftranslate",{"_index":2120,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["user",{"_index":799,"title":{},"body":{"injectables/FacebookSDKService.html":{},"modules/VirtualScrollerModule.html":{}}}],["users.add",{"_index":279,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["users.update",{"_index":278,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["usevalue",{"_index":56,"title":{},"body":{"modules/AwsModule.html":{},"modules/FacebookSDKModule.html":{},"modules/GoogleSDKModule.html":{}}}],["usuario",{"_index":112,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/DownloadService.html":{},"interfaces/OpenIdClient.html":{},"interfaces/OpenIdData.html":{}}}],["utils.ts",{"_index":2668,"title":{},"body":{"coverage.html":{}}}],["utils/array",{"_index":267,"title":{},"body":{"injectables/ClaimsService.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{}}}],["utils/check",{"_index":106,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"interfaces/BgImage.html":{},"directives/BgImageDirective.html":{},"injectables/DataService.html":{},"classes/LeafletMap.html":{},"components/PinInputComponent.html":{},"directives/SerControlDirective.html":{}}}],["utils/object",{"_index":1120,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/SnackbarOpts.html":{},"injectables/SnackbarService.html":{}}}],["v11",{"_index":2884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v6.0",{"_index":730,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["v9",{"_index":2711,"title":{},"body":{"index.html":{}}}],["val.charat(0).touppercase",{"_index":2009,"title":{},"body":{"interfaces/String.html":{}}}],["val.slice(1",{"_index":2010,"title":{},"body":{"interfaces/String.html":{}}}],["valid",{"_index":1698,"title":{},"body":{"directives/SerControlDirective.html":{},"directives/SerErrorsDirective.html":{},"components/SerFormElementComponent.html":{}}}],["validaciones",{"_index":497,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validationerrors",{"_index":147,"title":{},"body":{"interfaces/BaseValidationModel.html":{}}}],["validatorfn",{"_index":533,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts",{"_index":496,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["validators.ts:19",{"_index":542,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:28",{"_index":578,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:37",{"_index":539,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:46",{"_index":537,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:55",{"_index":535,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:64",{"_index":525,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:72",{"_index":551,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:80",{"_index":563,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:88",{"_index":566,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:98",{"_index":510,"title":{},"body":{"classes/CustomValidators.html":{}}}],["valor",{"_index":216,"title":{},"body":{"directives/BgImageDirective.html":{},"classes/Color.html":{},"injectables/CookiesService.html":{},"directives/CopyToClipboardDirective.html":{},"classes/CustomValidators.html":{},"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"miscellaneous/variables.html":{}}}],["valtocopy",{"_index":474,"title":{},"body":{"directives/CopyToClipboardDirective.html":{}}}],["value",{"_index":100,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BaseValidationModel.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["value.split",{"_index":2007,"title":{},"body":{"interfaces/String.html":{}}}],["values",{"_index":1333,"title":{},"body":{"injectables/MapService.html":{},"components/PinInputComponent.html":{},"interfaces/String.html":{}}}],["values.join",{"_index":1475,"title":{},"body":{"components/PinInputComponent.html":{},"interfaces/String.html":{}}}],["values.length",{"_index":1473,"title":{},"body":{"components/PinInputComponent.html":{}}}],["values.push(input.value.trim",{"_index":1472,"title":{},"body":{"components/PinInputComponent.html":{}}}],["var",{"_index":1491,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{}}}],["variable",{"_index":2601,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2810,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vastly",{"_index":2389,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["verifica",{"_index":511,"title":{},"body":{"classes/CustomValidators.html":{},"injectables/MapService.html":{}}}],["verificar",{"_index":109,"title":{},"body":{"injectables/AwsService.html":{},"injectables/ClaimsService.html":{}}}],["verifynit",{"_index":509,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["verifynit(control",{"_index":576,"title":{},"body":{"classes/CustomValidators.html":{}}}],["version",{"_index":729,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["via",{"_index":2719,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":2046,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewchild('content",{"_index":2183,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewchild('invisiblepadding",{"_index":2186,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewchildren",{"_index":1447,"title":{},"body":{"components/PinInputComponent.html":{}}}],["viewchildren('input",{"_index":1442,"title":{},"body":{"components/PinInputComponent.html":{}}}],["viewencapsulation",{"_index":1902,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["viewencapsulation.none",{"_index":1882,"title":{},"body":{"components/SerFormElementComponent.html":{}}}],["viewport",{"_index":2366,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.endindex",{"_index":2433,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.endindexwithbuffer",{"_index":2463,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.maxscrollposition",{"_index":2444,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.padding",{"_index":2438,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.padding}px",{"_index":2450,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.scrollendposition",{"_index":2442,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.scrolllength",{"_index":2436,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.scrolllength}px",{"_index":2447,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.scrollstartposition",{"_index":2441,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.startindex",{"_index":2430,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewport.startindexwithbuffer",{"_index":2462,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewportheight",{"_index":2519,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewportinfo",{"_index":2102,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewportitems",{"_index":2101,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["viewportlength",{"_index":1043,"title":{},"body":{"interfaces/IDimensions.html":{}}}],["viewportwidth",{"_index":2518,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["vigente",{"_index":434,"title":{},"body":{"injectables/CookiesService.html":{}}}],["virtual",{"_index":1505,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{}}}],["virtual_scroller_default_options_factory",{"_index":2055,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["virtualscroller",{"_index":2058,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["virtualscrollercomponent",{"_index":1504,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{},"overview.html":{}}}],["virtualscrollerdefaultoptions",{"_index":2027,"title":{"interfaces/VirtualScrollerDefaultOptions.html":{}},"body":{"interfaces/VirtualScrollerDefaultOptions.html":{},"modules/VirtualScrollerModule.html":{},"coverage.html":{}}}],["virtualscrollermodule",{"_index":1943,"title":{"modules/VirtualScrollerModule.html":{}},"body":{"modules/SerSelectModule.html":{},"modules/VirtualScrollerModule.html":{},"modules.html":{},"overview.html":{}}}],["visible",{"_index":2075,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["void",{"_index":101,"title":{},"body":{"injectables/AwsService.html":{},"directives/BgImageDirective.html":{},"injectables/ClaimsService.html":{},"injectables/CookiesService.html":{},"injectables/DownloadService.html":{},"injectables/ExternalScriptService.html":{},"classes/FacebookSDKConfig.html":{},"injectables/FacebookSDKService.html":{},"directives/FinishTypingDirective.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"injectables/FullscreenService.html":{},"classes/GoogleSDKConfig.html":{},"injectables/GoogleSDKService.html":{},"directives/GrowOnInputDirective.html":{},"classes/LeafletMap.html":{},"directives/LongPressDirective.html":{},"injectables/MapService.html":{},"components/PinInputComponent.html":{},"injectables/PrefersColorSchemeService.html":{},"directives/SerControlDirective.html":{},"directives/SerErrorDirective.html":{},"directives/SerErrorsDirective.html":{},"injectables/SnackbarService.html":{},"interfaces/String.html":{},"modules/VirtualScrollerModule.html":{},"directives/WhenScrolledDirective.html":{}}}],["vschange",{"_index":2180,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["vsend",{"_index":2182,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["vsstart",{"_index":2181,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["vsupdate",{"_index":2179,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["válidas",{"_index":1296,"title":{},"body":{"injectables/MapService.html":{}}}],["wait",{"_index":2337,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["want",{"_index":2405,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["warranties",{"_index":2772,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2767,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1550,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["web",{"_index":442,"title":{},"body":{"injectables/CookiesService.html":{},"injectables/FullscreenService.html":{}}}],["webkit",{"_index":2070,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["webkitexitfullscreen",{"_index":863,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["webkitfullscreenelement",{"_index":864,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["webkitrequestfullscreen",{"_index":871,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{}}}],["webkittransform",{"_index":2453,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["when(value",{"_index":1776,"title":{},"body":{"directives/SerErrorDirective.html":{}}}],["whenscrolled",{"_index":1529,"title":{},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"directives/WhenScrolledDirective.html":{}}}],["whenscrolleddirective",{"_index":1528,"title":{"directives/WhenScrolledDirective.html":{}},"body":{"components/PinInputComponent.html":{},"components/SerFormElementComponent.html":{},"modules/SerUiModule.html":{},"directives/WhenScrolledDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":2784,"title":{},"body":{"license.html":{}}}],["white",{"_index":2092,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["width",{"_index":778,"title":{},"body":{"injectables/FacebookSDKService.html":{},"modules/VirtualScrollerModule.html":{}}}],["widthchange",{"_index":2305,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["window",{"_index":811,"title":{},"body":{"injectables/FacebookSDKService.html":{},"injectables/GoogleSDKService.html":{},"modules/VirtualScrollerModule.html":{},"miscellaneous/variables.html":{}}}],["window.matchmedia('(prefers",{"_index":1587,"title":{},"body":{"injectables/PrefersColorSchemeService.html":{}}}],["within",{"_index":347,"title":{},"body":{"classes/Color.html":{}}}],["without",{"_index":2372,"title":{},"body":{"modules/VirtualScrollerModule.html":{},"license.html":{}}}],["wrapgroup",{"_index":2560,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["wrapgroupdimension",{"_index":2053,"title":{"interfaces/WrapGroupDimension.html":{}},"body":{"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimension.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["wrapgroupdimensions",{"_index":2052,"title":{"interfaces/WrapGroupDimensions.html":{}},"body":{"modules/VirtualScrollerModule.html":{},"interfaces/WrapGroupDimensions.html":{},"coverage.html":{}}}],["wrapgroupindex",{"_index":2534,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["wrapgroupsperpage",{"_index":1044,"title":{},"body":{"interfaces/IDimensions.html":{},"modules/VirtualScrollerModule.html":{}}}],["writevalue",{"_index":1402,"title":{},"body":{"components/PinInputComponent.html":{}}}],["writevalue(obj",{"_index":1435,"title":{},"body":{"components/PinInputComponent.html":{}}}],["x",{"_index":1151,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"modules/VirtualScrollerModule.html":{}}}],["x01",{"_index":2826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x08\\x0b\\x0c\\x0e",{"_index":2827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x09\\x0b\\x0c\\x0e",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21",{"_index":2844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21\\x23",{"_index":2828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5a\\x53",{"_index":2845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5b\\x5d",{"_index":2829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f])*\")@(?:(?:[a",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f]|\\\\[\\x01",{"_index":2830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xfbml",{"_index":728,"title":{},"body":{"modules/FacebookSDKModule.html":{}}}],["xthres",{"_index":1281,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["y",{"_index":439,"title":{},"body":{"injectables/CookiesService.html":{},"classes/CustomValidators.html":{},"injectables/FullscreenService.html":{},"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{},"injectables/MapService.html":{},"injectables/PrefersColorSchemeService.html":{},"modules/VirtualScrollerModule.html":{}}}],["ythres",{"_index":1282,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["z",{"_index":2848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z0",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[a",{"_index":2853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])).{6",{"_index":2854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]+$/.test(value.tostring",{"_index":1469,"title":{},"body":{"components/PinInputComponent.html":{}}}],["za",{"_index":1468,"title":{},"body":{"components/PinInputComponent.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":2259,"title":{},"body":{"modules/VirtualScrollerModule.html":{}}}],["zone.js",{"_index":2707,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1082,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["zoomcontrol",{"_index":1091,"title":{},"body":{"classes/LeafletMap.html":{},"interfaces/LeafletMapOptions.html":{},"interfaces/LeafletPadding.html":{}}}],["zoomoffset",{"_index":2887,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AwsData.html":{"url":"interfaces/AwsData.html","title":"interface - AwsData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AwsData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/aws/Iaws.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        s3\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        s3\n                                    \n                                \n                                \n                                    \n                                        s3:         S3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         S3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AwsData {\n  s3: S3;\n}\n\nexport interface S3 {\n  bucket: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/AwsModule.html":{"url":"modules/AwsModule.html","title":"module - AwsModule","body":"\n                   \n\n\n\n\n    Módulos\n    AwsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/aws/aws.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(ConfigProvider: Provider)\n                \n            \n\n\n            \n                \n                    Definido en src/aws/aws.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    ConfigProvider\n                                    \n                                                Provider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { AwsService } from './aws.service';\n\n/**\n * @description\n * Módulo para inicializar el servicio AwsService\n * @example\n * import { AWS_CONFIG, AwsModule } from '@sersol/ngx';\n *\n * @NgModule({\n    imports: [\n      ...,\n      AwsModule.forRoot({\n          provide: AWS_CONFIG,\n          useValue: {\n              s3: {\n                bucket: 'ser-app'\n              }\n          }\n      }),\n      ...\n    ],\n    declarations: [...],\n    schemas: [...],\n    providers: [...],\n    bootstrap: [...]\n})\nexport class AppModule { }\n */\n@NgModule()\nexport class AwsModule {\n  static forRoot(ConfigProvider: Provider): ModuleWithProviders {\n    return {\n      ngModule: AwsModule,\n      providers: [\n        ConfigProvider,\n        AwsService\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/AwsService.html":{"url":"injectables/AwsService.html","title":"injectable - AwsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  AwsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/aws/aws.service.ts\n        \n\n\n\n            \n                Ejemplo\n            \n            \n                        \n                            constructor(private claimsService: ClaimsService) { }\n                        \n            \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _awsData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getS3BgUrl\n                            \n                            \n                                    Public\n                                getS3Url\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accesorios\n                        \n                    \n                    \n                        \n                            \n                                \n                                    awsData\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AwsData)\n                    \n                \n                        \n                            \n                                Definido en src/aws/aws.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AwsData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getS3BgUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getS3BgUrl(key: string)\n                \n            \n\n\n            \n                \n                    Definido en src/aws/aws.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRuta del objeto en el bucket (Sin '/' al principio)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            this.awsService.getS3Url(&#39;assets/file.png&#39;);\n                        \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getS3Url\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getS3Url(key: string)\n                \n            \n\n\n            \n                \n                    Definido en src/aws/aws.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRuta del objeto en el bucket (Sin '/' al principio)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            this.awsService.getS3Url(&#39;assets/file.png&#39;);\n                        \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _awsData\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         AwsData\n\n                        \n                    \n                        \n                            \n                                    Definido en src/aws/aws.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accesorios\n    \n        \n            \n                \n                    \n                        \n                        awsData\n                    \n                \n\n                \n                    \n                        getawsData()\n                    \n                \n                            \n                                \n                                    Definido en src/aws/aws.service.ts:19\n                                \n                            \n\n                \n                    \n                        setawsData(value)\n                    \n                \n                            \n                                \n                                    Definido en src/aws/aws.service.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { AwsData } from './Iaws';\nimport { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { hasValue } from '../utils/check';\n\nexport let AWS_CONFIG: InjectionToken = new InjectionToken('aws.config');\n\n/**\n * @description\n * Servicio para verificar si es usuario tiene o no permisos para realizar ciertas acciones\n * @example\n * constructor(private claimsService: ClaimsService) { }\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class AwsService {\n\n    private _awsData: AwsData;\n    public get awsData(): AwsData {\n        return this._awsData;\n    }\n    public set awsData(value: AwsData) {\n        this._awsData = value;\n    }\n\n    constructor(@Inject(AWS_CONFIG) config: AwsData) {\n        this.awsData = config;\n    }\n\n    /**\n     * @description\n     * Método obtener url de assets en S3\n     * @param {string} key - Ruta del objeto en el bucket (Sin '/' al principio)\n     * @example\n     * this.awsService.getS3Url('assets/file.png');\n     * @returns {string}\n     */\n    public getS3Url(key: string): string {\n        if (hasValue(key)) {\n            return `https://${this.awsData.s3.bucket}.s3.amazonaws.com/${key}`;\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * @description\n     * Método obtener url de assets en S3\n     * @param {string} key - Ruta del objeto en el bucket (Sin '/' al principio)\n     * @example\n     * this.awsService.getS3Url('assets/file.png');\n     * @returns {string}\n     */\n    public getS3BgUrl(key: string): string {\n        if (hasValue(key)) {\n            return `url(https://${this.awsData.s3.bucket}.s3.amazonaws.com/${key})`;\n        } else {\n            return '';\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/BaseValidationModel.html":{"url":"interfaces/BaseValidationModel.html","title":"interface - BaseValidationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseValidationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/validations/remote.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Field\n                                \n                                \n                                            Opcional\n                                        Id\n                                \n                                \n                                        Model\n                                \n                                \n                                            Opcional\n                                        Value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        Field\n                                    \n                                \n                                \n                                    \n                                        Field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Model\n                                    \n                                \n                                \n                                    \n                                        Model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Value\n                                    \n                                \n                                \n                                    \n                                        Value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { AsyncValidatorFn, FormControl, ValidationErrors } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { catchError, delay, map, switchMap } from 'rxjs/operators';\nimport { hasValue } from '../../utils/check';\n\nexport interface BaseValidationModel {\n    Model: string;\n    Field: string;\n    Id?: string | number;\n    Value?: any;\n}\n\nexport function alreadyExist(http: HttpClient, url: string, requestBody: BaseValidationModel): AsyncValidatorFn {\n    return (control: FormControl): Observable => {\n\n        return of(control.value).pipe(\n            delay(1000),\n            switchMap((value) => {\n                if (hasValue(value)) {\n\n                    requestBody.Value = value;\n\n                    return http.post(url, requestBody).pipe(\n                      map(() => ({ alreadyExist: true })),\n                      catchError(() => of(null))\n                    );\n                }\n\n                return of(null);\n            }\n        ));\n    };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/BgImage.html":{"url":"interfaces/BgImage.html","title":"interface - BgImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BgImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/ui/bg-image.directive.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        file\n                                \n                                \n                                            Opcional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     File\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, OnChanges, Input, ElementRef, Renderer2 } from '@angular/core';\nimport { readAsDataURL } from '../file/read';\nimport { take } from 'rxjs/operators';\nimport { AwsService } from '../aws/aws.service';\nimport { hasValue } from '../utils/check';\n\ninterface BgImage {\n    url?: string;\n    file?: File;\n}\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[bgImage]'\n})\nexport class BgImageDirective implements OnChanges {\n\n    @Input('bgImage')\n    image: BgImage;\n    imageRegex = /(image\\/(jpe?g|png|gif|bmp))/i;\n\n    constructor(private el: ElementRef, private rendered: Renderer2, private aws: AwsService) { }\n\n    ngOnChanges() {\n        if (hasValue(this.image.file) && this.image.file instanceof File && this.imageRegex.test(this.image.file.type)) {\n\n            readAsDataURL(this.image.file).pipe(take(1)).subscribe((result) => {\n                this.rendered.setStyle(this.el.nativeElement, 'background-image', `url(${result})`);\n            });\n\n        } else if (hasValue(this.image.url)) {\n            this.rendered.setStyle(this.el.nativeElement, 'background-image', this.aws.getS3BgUrl(this.image.url));\n        } else {\n            this.rendered.removeStyle(this.el.nativeElement, 'background-image');\n        }\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/BgImageDirective.html":{"url":"directives/BgImageDirective.html","title":"directive - BgImageDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  BgImageDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/ui/bg-image.directive.ts\n        \n\n\n            \n                Implementa\n            \n            \n                            OnChanges\n            \n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [bgImage]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                imageRegex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                bgImage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, rendered: Renderer2, aws: AwsService)\n                    \n                \n                        \n                            \n                                Definido en src/ui/bg-image.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendered\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        aws\n                                                  \n                                                        \n                                                                        AwsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Entradas\n        \n            \n                \n                    \n                        \n                        bgImage\n                    \n                \n                \n                    \n                        Tipo :         BgImage\n\n                    \n                \n                        \n                            \n                                    Definido en src/ui/bg-image.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Definido en src/ui/bg-image.directive.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageRegex\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : /(image\\/(jpe?g|png|gif|bmp))/i\n                        \n                    \n                        \n                            \n                                    Definido en src/ui/bg-image.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnChanges, Input, ElementRef, Renderer2 } from '@angular/core';\nimport { readAsDataURL } from '../file/read';\nimport { take } from 'rxjs/operators';\nimport { AwsService } from '../aws/aws.service';\nimport { hasValue } from '../utils/check';\n\ninterface BgImage {\n    url?: string;\n    file?: File;\n}\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[bgImage]'\n})\nexport class BgImageDirective implements OnChanges {\n\n    @Input('bgImage')\n    image: BgImage;\n    imageRegex = /(image\\/(jpe?g|png|gif|bmp))/i;\n\n    constructor(private el: ElementRef, private rendered: Renderer2, private aws: AwsService) { }\n\n    ngOnChanges() {\n        if (hasValue(this.image.file) && this.image.file instanceof File && this.imageRegex.test(this.image.file.type)) {\n\n            readAsDataURL(this.image.file).pipe(take(1)).subscribe((result) => {\n                this.rendered.setStyle(this.el.nativeElement, 'background-image', `url(${result})`);\n            });\n\n        } else if (hasValue(this.image.url)) {\n            this.rendered.setStyle(this.el.nativeElement, 'background-image', this.aws.getS3BgUrl(this.image.url));\n        } else {\n            this.rendered.removeStyle(this.el.nativeElement, 'background-image');\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/CenterPoint.html":{"url":"interfaces/CenterPoint.html","title":"interface - CenterPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CenterPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/map/types.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lat\n                                \n                                \n                                        lng\n                                \n                                \n                                            Opcional\n                                        offset_x\n                                \n                                \n                                            Opcional\n                                        offset_y\n                                \n                                \n                                            Opcional\n                                        preserve_zoom\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset_x\n                                    \n                                \n                                \n                                    \n                                        offset_x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset_y\n                                    \n                                \n                                \n                                    \n                                        offset_y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserve_zoom\n                                    \n                                \n                                \n                                    \n                                        preserve_zoom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LatLng {\n    lat: number;\n    lng: number;\n}\n\n/**\n * @description\n * Interface que representa al objeto OpenId usado para autenticarse con la API de SER\n */\nexport interface LatLng2LatLngOptions {\n    from: {\n        lat: number,\n        lng: number\n    };\n    to: {\n        lat: number,\n        lng: number\n    };\n}\n\nexport interface CenterPoint {\n    lat: number;\n    lng: number;\n    offset_x?: number;\n    offset_y?: number;\n    preserve_zoom?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/ClaimsService.html":{"url":"injectables/ClaimsService.html","title":"injectable - ClaimsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  ClaimsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/open-id/claims.service.ts\n        \n\n\n\n            \n                Ejemplo\n            \n            \n                        \n                            constructor(private claimsService: ClaimsService) { }\n                        \n            \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _openIdData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                atLeastPermissions\n                            \n                            \n                                    Public\n                                hasPermission\n                            \n                            \n                                    Public\n                                hasPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accesorios\n                        \n                    \n                    \n                        \n                            \n                                \n                                    openIdData\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            atLeastPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atLeastPermissions(requiredPermissions: string[])\n                \n            \n\n\n            \n                \n                    Definido en src/open-id/claims.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    requiredPermissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nArreglo de permisos a consultar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            this.claimsService.atLeastPermissions([&#39;users.view&#39;, &#39;users.update&#39;, &#39;users.add&#39;]);\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasPermission\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasPermission(requiredPermission: string)\n                \n            \n\n\n            \n                \n                    Definido en src/open-id/claims.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    requiredPermission\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNombre del permiso a consultar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            this.claimsService.hasPermission(&#39;users.view&#39;);\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasPermissions(requiredPermissions: string[])\n                \n            \n\n\n            \n                \n                    Definido en src/open-id/claims.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    requiredPermissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nArreglo de permisos a consultar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            this.claimsService.hasPermissions([&#39;users.view&#39;, &#39;users.update&#39;, &#39;users.add&#39;]);\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _openIdData\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         OpenIdData\n\n                        \n                    \n                        \n                            \n                                    Definido en src/open-id/claims.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accesorios\n    \n        \n            \n                \n                    \n                        \n                        openIdData\n                    \n                \n\n                \n                    \n                        getopenIdData()\n                    \n                \n                            \n                                \n                                    Definido en src/open-id/claims.service.ts:17\n                                \n                            \n\n                \n                    \n                        setopenIdData(value)\n                    \n                \n                            \n                                \n                                    Definido en src/open-id/claims.service.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { OpenIdData } from './Iopen-id-client';\nimport { Injectable } from '@angular/core';\nimport { inArray } from '../utils/array';\n\n/**\n * @description\n * Servicio para verificar si es usuario tiene o no permisos para realizar ciertas acciones\n * @example\n * constructor(private claimsService: ClaimsService) { }\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClaimsService {\n\n    private _openIdData: OpenIdData;\n    public get openIdData(): OpenIdData {\n        return this._openIdData;\n    }\n    public set openIdData(value: OpenIdData) {\n        this._openIdData = value;\n    }\n\n    /**\n     * @description\n     * Método para verificar si el usuario tiene un permiso\n     * @param {string} requiredPermission - Nombre del permiso a consultar\n     * @example\n     * this.claimsService.hasPermission('users.view');\n     * @returns {boolean}\n     */\n    public hasPermission(requiredPermission: string): boolean {\n        return this.openIdData.claims.indexOf(requiredPermission) !== -1;\n    }\n\n    /**\n     * @description\n     * Método para verificar si el usuario tiene un al menos un permiso del listado consultado\n     * @param {string[]} requiredPermissions - Arreglo de permisos a consultar\n     * @example\n     * this.claimsService.atLeastPermissions(['users.view', 'users.update', 'users.add']);\n     * @returns {boolean}\n     */\n    public atLeastPermissions(requiredPermissions: string[]): boolean {\n        for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/Color.html":{"url":"classes/Color.html","title":"class - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/utils/avatar.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                hsl\n                            \n                            \n                                hue\n                            \n                            \n                                light\n                            \n                            \n                                maxHue\n                            \n                            \n                                maxLight\n                            \n                            \n                                maxSat\n                            \n                            \n                                minHue\n                            \n                            \n                                minLight\n                            \n                            \n                                minSat\n                            \n                            \n                                sat\n                            \n                            \n                                scaleLight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                changeHue\n                            \n                            \n                                changeLight\n                            \n                            \n                                randomNum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hue?: number, sat?: number, light?: number, lightBackground?: boolean)\n                    \n                \n                        \n                            \n                                Definido en src/utils/avatar.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        hue\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Si\n                                                    \n                                                    \n                                                \n                                                \n                                                        sat\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Si\n                                                    \n                                                    \n                                                \n                                                \n                                                        light\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Si\n                                                    \n                                                    \n                                                \n                                                \n                                                        lightBackground\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Si\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hsl\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                        \n                            \n                                    Definido en src/utils/avatar.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hue\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                        \n                            \n                                    Definido en src/utils/avatar.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            light\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                        \n                            \n                                    Definido en src/utils/avatar.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxHue\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 360\n                        \n                    \n                        \n                            \n                                    Definido en src/utils/avatar.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxLight\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 80\n                        \n                    \n                        \n                            \n                                    Definido en src/utils/avatar.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxSat\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 100\n                        \n                    \n                        \n                            \n                                    Definido en src/utils/avatar.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minHue\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 0\n                        \n                    \n                        \n                            \n                                    Definido en src/utils/avatar.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minLight\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 65\n                        \n                    \n                        \n                            \n                                    Definido en src/utils/avatar.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minSat\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 75\n                        \n                    \n                        \n                            \n                                    Definido en src/utils/avatar.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sat\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                        \n                            \n                                    Definido en src/utils/avatar.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaleLight\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 15\n                        \n                    \n                        \n                            \n                                    Definido en src/utils/avatar.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeHue\n                        \n                        \n                    \n                \n            \n            \n                \nchangeHue(hue: number, rotate: number)\n                \n            \n\n\n            \n                \n                    Definido en src/utils/avatar.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    hue\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rotate\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeLight\n                        \n                        \n                    \n                \n            \n            \n                \nchangeLight(light: number)\n                \n            \n\n\n            \n                \n                    Definido en src/utils/avatar.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    light\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            randomNum\n                        \n                        \n                    \n                \n            \n            \n                \nrandomNum(min: number, max: number)\n                \n            \n\n\n            \n                \n                    Definido en src/utils/avatar.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { hasValue } from './check';\n\nexport class Color {\n\n    // Settings\n    // Play with these to change the types of colors generated\n    hue: number;\n    sat: number;\n    light: number;\n    hsl: string;\n\n    minHue = 0;\n    maxHue = 360;\n\n    minSat = 75;\n    maxSat = 100;\n\n    minLight = 65;\n    maxLight = 80;\n\n    scaleLight = 15;\n\n    constructor(hue?: number, sat?: number, light?: number, lightBackground?: boolean) {\n\n        if (lightBackground) {\n            this.minLight = 40;\n            this.maxLight = 65;\n        }\n\n        this.hue = hue || this.randomNum(this.minHue, this.maxHue);\n\n        // Redo if ugly hue is generated\n        if (this.hue > 288 && this.hue  280 && this.hue  this.maxHue ?\n            (hue + rotate) - this.maxHue : hue + rotate;\n    }\n\n    // Scale lightness while keeping within limits\n    changeLight(light: number) {\n        return light + this.scaleLight > this.maxLight ? this.maxLight : light + this.scaleLight;\n    }\n\n}\n\nexport function generateDefaultImage(name: string, lastName?: string, type?: 'image/jpeg' | 'image/png', quality?: number): Observable {\n    return new Observable(observer => {\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\n        canvas.width = 200;\n        canvas.height = 200;\n        const ctx = canvas.getContext('2d');\n\n        const baseColor = new Color();\n\n        ctx.beginPath();\n        ctx.rect(0, 0, 200, 200);\n\n        ctx.fillStyle = new Color(\n            baseColor.changeHue(baseColor.hue, 0),\n            baseColor.sat,\n            baseColor.changeLight(baseColor.light)).hsl;\n\n        ctx.fill();\n\n        ctx.font = '500 70px Segoe UI';\n        ctx.fillStyle = 'black';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n\n        let initials: string;\n\n        if (hasValue(lastName)) {\n            initials = name.charAt(0) + lastName.charAt(0);\n        } else {\n            initials = name.charAt(0) + name.charAt(0);\n        }\n\n        ctx.fillText(initials.toUpperCase(), canvas.width / 2, canvas.height / 2);\n\n        canvas.toBlob(result => {\n            observer.next(result);\n            observer.complete();\n        }, type, quality);\n    });\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/CookiesService.html":{"url":"injectables/CookiesService.html","title":"injectable - CookiesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  CookiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/cookie/cookies.service.ts\n        \n\n\n\n            \n                Ejemplo\n            \n            \n                        \n                            constructor(cookiesService: CookiesService) { }\n\nthis.cookiesService.get('Test'); // Obtiene el valor de una cookie\nthis.cookiesService.set('Test', '123'); // Setea valor de una cookie\nthis.cookiesService.delete('Test'); // Elimina una cookie\nthis.cookiesService.deleteAll(); // Elimina todas las cookies\n                        \n            \n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                deleteAll\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/cookie/cookies.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(name: string, path?: string, domain?: string)\n                \n            \n\n\n            \n                \n                    Definido en src/cookie/cookies.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Ruta\n\n                                    \n                                \n                                \n                                    domain\n                                    \n                                                string\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Dominio\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAll()\n                \n            \n\n\n            \n                \n                    Definido en src/cookie/cookies.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(name: string)\n                \n            \n\n\n            \n                \n                    Definido en src/cookie/cookies.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNombre de la cookie\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Valor de la cookie\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Definido en src/cookie/cookies.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Devuelve :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(name: string, value: any, expires?: number | Date, path?: string, domain?: string, secure?: boolean, sameSite?: \"Lax\" | \"Strict\")\n                \n            \n\n\n            \n                \n                    Definido en src/cookie/cookies.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        valor\n\n                                    \n                                \n                                \n                                    expires\n                                    \n                                            number | Date\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Unix Timestamp en que será vigente la cookie o un objeto Date\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Ruta\n\n                                    \n                                \n                                \n                                    domain\n                                    \n                                                string\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Dominio\n\n                                    \n                                \n                                \n                                    secure\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Cookie segura\n\n                                    \n                                \n                                \n                                    sameSite\n                                    \n                                            \"Lax\" | \"Strict\"\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        OWASP samesite token Lax ó Strict\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * @description\n * Servicio para obtener, actualizar y borrar cookies en el navegador web\n * @example\n * constructor(cookiesService: CookiesService) { }\n *\n * this.cookiesService.get('Test'); // Obtiene el valor de una cookie\n * this.cookiesService.set('Test', '123'); // Setea valor de una cookie\n * this.cookiesService.delete('Test'); // Elimina una cookie\n * this.cookiesService.deleteAll(); // Elimina todas las cookies\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookiesService {\n\n  constructor() { }\n\n  /**\n   * @description\n   * Obtiene todas las cookies\n   * @returns {}\n   */\n  public getAll(): {} {\n\n    const cookies: {} = {};\n\n    if (document.cookie && document.cookie !== '') {\n      const split: string[] = document.cookie.split('; ');\n\n      for (let i = 0; i  -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/CopyToClipboardDirective.html":{"url":"directives/CopyToClipboardDirective.html","title":"directive - CopyToClipboardDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  CopyToClipboardDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/ui/copy-to-clipboard.directive.ts\n        \n\n\n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [copyToClipboard]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n\n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                copyToClipboard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Salidas\n                    \n                \n                \n                    \n                        \n                            \n                                copied\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Escuchadores de Host\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Entradas\n        \n            \n                \n                    \n                        \n                        copyToClipboard\n                    \n                \n                \n                    \n                        Valor por defecto : ''\n                    \n                \n                        \n                            \n                                    Definido en src/ui/copy-to-clipboard.directive.ts:9\n                            \n                        \n            \n        \n\n            \n    Salidas\n        \n            \n                \n                    \n                        \n                        copied\n                    \n                \n                \n                    \n                        Tipo :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definido en src/ui/copy-to-clipboard.directive.ts:10\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Argumentos : '$event' \n                \n            \n            \n                \nclick(val: any)\n                \n            \n\n\n            \n                \n                    Definido en src/ui/copy-to-clipboard.directive.ts:12\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[copyToClipboard]'\n})\nexport class CopyToClipboardDirective {\n\n    @Input('copyToClipboard') valToCopy = '';\n    @Output() copied = new EventEmitter();\n\n    @HostListener('click', ['$event']) onClick(val: any) {\n        const selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.zIndex = '-1000';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = this.valToCopy;\n        document.body.appendChild(selBox);\n        selBox.focus();\n        selBox.select();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n\n        this.copied.emit(this.valToCopy);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/CustomValidators.html":{"url":"classes/CustomValidators.html","title":"class - CustomValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  CustomValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/validations/custom-validators.ts\n        \n\n            \n                Descripción\n            \n            \n                Validaciones adicionales para Form Control's\n\n            \n\n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                alreadyExist\n                            \n                            \n                                    Static\n                                greaterOrEqualThan\n                            \n                            \n                                    Static\n                                greaterThan\n                            \n                            \n                                    Static\n                                lowerOrEqualThan\n                            \n                            \n                                    Static\n                                lowerThan\n                            \n                            \n                                    Static\n                                match\n                            \n                            \n                                    Static\n                                maxFileSize\n                            \n                            \n                                    Static\n                                minFileSize\n                            \n                            \n                                    Static\n                                requiredFileType\n                            \n                            \n                                    Static\n                                verifyNIT\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            alreadyExist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    alreadyExist(http: HttpClient, url: string, requestBody: BaseValidationModel)\n                \n            \n\n\n            \n                \n                    Definido en src/form/validations/custom-validators.ts:98\n                \n            \n\n\n            \n                \n                    Verifica si existe dicho valor en la DB si coincide con el modelo y el nombre de campo\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                                HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    requestBody\n                                    \n                                                BaseValidationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        propiedad Id opcional para excluir de la busqueda un registro\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         AsyncValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            greaterOrEqualThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    greaterOrEqualThan(BasePathField: string, TargetPathField: string)\n                \n            \n\n\n            \n                \n                    Definido en src/form/validations/custom-validators.ts:64\n                \n            \n\n\n            \n                \n                    Verifica si un campo es mayor o igual a otro\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    BasePathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que debe ser mayor o igual\n\n                                    \n                                \n                                \n                                    TargetPathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que deberia ser menor o igual\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            greaterThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    greaterThan(BasePathField: string, TargetPathField: string)\n                \n            \n\n\n            \n                \n                    Definido en src/form/validations/custom-validators.ts:55\n                \n            \n\n\n            \n                \n                    Verifica si un campo es mayor a otro\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    BasePathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que debe ser mayor\n\n                                    \n                                \n                                \n                                    TargetPathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que deberia ser menor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            lowerOrEqualThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lowerOrEqualThan(BasePathField: string, TargetPathField: string)\n                \n            \n\n\n            \n                \n                    Definido en src/form/validations/custom-validators.ts:46\n                \n            \n\n\n            \n                \n                    Verifica si un campo es menor o igual a otro\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    BasePathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que debe ser menor o igual\n\n                                    \n                                \n                                \n                                    TargetPathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que deberia ser mayor o igual\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            lowerThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lowerThan(BasePathField: string, TargetPathField: string)\n                \n            \n\n\n            \n                \n                    Definido en src/form/validations/custom-validators.ts:37\n                \n            \n\n\n            \n                \n                    Verifica si un campo es menor a otro\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    BasePathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que debe ser menor\n\n                                    \n                                \n                                \n                                    TargetPathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que deberia ser mayor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            match\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    match(originalPathField: string, duplicatePathField: string)\n                \n            \n\n\n            \n                \n                    Definido en src/form/validations/custom-validators.ts:19\n                \n            \n\n\n            \n                \n                    Verifica si los campos proveidos son iguales\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    originalPathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo original\n\n                                    \n                                \n                                \n                                    duplicatePathField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path del campo que deberia ser igual al original\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            maxFileSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    maxFileSize(size: string)\n                \n            \n\n\n            \n                \n                    Definido en src/form/validations/custom-validators.ts:72\n                \n            \n\n\n            \n                \n                    Verifica si el tamaño no excede el tamaño maximo indicado\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tamaño en KB, MG ó GB (ejem: 100MB)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            minFileSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    minFileSize(size: string)\n                \n            \n\n\n            \n                \n                    Definido en src/form/validations/custom-validators.ts:80\n                \n            \n\n\n            \n                \n                    Verifica si el tamaño es mayor el tamaño mínimo indicado\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tamaño en KB, MG ó GB (ejem: 100MB)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            requiredFileType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    requiredFileType(ext: string | string[])\n                \n            \n\n\n            \n                \n                    Definido en src/form/validations/custom-validators.ts:88\n                \n            \n\n\n            \n                \n                    Verifica si el archivo tiene una extensión adminitida por medio de su cabecera\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Extensiones admitidas\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         AsyncValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            verifyNIT\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyNIT(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Definido en src/form/validations/custom-validators.ts:28\n                \n            \n\n\n            \n                \n                    Verifica si los campos proveidos son iguales\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { greaterOrEqualThan, greaterThan, lowerOrEqualThan, lowerThan } from './comparison';\nimport { match, verifyNIT } from './match';\nimport { maxFileSize, minFileSize, requiredFileType } from './file';\nimport { alreadyExist, BaseValidationModel } from './remote';\n\n// @dynamic\n/**\n * Validaciones adicionales para Form Control's\n */\nexport class CustomValidators {\n\n    /**\n     * Verifica si los campos proveidos son iguales\n     * @param originalPathField Path del campo original\n     * @param duplicatePathField Path del campo que deberia ser igual al original\n     */\n    static match(originalPathField: string, duplicatePathField: string): ValidatorFn {\n        return match(originalPathField, duplicatePathField);\n    }\n\n    /**\n     * Verifica si los campos proveidos son iguales\n     * @param originalPathField Path del campo original\n     * @param duplicatePathField Path del campo que deberia ser igual al original\n     */\n    static verifyNIT(control: AbstractControl): { [key: string]: any } | null {\n        return verifyNIT(control);\n    }\n\n    /**\n     * Verifica si un campo es menor a otro\n     * @param BasePathField Path del campo que debe ser menor\n     * @param TargetPathField Path del campo que deberia ser mayor\n     */\n    static lowerThan(BasePathField: string, TargetPathField: string): ValidatorFn {\n        return lowerThan(BasePathField, TargetPathField);\n    }\n\n    /**\n     * Verifica si un campo es menor o igual a otro\n     * @param BasePathField Path del campo que debe ser menor o igual\n     * @param TargetPathField Path del campo que deberia ser mayor o igual\n     */\n    static lowerOrEqualThan(BasePathField: string, TargetPathField: string): ValidatorFn {\n        return lowerOrEqualThan(BasePathField, TargetPathField);\n    }\n\n    /**\n     * Verifica si un campo es mayor a otro\n     * @param BasePathField Path del campo que debe ser mayor\n     * @param TargetPathField Path del campo que deberia ser menor\n     */\n    static greaterThan(BasePathField: string, TargetPathField: string): ValidatorFn {\n        return greaterThan(BasePathField, TargetPathField);\n    }\n\n    /**\n     * Verifica si un campo es mayor o igual a otro\n     * @param BasePathField Path del campo que debe ser mayor o igual\n     * @param TargetPathField Path del campo que deberia ser menor o igual\n     */\n    static greaterOrEqualThan(BasePathField: string, TargetPathField: string): ValidatorFn {\n        return greaterOrEqualThan(BasePathField, TargetPathField);\n    }\n\n    /**\n     * Verifica si el tamaño no excede el tamaño maximo indicado\n     * @param size Tamaño en KB, MG ó GB (ejem: 100MB)\n     */\n    static maxFileSize(size: string): ValidatorFn {\n        return maxFileSize(size);\n    }\n\n    /**\n     * Verifica si el tamaño es mayor el tamaño mínimo indicado\n     * @param size Tamaño en KB, MG ó GB (ejem: 100MB)\n     */\n    static minFileSize(size: string): ValidatorFn {\n        return minFileSize(size);\n    }\n\n    /**\n     * Verifica si el archivo tiene una extensión adminitida por medio de su cabecera\n     * @param ext Extensiones admitidas\n     */\n    static requiredFileType(ext: string | string[]): AsyncValidatorFn {\n        return requiredFileType(ext);\n    }\n\n    /**\n     * Verifica si existe dicho valor en la DB si coincide con el modelo y el nombre de campo\n     * @param http\n     * @param url\n     * @param requestBody propiedad Id opcional para excluir de la busqueda un registro\n     */\n    static alreadyExist(http: HttpClient, url: string, requestBody: BaseValidationModel): AsyncValidatorFn {\n        return alreadyExist(http, url, requestBody);\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/select/ser-select.service.ts\n        \n\n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                filterData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(item: any, filter: any, searchBy: any)\n                \n            \n\n\n            \n                \n                    Definido en src/form/select/ser-select.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchBy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterData\n                        \n                        \n                    \n                \n            \n            \n                \nfilterData(data: any[], filter: any, searchBy: any)\n                \n            \n\n\n            \n                \n                    Definido en src/form/select/ser-select.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchBy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { hasValue } from '../../utils/check';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n\n    filterData(data: any[], filter: any, searchBy: any) {\n        if (!hasValue(data) || !hasValue(filter)) {\n            return data;\n        }\n\n        const filteredList = data.filter((item: any) => this.applyFilter(item, filter, searchBy));\n\n        if (hasValue(filteredList)) {\n            return filteredList;\n        } else {\n            return [];\n        }\n    }\n\n    applyFilter(item: any, filter: any, searchBy: any): boolean {\n        let found = false;\n        if (searchBy.length > 0) {\n            if (item.grpTitle) {\n                found = true;\n            } else {\n                for (let t = 0; t = 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n\n        } else {\n            if (item.grpTitle) {\n                found = true;\n            } else {\n                for (const prop in item) {\n                    if (filter && item[prop]) {\n                        if (item[prop].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return found;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/DownloadService.html":{"url":"injectables/DownloadService.html","title":"injectable - DownloadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  DownloadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/ui/download.service.ts\n        \n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                downloadElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/ui/download.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(url: string)\n                \n            \n\n\n            \n                \n                    Definido en src/ui/download.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url absoluta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/ui/download.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DownloadService {\n\n    downloadElement: any;\n\n    constructor() {\n        this.downloadElement = document.createElement('a');\n        this.downloadElement.setAttribute('target', '_blank');\n        document.body.appendChild(this.downloadElement);\n    }\n\n    /**\n     * @description Descarga tradicional mediante un a[href] emulando un clic de usuario\n     * @param url Url absoluta\n     */\n    get(url: string) {\n        this.downloadElement.setAttribute('href', url);\n        this.downloadElement.setAttribute('download', url.split('/').pop());\n        this.downloadElement.click();\n        document.body.removeChild(this.downloadElement);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/DropdownSettings.html":{"url":"interfaces/DropdownSettings.html","title":"interface - DropdownSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropdownSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/select/ser-select.interface.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        addNewButtonText\n                                \n                                \n                                            Opcional\n                                        addNewItemOnFilter\n                                \n                                \n                                            Opcional\n                                        badgeShowLimit\n                                \n                                \n                                            Opcional\n                                        classes\n                                \n                                \n                                            Opcional\n                                        clearAll\n                                \n                                \n                                            Opcional\n                                        disabledKey\n                                \n                                \n                                            Opcional\n                                        enableCheckAll\n                                \n                                \n                                            Opcional\n                                        enableFilterSelectAll\n                                \n                                \n                                            Opcional\n                                        enableSearchFilter\n                                \n                                \n                                            Opcional\n                                        escapeToClose\n                                \n                                \n                                            Opcional\n                                        filterSelectAllText\n                                \n                                \n                                            Opcional\n                                        filterUnSelectAllText\n                                \n                                \n                                            Opcional\n                                        groupBy\n                                \n                                \n                                            Opcional\n                                        labelKey\n                                \n                                \n                                            Opcional\n                                        lazyLoading\n                                \n                                \n                                            Opcional\n                                        limitSelection\n                                \n                                \n                                            Opcional\n                                        loading\n                                \n                                \n                                            Opcional\n                                        maxHeight\n                                \n                                \n                                            Opcional\n                                        noDataLabel\n                                \n                                \n                                            Opcional\n                                        primaryKey\n                                \n                                \n                                            Opcional\n                                        searchAutofocus\n                                \n                                \n                                            Opcional\n                                        searchBy\n                                \n                                \n                                            Opcional\n                                        searchPlaceholderText\n                                \n                                \n                                            Opcional\n                                        selectAllText\n                                \n                                \n                                            Opcional\n                                        selectGroup\n                                \n                                \n                                            Opcional\n                                        showCheckbox\n                                \n                                \n                                            Opcional\n                                        singleSelection\n                                \n                                \n                                            Opcional\n                                        unSelectAllText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        addNewButtonText\n                                    \n                                \n                                \n                                    \n                                        addNewButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addNewItemOnFilter\n                                    \n                                \n                                \n                                    \n                                        addNewItemOnFilter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        badgeShowLimit\n                                    \n                                \n                                \n                                    \n                                        badgeShowLimit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                    \n                                \n                                \n                                    \n                                        classes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clearAll\n                                    \n                                \n                                \n                                    \n                                        clearAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabledKey\n                                    \n                                \n                                \n                                    \n                                        disabledKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableCheckAll\n                                    \n                                \n                                \n                                    \n                                        enableCheckAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableFilterSelectAll\n                                    \n                                \n                                \n                                    \n                                        enableFilterSelectAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableSearchFilter\n                                    \n                                \n                                \n                                    \n                                        enableSearchFilter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        escapeToClose\n                                    \n                                \n                                \n                                    \n                                        escapeToClose:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterSelectAllText\n                                    \n                                \n                                \n                                    \n                                        filterSelectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterUnSelectAllText\n                                    \n                                \n                                \n                                    \n                                        filterUnSelectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupBy\n                                    \n                                \n                                \n                                    \n                                        groupBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelKey\n                                    \n                                \n                                \n                                    \n                                        labelKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lazyLoading\n                                    \n                                \n                                \n                                    \n                                        lazyLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limitSelection\n                                    \n                                \n                                \n                                    \n                                        limitSelection:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxHeight\n                                    \n                                \n                                \n                                    \n                                        maxHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDataLabel\n                                    \n                                \n                                \n                                    \n                                        noDataLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryKey\n                                    \n                                \n                                \n                                    \n                                        primaryKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchAutofocus\n                                    \n                                \n                                \n                                    \n                                        searchAutofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchBy\n                                    \n                                \n                                \n                                    \n                                        searchBy:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchPlaceholderText\n                                    \n                                \n                                \n                                    \n                                        searchPlaceholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectAllText\n                                    \n                                \n                                \n                                    \n                                        selectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectGroup\n                                    \n                                \n                                \n                                    \n                                        selectGroup:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCheckbox\n                                    \n                                \n                                \n                                    \n                                        showCheckbox:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleSelection\n                                    \n                                \n                                \n                                    \n                                        singleSelection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unSelectAllText\n                                    \n                                \n                                \n                                    \n                                        unSelectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DropdownSettings {\n    singleSelection?: boolean;\n    enableCheckAll?: boolean;\n    selectAllText?: string;\n    unSelectAllText?: string;\n    filterSelectAllText?: string;\n    filterUnSelectAllText?: string;\n    enableFilterSelectAll?: boolean;\n    enableSearchFilter?: boolean;\n    searchBy?: string[];\n    maxHeight?: number;\n    badgeShowLimit?: number;\n    classes?: string;\n    limitSelection?: number;\n    searchPlaceholderText?: string;\n    groupBy?: string;\n    showCheckbox?: boolean;\n    noDataLabel?: string;\n    searchAutofocus?: boolean;\n    lazyLoading?: boolean;\n    labelKey?: string;\n    primaryKey?: string;\n    disabledKey?: string;\n    loading?: boolean;\n    selectGroup?: boolean;\n    addNewItemOnFilter?: boolean;\n    addNewButtonText?: string;\n    escapeToClose?: boolean;\n    clearAll?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/ErrorDetails.html":{"url":"interfaces/ErrorDetails.html","title":"interface - ErrorDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/ser-errors/ser-errors.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        control\n                                \n                                \n                                        errorName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        control\n                                    \n                                \n                                \n                                    \n                                        control:         AbstractControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         AbstractControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorName\n                                    \n                                \n                                \n                                    \n                                        errorName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\nexport type ErrorOptions = string | string[];\n\nexport interface ErrorDetails {\n  control: AbstractControl;\n  errorName: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/ExternalScriptService.html":{"url":"injectables/ExternalScriptService.html","title":"injectable - ExternalScriptService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  ExternalScriptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/external-script/external-script.service.ts\n        \n\n\n\n            \n                Ejemplo\n            \n            \n                        \n                            constructor(private externalScriptService: ExternalScriptService) { }\n\nthis.externalScriptService.insert('google-jssdk', 'https://apis.google.com/js/platform.js?onload=googleSDKLoaded');\n                        \n            \n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                insert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/external-script/external-script.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(id: string, src: string)\n                \n            \n\n\n            \n                \n                    Definido en src/external-script/external-script.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    src\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * @description\n * Función para insertar scritps externos (ejem: gapi, facebook sdk)\n * @example\n * constructor(private externalScriptService: ExternalScriptService) { }\n *\n * this.externalScriptService.insert('google-jssdk', 'https://apis.google.com/js/platform.js?onload=googleSDKLoaded');\n * @param {string} id - Id para la etiqueta script\n * @param {string} src - url para la etiqueta script\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExternalScriptService {\n\n  constructor() { }\n\n  insert(id: string, src: string) {\n    const fjs = document.getElementsByTagName('script')[0];\n    if (document.getElementById(id)) { return; }\n    const js = document.createElement('script') as HTMLScriptElement;\n    js.id = id;\n    js.src = src;\n    fjs.parentNode.insertBefore(js, fjs);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/FacebookSDKConfig.html":{"url":"classes/FacebookSDKConfig.html","title":"class - FacebookSDKConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  FacebookSDKConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/facebook/config/facebook-sdk.config.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _clientConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accesorios\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clientConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientConfig: ClientConfig)\n                    \n                \n                        \n                            \n                                Definido en src/facebook/config/facebook-sdk.config.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        clientConfig\n                                                  \n                                                        \n                                                                    ClientConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _clientConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     ClientConfig\n\n                        \n                    \n                        \n                            \n                                    Definido en src/facebook/config/facebook-sdk.config.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accesorios\n    \n        \n            \n                \n                    \n                        \n                        clientConfig\n                    \n                \n\n                \n                    \n                        getclientConfig()\n                    \n                \n                            \n                                \n                                    Definido en src/facebook/config/facebook-sdk.config.ts:5\n                                \n                            \n\n                \n                    \n                        setclientConfig(value)\n                    \n                \n                            \n                                \n                                    Definido en src/facebook/config/facebook-sdk.config.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import ClientConfig = facebook.InitParams;\n\nexport class FacebookSDKConfig {\n  private _clientConfig: ClientConfig;\n  public get clientConfig(): ClientConfig {\n    return this._clientConfig;\n  }\n  public set clientConfig(value: ClientConfig) {\n    this._clientConfig = value;\n  }\n\n  constructor(clientConfig: ClientConfig) {\n    this.clientConfig = clientConfig;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/FacebookSDKModule.html":{"url":"modules/FacebookSDKModule.html","title":"module - FacebookSDKModule","body":"\n                   \n\n\n\n\n    Módulos\n    FacebookSDKModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/facebook/facebook-sdk.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(fsdkConfigProvider: Provider)\n                \n            \n\n\n            \n                \n                    Definido en src/facebook/facebook-sdk.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    fsdkConfigProvider\n                                    \n                                                Provider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { FacebookSDKService } from './facebook-sdk.service';\n\n/**\n * @description\n * Módulo para parametrizar la autenticación con Facebook\n * @example\n * import { NG_FSDK_CONFIG, FacebookSDKModule } from '@sersol/ngx';\n * @NgModule({\n    imports: [\n      ...,\n      FacebookSDKModule.forRoot({\n          provide: NG_FSDK_CONFIG,\n          useValue: {\n              appId: FACEBOOK_CLIENT_ID,\n              cookie: true,\n              xfbml: true,\n              version: 'v6.0'\n          }\n      }),\n      ...\n    ],\n    declarations: [...],\n    schemas: [...],\n    providers: [...],\n    bootstrap: [...]\n})\nexport class AppModule { }\n */\n@NgModule()\nexport class FacebookSDKModule {\n  static forRoot(fsdkConfigProvider: Provider): ModuleWithProviders {\n    return {\n      ngModule: FacebookSDKModule,\n      providers: [\n        fsdkConfigProvider,\n        FacebookSDKService\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/FacebookSDKService.html":{"url":"injectables/FacebookSDKService.html","title":"injectable - FacebookSDKService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  FacebookSDKService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/facebook/facebook-sdk.service.ts\n        \n\n\n\n            \n                Ejemplo\n            \n            \n            \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Private\n                                    Readonly\n                                fsdkUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadSDK\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accesorios\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: facebook.InitParams)\n                    \n                \n                        \n                            \n                                Definido en src/facebook/facebook-sdk.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    facebook.InitParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadSDK\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSDK()\n                \n            \n\n\n            \n                \n                    Definido en src/facebook/facebook-sdk.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Definido en src/facebook/facebook-sdk.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         FacebookSDKConfig\n\n                        \n                    \n                        \n                            \n                                    Definido en src/facebook/facebook-sdk.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            fsdkUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 'https://connect.facebook.net/en_US/sdk.js'\n                        \n                    \n                        \n                            \n                                    Definido en src/facebook/facebook-sdk.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accesorios\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Definido en src/facebook/facebook-sdk.service.ts:21\n                                \n                            \n\n                \n                    \n                        setconfig(value)\n                    \n                \n                            \n                                \n                                    Definido en src/facebook/facebook-sdk.service.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { FacebookUserProfile } from './Ifacebook';\nimport { Observable } from 'rxjs';\nimport { Inject, Injectable, InjectionToken, Output, EventEmitter } from '@angular/core';\nimport { FacebookSDKConfig } from './config/facebook-sdk.config';\nimport { Observer } from 'rxjs';\n\nexport let NG_FSDK_CONFIG: InjectionToken = new InjectionToken('facebook.config');\n\n/**\n * @description\n * Servicio para interacturar con el SDK de Facebook\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacebookSDKService {\n  private readonly fsdkUrl: string = 'https://connect.facebook.net/en_US/sdk.js';\n  private _config: FacebookSDKConfig;\n  public get config(): FacebookSDKConfig {\n    return this._config;\n  }\n  public set config(value: FacebookSDKConfig) {\n    this._config = value;\n  }\n\n  @Output() onload: EventEmitter = new EventEmitter();\n\n  constructor(@Inject(NG_FSDK_CONFIG) config: facebook.InitParams) {\n    this.config = new FacebookSDKConfig(config);\n    this.loadSDK().subscribe(() => {\n      console.log('Facebook: SDK loaded');\n      this.onload.emit();\n    });\n  }\n\n  /**\n   * @description\n   * Método para obtener un token de inicio de sesión junto con la información de perfil\n   * @returns {Observable}\n   */\n  public login(): Observable {\n    return new Observable((observer: Observer) => {\n\n      FB.login((response: any) => {\n        if (response.status === 'connected') {\n          FB.api('/me', { fields: 'first_name,last_name,email' }, (res: any) => {\n\n            FB.api('/me/picture', {\n              width: 300,\n              redirect: 'false'\n            }, (pic: any) => {\n\n              const facebookProfile: FacebookUserProfile = {\n                id: res.id,\n                access_token: response.authResponse.accessToken,\n                first_name: res.first_name,\n                last_name: res.last_name,\n                email: res.email,\n              };\n\n              if (pic?.data?.url) {\n                facebookProfile.picture = pic.data.url;\n              }\n\n              observer.next(facebookProfile);\n              observer.complete();\n\n            });\n\n          });\n\n        } else {\n          console.warn('Facebook: Popup closed by user');\n        }\n      }, { scope: 'public_profile,email' });\n    });\n  }\n\n  /**\n   * @description\n   * Metodo privado que carga la libreria de Facebook, al cargarse correctamente, se emite el evento 'onload'\n   */\n  public loadSDK(): Observable {\n    return new Observable((observer: Observer) => {\n\n      if ((window as any).FB == null) {\n\n        const node = document.createElement('script');\n        node.src = this.fsdkUrl;\n        node.type = 'text/javascript';\n        node.async = true;\n        node.defer = true;\n        node.id = 'facebook-sdk';\n        document.getElementsByTagName('head')[0].appendChild(node);\n        node.onload = () => {\n          FB.init(this.config.clientConfig);\n          FB.AppEvents.logPageView();\n\n          observer.next(true);\n          observer.complete();\n        };\n\n      } else {\n        observer.next(true);\n        observer.complete();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/FacebookUserProfile.html":{"url":"interfaces/FacebookUserProfile.html","title":"interface - FacebookUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FacebookUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/facebook/IFacebook.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                            Opcional\n                                        email\n                                \n                                \n                                        first_name\n                                \n                                \n                                        id\n                                \n                                \n                                            Opcional\n                                        last_name\n                                \n                                \n                                            Opcional\n                                        picture\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FacebookUserProfile {\n  id: number;\n  access_token: string;\n  first_name: string;\n  last_name?: string;\n  email?: string;\n  picture?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/FilterSettings.html":{"url":"interfaces/FilterSettings.html","title":"interface - FilterSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/filter/ser-filter.interface.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        classes\n                                \n                                \n                                            Opcional\n                                        clearAll\n                                \n                                \n                                            Opcional\n                                        disabledKey\n                                \n                                \n                                            Opcional\n                                        enableCheckAll\n                                \n                                \n                                            Opcional\n                                        labelKey\n                                \n                                \n                                            Opcional\n                                        loading\n                                \n                                \n                                            Opcional\n                                        maxHeight\n                                \n                                \n                                            Opcional\n                                        noDataLabel\n                                \n                                \n                                            Opcional\n                                        primaryKey\n                                \n                                \n                                            Opcional\n                                        searchBy\n                                \n                                \n                                            Opcional\n                                        searchPlaceholderText\n                                \n                                \n                                            Opcional\n                                        selectAllText\n                                \n                                \n                                            Opcional\n                                        unSelectAllText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                    \n                                \n                                \n                                    \n                                        classes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clearAll\n                                    \n                                \n                                \n                                    \n                                        clearAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabledKey\n                                    \n                                \n                                \n                                    \n                                        disabledKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableCheckAll\n                                    \n                                \n                                \n                                    \n                                        enableCheckAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelKey\n                                    \n                                \n                                \n                                    \n                                        labelKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxHeight\n                                    \n                                \n                                \n                                    \n                                        maxHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDataLabel\n                                    \n                                \n                                \n                                    \n                                        noDataLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryKey\n                                    \n                                \n                                \n                                    \n                                        primaryKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchBy\n                                    \n                                \n                                \n                                    \n                                        searchBy:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchPlaceholderText\n                                    \n                                \n                                \n                                    \n                                        searchPlaceholderText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectAllText\n                                    \n                                \n                                \n                                    \n                                        selectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unSelectAllText\n                                    \n                                \n                                \n                                    \n                                        unSelectAllText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterSettings {\n    enableCheckAll?: boolean;\n    selectAllText?: string;\n    unSelectAllText?: string;\n    searchBy?: string[];\n    maxHeight?: number;\n    classes?: string;\n    searchPlaceholderText?: string;\n    noDataLabel?: string;\n    labelKey?: string;\n    primaryKey?: string;\n    disabledKey?: string;\n    loading?: boolean;\n    clearAll?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/FinishTypingDirective.html":{"url":"directives/FinishTypingDirective.html","title":"directive - FinishTypingDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  FinishTypingDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/ui/finish-typing.directive.ts\n        \n\n\n            \n                Implementa\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [finishTyping]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                inputChangedPromise\n                            \n                            \n                                listener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Salidas\n                    \n                \n                \n                    \n                        \n                            \n                                callback\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, rendered: Renderer2)\n                    \n                \n                        \n                            \n                                Definido en src/ui/finish-typing.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendered\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Salidas\n        \n            \n                \n                    \n                        \n                        callback\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definido en src/ui/finish-typing.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Definido en src/ui/finish-typing.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputChangedPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     ReturnType<>\n\n                        \n                    \n                        \n                            \n                                    Definido en src/ui/finish-typing.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listener\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/ui/finish-typing.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, ElementRef, Renderer2, OnDestroy } from '@angular/core';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[finishTyping]'\n})\nexport class FinishTypingDirective implements OnDestroy {\n\n    @Output() callback: EventEmitter = new EventEmitter();\n    listener: any;\n    inputChangedPromise: ReturnType;\n\n    constructor(private _elementRef: ElementRef, rendered: Renderer2) {\n        this.listener = rendered.listen(this._elementRef.nativeElement, 'keyup', () => {\n\n            if (this.inputChangedPromise) {\n                clearTimeout(this.inputChangedPromise);\n            }\n\n            this.inputChangedPromise = setTimeout(() => {\n                this.callback.emit();\n            }, 500);\n        });\n    }\n\n    ngOnDestroy() {\n        this.listener();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/FsDocument.html":{"url":"interfaces/FsDocument.html","title":"interface - FsDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FsDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/fullscreen/fullscreen-interface.ts\n        \n\n\n            \n                Extiende\n            \n            \n                    HTMLDocument\n            \n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        mozCancelFullScreen\n                                \n                                \n                                            Opcional\n                                        mozFullScreenElement\n                                \n                                \n                                            Opcional\n                                        msExitFullscreen\n                                \n                                \n                                            Opcional\n                                        msFullscreenElement\n                                \n                                \n                                            Opcional\n                                        webkitExitFullscreen\n                                \n                                \n                                            Opcional\n                                        webkitFullscreenElement\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        mozCancelFullScreen\n                                    \n                                \n                                \n                                    \n                                        mozCancelFullScreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mozFullScreenElement\n                                    \n                                \n                                \n                                    \n                                        mozFullScreenElement:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     Element\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msExitFullscreen\n                                    \n                                \n                                \n                                    \n                                        msExitFullscreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msFullscreenElement\n                                    \n                                \n                                \n                                    \n                                        msFullscreenElement:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     Element\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webkitExitFullscreen\n                                    \n                                \n                                \n                                    \n                                        webkitExitFullscreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webkitFullscreenElement\n                                    \n                                \n                                \n                                    \n                                        webkitFullscreenElement:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     Element\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FsDocument extends HTMLDocument {\n  msFullscreenElement?: Element;\n  mozFullScreenElement?: Element;\n  webkitFullscreenElement?: Element;\n  msExitFullscreen?: () => void;\n  mozCancelFullScreen?: () => void;\n  webkitExitFullscreen?: () => void;\n}\n\nexport interface FsDocumentElement extends HTMLElement {\n  msRequestFullscreen?: () => void;\n  mozRequestFullScreen?: () => void;\n  webkitRequestFullscreen?: () => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/FsDocumentElement.html":{"url":"interfaces/FsDocumentElement.html","title":"interface - FsDocumentElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FsDocumentElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/fullscreen/fullscreen-interface.ts\n        \n\n\n            \n                Extiende\n            \n            \n                    HTMLElement\n            \n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        mozRequestFullScreen\n                                \n                                \n                                            Opcional\n                                        msRequestFullscreen\n                                \n                                \n                                            Opcional\n                                        webkitRequestFullscreen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        mozRequestFullScreen\n                                    \n                                \n                                \n                                    \n                                        mozRequestFullScreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msRequestFullscreen\n                                    \n                                \n                                \n                                    \n                                        msRequestFullscreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webkitRequestFullscreen\n                                    \n                                \n                                \n                                    \n                                        webkitRequestFullscreen:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FsDocument extends HTMLDocument {\n  msFullscreenElement?: Element;\n  mozFullScreenElement?: Element;\n  webkitFullscreenElement?: Element;\n  msExitFullscreen?: () => void;\n  mozCancelFullScreen?: () => void;\n  webkitExitFullscreen?: () => void;\n}\n\nexport interface FsDocumentElement extends HTMLElement {\n  msRequestFullscreen?: () => void;\n  mozRequestFullScreen?: () => void;\n  webkitRequestFullscreen?: () => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/FullscreenService.html":{"url":"injectables/FullscreenService.html","title":"injectable - FullscreenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  FullscreenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/fullscreen/fullscreen.service.ts\n        \n\n\n\n            \n                Ejemplo\n            \n            \n                        \n                            constructor(public fullscreenService: FullscreenService) { }\n\nthis.fullscreenService.enable(); // Habilita el modo pantalla completa\nthis.fullscreenService.disable(); // Deshabilita el modo pantalla completa\nthis.fullscreenService.isEnabled // Obtiene el estado del servicio\n                        \n            \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accesorios\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/fullscreen/fullscreen.service.ts:25\n                            \n                        \n\n                \n                    \n                            Crea una instancia de Fullscreen\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Definido en src/fullscreen/fullscreen.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Definido en src/fullscreen/fullscreen.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Definido en src/fullscreen/fullscreen.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         boolean\n\n                        \n                    \n                        \n                            \n                                    Definido en src/fullscreen/fullscreen.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accesorios\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Definido en src/fullscreen/fullscreen.service.ts:20\n                                \n                            \n\n                \n                    \n                        setisEnabled(value: boolean)\n                    \n                \n                            \n                                \n                                    Definido en src/fullscreen/fullscreen.service.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                        Tipo\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FsDocument, FsDocumentElement } from './fullscreen-interface';\n\n/**\n * @description\n * Clase para entrar y salir del modo pantalla completa en el navegador web\n * @example\n * constructor(public fullscreenService: FullscreenService) { }\n *\n * this.fullscreenService.enable(); // Habilita el modo pantalla completa\n * this.fullscreenService.disable(); // Deshabilita el modo pantalla completa\n * this.fullscreenService.isEnabled // Obtiene el estado del servicio\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FullscreenService {\n\n  private _isEnabled: boolean;\n  public get isEnabled(): boolean {\n    return this._isEnabled;\n  }\n  public set isEnabled(value: boolean) {\n    this._isEnabled = value;\n  }\n\n  /**\n   * Crea una instancia de Fullscreen\n   */\n  constructor () {\n\n    const setEnabled = (e: Event) => {\n\n      const fsDoc =  document;\n\n      if (fsDoc.fullscreenElement !== undefined) {\n        this.isEnabled = !(fsDoc.fullscreenElement === null);\n\n      } else if (fsDoc.webkitFullscreenElement !== undefined) { /* Old Chrome, Safari and Opera */\n        this.isEnabled = !(fsDoc.webkitFullscreenElement === null);\n\n      } else if (fsDoc.msFullscreenElement !== undefined) { /* IE / Edge */\n        this.isEnabled = !(fsDoc.msFullscreenElement === null);\n\n      } else if (fsDoc.mozFullScreenElement !== undefined) { /* Firefox */\n        this.isEnabled = !(fsDoc.mozFullScreenElement === null);\n\n      }\n    };\n\n    document.addEventListener('fullscreenchange', e => setEnabled(e));\n\n    /* Chrome, Safari and Opera */\n    document.addEventListener('webkitfullscreenchange', e => setEnabled(e));\n\n    /* IE / Edge */\n    document.addEventListener('msfullscreenchange', e => setEnabled(e));\n\n    /* Firefox */\n    document.addEventListener('mozfullscreenchange', e => setEnabled(e));\n  }\n\n  /**\n   * @description\n   * Habilita el modo pantalla completa\n   */\n  enable(): void {\n\n    const elem =  document.documentElement;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.webkitRequestFullscreen) { /* Old Chrome, Safari and Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) { /* IE/Edge */\n      elem.msRequestFullscreen();\n    } else if ('mozRequestFullScreen' in elem) { /* Firefox */\n      elem.mozRequestFullScreen();\n    }\n  }\n\n  /**\n   * @description\n   * Deshabilita el modo pantalla completa\n   */\n  disable(): void {\n\n    const fsDoc =  document;\n\n    if (this.isEnabled && fsDoc.exitFullscreen) {\n      fsDoc.exitFullscreen();\n    } else if (this.isEnabled && fsDoc.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n      fsDoc.webkitExitFullscreen();\n    } else if (this.isEnabled && fsDoc.msExitFullscreen) { /* IE/Edge */\n      fsDoc.msExitFullscreen();\n    } else if (this.isEnabled && fsDoc.mozCancelFullScreen) { /* Firefox */\n      fsDoc.mozCancelFullScreen();\n    }\n\n  }\n\n  /**\n   * @description\n   * Habilita/Deshablita el modo pantalla completa\n   */\n  toggle(): void {\n    if (this.isEnabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/GoogleClientConfig.html":{"url":"classes/GoogleClientConfig.html","title":"class - GoogleClientConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  GoogleClientConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/google/IGoogle.ts\n        \n\n\n\n            \n                Implementa\n            \n            \n                        \n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface GoogleUserProfile {\n  id: string;\n  id_token: string;\n  first_name: string;\n  last_name?: string;\n  email?: string;\n  picture?: string;\n}\n\nexport class GoogleClientConfig implements gapi.auth2.ClientConfig { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/GoogleSDKConfig.html":{"url":"classes/GoogleSDKConfig.html","title":"class - GoogleSDKConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  GoogleSDKConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/google/config/google-sdk.config.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _clientConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accesorios\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clientConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientConfig: gapi.auth2.ClientConfig)\n                    \n                \n                        \n                            \n                                Definido en src/google/config/google-sdk.config.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        clientConfig\n                                                  \n                                                        \n                                                                    gapi.auth2.ClientConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _clientConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     gapi.auth2.ClientConfig\n\n                        \n                    \n                        \n                            \n                                    Definido en src/google/config/google-sdk.config.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accesorios\n    \n        \n            \n                \n                    \n                        \n                        clientConfig\n                    \n                \n\n                \n                    \n                        getclientConfig()\n                    \n                \n                            \n                                \n                                    Definido en src/google/config/google-sdk.config.ts:5\n                                \n                            \n\n                \n                    \n                        setclientConfig(value)\n                    \n                \n                            \n                                \n                                    Definido en src/google/config/google-sdk.config.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        export class GoogleSDKConfig {\n  private _clientConfig: gapi.auth2.ClientConfig;\n  public get clientConfig(): gapi.auth2.ClientConfig {\n    return this._clientConfig;\n  }\n  public set clientConfig(value: gapi.auth2.ClientConfig) {\n    this._clientConfig = value;\n  }\n\n  constructor(clientConfig: gapi.auth2.ClientConfig) {\n    this.clientConfig = clientConfig;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/GoogleSDKModule.html":{"url":"modules/GoogleSDKModule.html","title":"module - GoogleSDKModule","body":"\n                   \n\n\n\n\n    Módulos\n    GoogleSDKModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/google/google-sdk.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(gapiConfigProvider: Provider)\n                \n            \n\n\n            \n                \n                    Definido en src/google/google-sdk.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    gapiConfigProvider\n                                    \n                                                Provider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { GoogleSDKService } from './google-sdk.service';\n\n/**\n * @description\n * Módulo para parametrizar la autenticación con Google\n * @example\n * import { NG_GAPI_CONFIG, GoogleSDKModule } from '@sersol/ngx';\n * @NgModule({\n *  imports: [\n *    ...,\n *    GoogleSDKModule.forRoot({\n *        provide: NG_GAPI_CONFIG,\n *        useValue: {\n *            client_id: GOOGLE_CLIENT_ID,\n *            scope: 'profile email'\n *        }\n *    }),\n *    ...\n *  ],\n *  declarations: [...],\n *  schemas: [...],\n *  providers: [...],\n *  bootstrap: [...]\n * })\n * export class AppModule { }\n */\n@NgModule()\nexport class GoogleSDKModule {\n  static forRoot(gapiConfigProvider: Provider): ModuleWithProviders {\n    return {\n      ngModule: GoogleSDKModule,\n      providers: [\n        gapiConfigProvider,\n        GoogleSDKService\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/GoogleSDKService.html":{"url":"injectables/GoogleSDKService.html","title":"injectable - GoogleSDKService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  GoogleSDKService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/google/google-sdk.service.ts\n        \n\n\n\n            \n                Ejemplo\n            \n            \n            \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Private\n                                _GoogleAuth\n                            \n                            \n                                    Private\n                                    Readonly\n                                gapiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadSDK\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accesorios\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                                \n                                    GoogleAuth\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: GoogleClientConfig)\n                    \n                \n                        \n                            \n                                Definido en src/google/google-sdk.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        GoogleClientConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadSDK\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSDK()\n                \n            \n\n\n            \n                \n                    Definido en src/google/google-sdk.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Definido en src/google/google-sdk.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         GoogleSDKConfig\n\n                        \n                    \n                        \n                            \n                                    Definido en src/google/google-sdk.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _GoogleAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     gapi.auth2.GoogleAuth\n\n                        \n                    \n                        \n                            \n                                    Definido en src/google/google-sdk.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            gapiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 'https://apis.google.com/js/api.js'\n                        \n                    \n                        \n                            \n                                    Definido en src/google/google-sdk.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accesorios\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Definido en src/google/google-sdk.service.ts:25\n                                \n                            \n\n                \n                    \n                        setconfig(value)\n                    \n                \n                            \n                                \n                                    Definido en src/google/google-sdk.service.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        GoogleAuth\n                    \n                \n\n                \n                    \n                        getGoogleAuth()\n                    \n                \n                            \n                                \n                                    Definido en src/google/google-sdk.service.ts:33\n                                \n                            \n\n                \n                    \n                        setGoogleAuth(value)\n                    \n                \n                            \n                                \n                                    Definido en src/google/google-sdk.service.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Inject, Injectable, InjectionToken, Output, EventEmitter } from '@angular/core';\nimport { Observer } from 'rxjs';\nimport { GoogleSDKConfig } from './config/google-sdk.config';\nimport { GoogleUserProfile, GoogleClientConfig } from './Igoogle';\n\nexport let NG_GAPI_CONFIG: InjectionToken = new InjectionToken('google.config');\n\n/**\n * @description\n * Servicio para interactuar con la API de Google\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleSDKService {\n  private readonly gapiUrl: string = 'https://apis.google.com/js/api.js';\n\n  @Output() onload: EventEmitter = new EventEmitter();\n\n  private _config: GoogleSDKConfig;\n  public get config(): GoogleSDKConfig {\n    return this._config;\n  }\n  public set config(value: GoogleSDKConfig) {\n    this._config = value;\n  }\n\n  private _GoogleAuth: gapi.auth2.GoogleAuth;\n  public get GoogleAuth(): gapi.auth2.GoogleAuth {\n    return this._GoogleAuth;\n  }\n  public set GoogleAuth(value: gapi.auth2.GoogleAuth) {\n    this._GoogleAuth = value;\n  }\n\n  constructor(@Inject(NG_GAPI_CONFIG) config: GoogleClientConfig) {\n    this.config = new GoogleSDKConfig(config);\n    this.loadSDK().subscribe(() => {\n      console.log('Google: SDK loaded');\n      this.onload.emit();\n    });\n  }\n\n  /**\n   * @description\n   * Método para obtener un token de inicio de sesión junto con la información de perfil\n   * @returns {Observable}\n   */\n  public login(): Observable {\n    return new Observable((observer: Observer) => {\n\n      this.GoogleAuth.signIn().then((res: gapi.auth2.GoogleUser) => {\n\n        const profile = res.getBasicProfile();\n\n        const googleProfile: GoogleUserProfile = {\n          id: profile.getId(),\n          id_token: res.getAuthResponse().id_token,\n          first_name: profile.getGivenName(),\n          last_name: profile.getFamilyName(),\n          email: profile.getEmail(),\n          picture: profile.getImageUrl().replace('=s96-', '=-')\n        };\n\n        observer.next(googleProfile);\n        observer.complete();\n\n      }, (err: any) => {\n          return observer.error(err);\n      });\n\n    });\n  }\n\n  /**\n   * @description\n   * Metodo privado que carga la libreria de Google, al cargarse correctamente, se emite el evento 'onload'\n   */\n  private loadSDK(): Observable {\n    return new Observable((observer: Observer) => {\n\n      if ((window as any).gapi == null) {\n\n        const node = document.createElement('script');\n        node.src = this.gapiUrl;\n        node.type = 'text/javascript';\n        node.async = true;\n        node.defer = true;\n        node.id = 'google-api';\n        document.getElementsByTagName('head')[0].appendChild(node);\n        node.onload = () => {\n          gapi.load('auth2', () => {\n            gapi.auth2.init(this.config.clientConfig).then((auth: gapi.auth2.GoogleAuth) => {\n              this.GoogleAuth = auth;\n              observer.next();\n              observer.complete();\n            }).catch((err: any) => observer.error(err));\n          });\n        };\n\n      } else {\n        observer.next();\n        observer.complete();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/GoogleUserProfile.html":{"url":"interfaces/GoogleUserProfile.html","title":"interface - GoogleUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/google/IGoogle.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        email\n                                \n                                \n                                        first_name\n                                \n                                \n                                        id\n                                \n                                \n                                        id_token\n                                \n                                \n                                            Opcional\n                                        last_name\n                                \n                                \n                                            Opcional\n                                        picture\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token\n                                    \n                                \n                                \n                                    \n                                        id_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleUserProfile {\n  id: string;\n  id_token: string;\n  first_name: string;\n  last_name?: string;\n  email?: string;\n  picture?: string;\n}\n\nexport class GoogleClientConfig implements gapi.auth2.ClientConfig { }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/GrowOnInputDirective.html":{"url":"directives/GrowOnInputDirective.html","title":"directive - GrowOnInputDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  GrowOnInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/grow-on-input.directive.ts\n        \n\n\n            \n                Implementa\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [growOnInput]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                listener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                getScrollHeight\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, _renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Definido en src/form/grow-on-input.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScrollHeight\n                        \n                        \n                    \n                \n            \n            \n                \ngetScrollHeight(elm: any)\n                \n            \n\n\n            \n                \n                    Definido en src/form/grow-on-input.directive.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    elm\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Definido en src/form/grow-on-input.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/form/grow-on-input.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listener\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/form/grow-on-input.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, OnInit, OnDestroy, ElementRef, Renderer2 } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[growOnInput]'\n})\nexport class GrowOnInputDirective implements OnInit, OnDestroy {\n    listener;\n\n    constructor(private _elementRef: ElementRef, private _renderer: Renderer2) { }\n\n    getScrollHeight(elm: any) {\n        const savedValue = elm.value;\n        elm.value = '';\n        elm._baseScrollHeight = elm.scrollHeight;\n        elm.value = savedValue;\n    }\n\n    ngOnInit() {\n        this.listener = this._renderer?.listen(this._elementRef.nativeElement, 'keyup', () => {\n\n            if (this._elementRef.nativeElement.nodeName !== 'TEXTAREA') {\n                return;\n            }\n\n            const rows = Math.ceil(this._elementRef.nativeElement.scrollHeight / 16);\n            this._elementRef.nativeElement.rows = 1 + rows;\n\n        });\n    }\n\n    ngOnDestroy() {\n        this.listener();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/IDimensions.html":{"url":"interfaces/IDimensions.html","title":"interface - IDimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/select/virtual-scroll/idimension.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        childHeight\n                                \n                                \n                                        childWidth\n                                \n                                \n                                        itemCount\n                                \n                                \n                                        itemsPerPage\n                                \n                                \n                                        itemsPerWrapGroup\n                                \n                                \n                                        maxScrollPosition\n                                \n                                \n                                        pageCount_fractional\n                                \n                                \n                                        scrollLength\n                                \n                                \n                                        viewportLength\n                                \n                                \n                                        wrapGroupsPerPage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        childHeight\n                                    \n                                \n                                \n                                    \n                                        childHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        childWidth\n                                    \n                                \n                                \n                                    \n                                        childWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerWrapGroup\n                                    \n                                \n                                \n                                    \n                                        itemsPerWrapGroup:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxScrollPosition\n                                    \n                                \n                                \n                                    \n                                        maxScrollPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount_fractional\n                                    \n                                \n                                \n                                    \n                                        pageCount_fractional:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollLength\n                                    \n                                \n                                \n                                    \n                                        scrollLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewportLength\n                                    \n                                \n                                \n                                    \n                                        viewportLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wrapGroupsPerPage\n                                    \n                                \n                                \n                                    \n                                        wrapGroupsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDimensions {\n\titemCount: number;\n\titemsPerWrapGroup: number;\n\twrapGroupsPerPage: number;\n\titemsPerPage: number;\n\tpageCount_fractional: number;\n\tchildWidth: number;\n\tchildHeight: number;\n\tscrollLength: number;\n\tviewportLength: number;\n\tmaxScrollPosition: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/IPageInfo.html":{"url":"interfaces/IPageInfo.html","title":"interface - IPageInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPageInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/select/virtual-scroll/ipageinfo.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endIndex\n                                \n                                \n                                        endIndexWithBuffer\n                                \n                                \n                                        maxScrollPosition\n                                \n                                \n                                        scrollEndPosition\n                                \n                                \n                                        scrollStartPosition\n                                \n                                \n                                        startIndex\n                                \n                                \n                                        startIndexWithBuffer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        endIndex\n                                    \n                                \n                                \n                                    \n                                        endIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endIndexWithBuffer\n                                    \n                                \n                                \n                                    \n                                        endIndexWithBuffer:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxScrollPosition\n                                    \n                                \n                                \n                                    \n                                        maxScrollPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollEndPosition\n                                    \n                                \n                                \n                                    \n                                        scrollEndPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollStartPosition\n                                    \n                                \n                                \n                                    \n                                        scrollStartPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startIndex\n                                    \n                                \n                                \n                                    \n                                        startIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startIndexWithBuffer\n                                    \n                                \n                                \n                                    \n                                        startIndexWithBuffer:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPageInfo {\n\tstartIndex: number;\n\tendIndex: number;\n\tscrollStartPosition: number;\n\tscrollEndPosition: number;\n\tstartIndexWithBuffer: number;\n\tendIndexWithBuffer: number;\n\tmaxScrollPosition: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/IViewport.html":{"url":"interfaces/IViewport.html","title":"interface - IViewport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IViewport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/select/virtual-scroll/iviewport.ts\n        \n\n\n            \n                Extiende\n            \n            \n                        IPageInfo\n            \n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        padding\n                                \n                                \n                                        scrollLength\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        padding\n                                    \n                                \n                                \n                                    \n                                        padding:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollLength\n                                    \n                                \n                                \n                                    \n                                        scrollLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IPageInfo } from './ipageinfo';\n\nexport interface IViewport extends IPageInfo {\n\tpadding: number;\n\tscrollLength: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/LatLng.html":{"url":"interfaces/LatLng.html","title":"interface - LatLng","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LatLng\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/map/types.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lat\n                                \n                                \n                                        lng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LatLng {\n    lat: number;\n    lng: number;\n}\n\n/**\n * @description\n * Interface que representa al objeto OpenId usado para autenticarse con la API de SER\n */\nexport interface LatLng2LatLngOptions {\n    from: {\n        lat: number,\n        lng: number\n    };\n    to: {\n        lat: number,\n        lng: number\n    };\n}\n\nexport interface CenterPoint {\n    lat: number;\n    lng: number;\n    offset_x?: number;\n    offset_y?: number;\n    preserve_zoom?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/LatLng2LatLngOptions.html":{"url":"interfaces/LatLng2LatLngOptions.html","title":"interface - LatLng2LatLngOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LatLng2LatLngOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/map/types.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LatLng {\n    lat: number;\n    lng: number;\n}\n\n/**\n * @description\n * Interface que representa al objeto OpenId usado para autenticarse con la API de SER\n */\nexport interface LatLng2LatLngOptions {\n    from: {\n        lat: number,\n        lng: number\n    };\n    to: {\n        lat: number,\n        lng: number\n    };\n}\n\nexport interface CenterPoint {\n    lat: number;\n    lng: number;\n    offset_x?: number;\n    offset_y?: number;\n    preserve_zoom?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/LeafletMap.html":{"url":"classes/LeafletMap.html","title":"class - LeafletMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  LeafletMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/map/leaflet/main.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                layerControl\n                            \n                            \n                                map\n                            \n                            \n                                markerCluster\n                            \n                            \n                                markers\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                addMarker\n                            \n                            \n                                centerPoint\n                            \n                            \n                                fitMarkersBounds\n                            \n                            \n                                initMarkerCluster\n                            \n                            \n                                panTo\n                            \n                            \n                                setView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: LeafletMapOptions)\n                    \n                \n                        \n                            \n                                Definido en src/map/leaflet/main.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        LeafletMapOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layerControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     L.Control.Layers\n\n                        \n                    \n                        \n                            \n                                    Definido en src/map/leaflet/main.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     L.Map\n\n                        \n                    \n                        \n                            \n                                    Definido en src/map/leaflet/main.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerCluster\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     L.MarkerClusterGroup\n\n                        \n                    \n                        \n                            \n                                    Definido en src/map/leaflet/main.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markers\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : {}\n                        \n                    \n                        \n                            \n                                    Definido en src/map/leaflet/main.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         LeafletMapOptions\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : {\n        container: 'leaflet-map',\n        initialView: {\n            lat: 4.6288702,\n            lng: -74.1193724,\n            zoom: 11\n        },\n        clusterMarkers: {\n            enable: true,\n            config: {}\n        },\n        layers: LEAFLET_MAP_LAYERS,\n        mapOptions: {\n            positionControl: true,\n            layers: [LEAFLET_MAP_LAYERS['Mapbox Street']],\n            zoomControl: false\n        },\n        layersOptions: {\n            position: 'topright'\n        }\n    }\n                        \n                    \n                        \n                            \n                                    Definido en src/map/leaflet/main.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \naddMarker(latLng: LatLng, id: any)\n                \n            \n\n\n            \n                \n                    Definido en src/map/leaflet/main.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    latLng\n                                    \n                                                LatLng\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            centerPoint\n                        \n                        \n                    \n                \n            \n            \n                \ncenterPoint(options: CenterPoint)\n                \n            \n\n\n            \n                \n                    Definido en src/map/leaflet/main.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CenterPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fitMarkersBounds\n                        \n                        \n                    \n                \n            \n            \n                \nfitMarkersBounds(padding?: LeafletPadding, flyTo?: boolean)\n                \n            \n\n\n            \n                \n                    Definido en src/map/leaflet/main.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    padding\n                                    \n                                                LeafletPadding\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                                \n                                    flyTo\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initMarkerCluster\n                        \n                        \n                    \n                \n            \n            \n                \ninitMarkerCluster()\n                \n            \n\n\n            \n                \n                    Definido en src/map/leaflet/main.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            panTo\n                        \n                        \n                    \n                \n            \n            \n                \npanTo(latlng: L.LatLng, offset?: L.PointExpression, options?: L.ZoomPanOptions)\n                \n            \n\n\n            \n                \n                    Definido en src/map/leaflet/main.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    latlng\n                                    \n                                                L.LatLng\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offset\n                                    \n                                            L.PointExpression\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            L.ZoomPanOptions\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setView\n                        \n                        \n                    \n                \n            \n            \n                \nsetView(latlng: L.LatLng, targetZoom: number, offset?: L.PointExpression, options?: L.ZoomPanOptions)\n                \n            \n\n\n            \n                \n                    Definido en src/map/leaflet/main.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    latlng\n                                    \n                                                L.LatLng\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetZoom\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offset\n                                    \n                                            L.PointExpression\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            L.ZoomPanOptions\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport '@sersol/leaflet-plugins/leaflet-fullscreen';\nimport '@sersol/leaflet-plugins/leaflet-mouseposition';\nimport { mergeObjs } from '../../utils/object';\nimport { hasValue } from '../../utils/check';\nimport { LeafletMapOptions, LeafletPadding } from './types';\nimport { CenterPoint, LatLng } from '../types';\nimport { LEAFLET_MAP_LAYERS } from './providers';\n\nexport class LeafletMap {\n    map: L.Map;\n    markers: any = {};\n    markerCluster: L.MarkerClusterGroup;\n    layerControl: L.Control.Layers;\n    options: LeafletMapOptions = {\n        container: 'leaflet-map',\n        initialView: {\n            lat: 4.6288702,\n            lng: -74.1193724,\n            zoom: 11\n        },\n        clusterMarkers: {\n            enable: true,\n            config: {}\n        },\n        layers: LEAFLET_MAP_LAYERS,\n        mapOptions: {\n            positionControl: true,\n            layers: [LEAFLET_MAP_LAYERS['Mapbox Street']],\n            zoomControl: false\n        },\n        layersOptions: {\n            position: 'topright'\n        }\n    };\n\n    constructor(options: LeafletMapOptions) {\n\n        mergeObjs(this.options, options);\n\n        this.map = new L.Map(this.options.container, this.options.mapOptions);\n\n        this.layerControl = new L.Control.Layers(this.options.layers, null, this.options.layersOptions);\n        this.map.addControl(new L.Control.MousePosition(this.options.mousePositionOptions));\n        this.map.addControl(this.layerControl);\n        this.map.addControl(new L.Control.Fullscreen(this.options.fullscreen));\n        this.map.addControl(new L.Control.Zoom(this.options.zoom));\n\n        this.map.setView([this.options.initialView.lat, this.options.initialView.lng], this.options.initialView.zoom);\n\n        // Create cluster and scope\n        if (this.options.clusterMarkers.enable) {\n            this.initMarkerCluster();\n        }\n\n    }\n\n    initMarkerCluster() {\n        if (L.MarkerClusterGroup) {\n            this.markerCluster = new L.MarkerClusterGroup([], this.options.clusterMarkers.config);\n            this.map.addLayer(this.markerCluster);\n        }\n    }\n\n    fitMarkersBounds(padding?: LeafletPadding, flyTo?: boolean) {\n\n        if (hasValue(this.markers)) {\n\n            const groupWrapper = [];\n\n            // tslint:disable-next-line: forin\n            for (const key in this.markers) {\n                groupWrapper.push(this.markers[key]);\n            }\n\n            if (hasValue(groupWrapper)) {\n\n                const pad: LeafletPadding = {\n                    paddingTopLeft: {\n                        x: 0,\n                        y: 0\n                    },\n                    paddingBottomRight: {\n                        x: 0,\n                        y: 0\n                    }\n                };\n\n                mergeObjs(pad, padding);\n\n                const group = L.featureGroup(groupWrapper);\n\n                if (flyTo) {\n                    this.map.flyToBounds(group.getBounds(), {\n                        duration: 0.5,\n                        paddingTopLeft: [pad.paddingTopLeft.x, pad.paddingTopLeft.y],\n                        paddingBottomRight: [pad.paddingBottomRight.x, pad.paddingBottomRight.y]\n                    });\n                } else {\n                    this.map.fitBounds(group.getBounds(), {\n                        paddingTopLeft: [pad.paddingTopLeft.x, pad.paddingTopLeft.y],\n                        paddingBottomRight: [pad.paddingBottomRight.x, pad.paddingBottomRight.y]\n                    });\n                }\n            }\n\n        }\n\n    }\n\n    addMarker(latLng: LatLng, id: any) {\n\n        this.markers[id] = L.marker([latLng.lat, latLng.lng]);\n\n        if (this.options.clusterMarkers.enable) {\n            this.markerCluster.addLayer(this.markers[id]);\n        } else {\n            this.markers[id].addTo(this.map);\n        }\n\n        return this.markers[id];\n    }\n\n    panTo(latlng: L.LatLng, offset?: L.PointExpression, options?: L.ZoomPanOptions) {\n\n        if (hasValue(offset)) {\n            const x = this.map.latLngToContainerPoint(latlng).x - offset[0];\n            const y = this.map.latLngToContainerPoint(latlng).y - offset[1];\n            const point = this.map.containerPointToLatLng([x, y]);\n            return this.map.setView(point, this.map.getZoom(), options);\n        } else {\n            return this.map.setView(latlng, this.map.getZoom(), options);\n        }\n    }\n\n    setView(latlng: L.LatLng, targetZoom: number, offset?: L.PointExpression, options?: L.ZoomPanOptions) {\n\n        if (hasValue(offset)) {\n            const targetPoint = this.map.project(latlng, targetZoom).subtract(offset);\n            const targetLatLng = this.map.unproject(targetPoint, targetZoom);\n            return this.map.setView(targetLatLng, targetZoom, options);\n        } else {\n            return this.map.setView(latlng, targetZoom, options);\n        }\n\n    }\n\n    centerPoint(options: CenterPoint) {\n        this.map.flyTo([options.lat, options.lng], options.preserve_zoom ? this.map.getZoom() : 19, {\n            duration: 0.5\n        });\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/LeafletMapOptions.html":{"url":"interfaces/LeafletMapOptions.html","title":"interface - LeafletMapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LeafletMapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/map/leaflet/types.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        clusterMarkers\n                                \n                                \n                                        container\n                                \n                                \n                                            Opcional\n                                        fullscreen\n                                \n                                \n                                            Opcional\n                                        initialView\n                                \n                                \n                                            Opcional\n                                        layers\n                                \n                                \n                                            Opcional\n                                        layersOptions\n                                \n                                \n                                            Opcional\n                                        mapOptions\n                                \n                                \n                                            Opcional\n                                        mousePositionOptions\n                                \n                                \n                                            Opcional\n                                        zoom\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        clusterMarkers\n                                    \n                                \n                                \n                                    \n                                        clusterMarkers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullscreen\n                                    \n                                \n                                \n                                    \n                                        fullscreen:     L.Control.FullscreenOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     L.Control.FullscreenOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialView\n                                    \n                                \n                                \n                                    \n                                        initialView:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layers\n                                    \n                                \n                                \n                                    \n                                        layers:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layersOptions\n                                    \n                                \n                                \n                                    \n                                        layersOptions:     L.Control.LayersOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     L.Control.LayersOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapOptions\n                                    \n                                \n                                \n                                    \n                                        mapOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mousePositionOptions\n                                    \n                                \n                                \n                                    \n                                        mousePositionOptions:     L.Control.MousePositionOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     L.Control.MousePositionOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                    \n                                \n                                \n                                    \n                                        zoom:     L.Control.ZoomOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     L.Control.ZoomOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport '@sersol/leaflet-plugins/leaflet-fullscreen';\n\nexport interface LeafletMapOptions {\n    container: string;\n    initialView?: {\n        lat?: number;\n        lng?: number;\n        zoom?: number;\n    };\n    clusterMarkers?: {\n        enable?: boolean;\n        config?: L.MarkerClusterGroupOptions;\n    };\n    layers?: any;\n    mapOptions?: {\n        positionControl?: boolean;\n        layers?: any[];\n        zoomControl: any\n    };\n    fullscreen?: L.Control.FullscreenOptions;\n    zoom?: L.Control.ZoomOptions;\n    layersOptions?: L.Control.LayersOptions;\n    mousePositionOptions?: L.Control.MousePositionOptions;\n}\n\nexport interface LeafletPadding {\n    paddingTopLeft?: {\n        x?: number;\n        y?: number;\n    };\n    paddingBottomRight?: {\n        x?: number;\n        y?: number;\n    };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/LeafletPadding.html":{"url":"interfaces/LeafletPadding.html","title":"interface - LeafletPadding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LeafletPadding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/map/leaflet/types.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        paddingBottomRight\n                                \n                                \n                                            Opcional\n                                        paddingTopLeft\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        paddingBottomRight\n                                    \n                                \n                                \n                                    \n                                        paddingBottomRight:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paddingTopLeft\n                                    \n                                \n                                \n                                    \n                                        paddingTopLeft:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport '@sersol/leaflet-plugins/leaflet-fullscreen';\n\nexport interface LeafletMapOptions {\n    container: string;\n    initialView?: {\n        lat?: number;\n        lng?: number;\n        zoom?: number;\n    };\n    clusterMarkers?: {\n        enable?: boolean;\n        config?: L.MarkerClusterGroupOptions;\n    };\n    layers?: any;\n    mapOptions?: {\n        positionControl?: boolean;\n        layers?: any[];\n        zoomControl: any\n    };\n    fullscreen?: L.Control.FullscreenOptions;\n    zoom?: L.Control.ZoomOptions;\n    layersOptions?: L.Control.LayersOptions;\n    mousePositionOptions?: L.Control.MousePositionOptions;\n}\n\nexport interface LeafletPadding {\n    paddingTopLeft?: {\n        x?: number;\n        y?: number;\n    };\n    paddingBottomRight?: {\n        x?: number;\n        y?: number;\n    };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/LongPressDirective.html":{"url":"directives/LongPressDirective.html","title":"directive - LongPressDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  LongPressDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/ui/long-press.directive.ts\n        \n\n\n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [longPress]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                longPressing\n                            \n                            \n                                    Private\n                                mouseX\n                            \n                            \n                                    Private\n                                mouseY\n                            \n                            \n                                    Private\n                                pressing\n                            \n                            \n                                    Private\n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                endPress\n                            \n                            \n                                loop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                pressDuration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Salidas\n                    \n                \n                \n                    \n                        \n                            \n                                onLongPress\n                            \n                            \n                                onLongPressEnd\n                            \n                            \n                                onLongPressing\n                            \n                            \n                                onShortPress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Fijaciones de Host\n                    \n                \n                \n                    \n                        \n                            \n                                class.longpress\n                            \n                            \n                                class.press\n                            \n                        \n                    \n                \n\n                \n                    \n                        Escuchadores de Host\n                    \n                \n                \n                    \n                        \n                            \n                                mousedown\n                            \n                            \n                                mousemove\n                            \n                            \n                                mouseup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Entradas\n        \n            \n                \n                    \n                        \n                        pressDuration\n                    \n                \n                \n                    \n                        Valor por defecto : 500\n                    \n                \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:10\n                            \n                        \n            \n        \n\n            \n    Salidas\n        \n            \n                \n                    \n                        \n                        onLongPress\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLongPressEnd\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLongPressing\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onShortPress\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:12\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.longpress\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.press\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mousedown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Argumentos : '$event' \n                \n            \n            \n                \nmousedown(event: MouseEvent | TouchEvent)\n                \n            \n\n\n            \n                \n                    Definido en src/ui/long-press.directive.ts:31\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousemove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Argumentos : '$event' \n                \n            \n            \n                \nmousemove(event: MouseEvent | TouchEvent)\n                \n            \n\n\n            \n                \n                    Definido en src/ui/long-press.directive.ts:96\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Argumentos : '$event' \n                \n            \n            \n                \nmouseup(event: MouseEvent | TouchEvent)\n                \n            \n\n\n            \n                \n                    Definido en src/ui/long-press.directive.ts:86\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Definido en src/ui/long-press.directive.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endPress\n                        \n                        \n                    \n                \n            \n            \n                \nendPress()\n                \n            \n\n\n            \n                \n                    Definido en src/ui/long-press.directive.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loop\n                        \n                        \n                    \n                \n            \n            \n                \nloop(event)\n                \n            \n\n\n            \n                \n                    Definido en src/ui/long-press.directive.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            longPressing\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         boolean\n\n                        \n                    \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mouseX\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mouseY\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pressing\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         boolean\n\n                        \n                    \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/ui/long-press.directive.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: '[longPress]'\n})\nexport class LongPressDirective {\n\n    @Input() pressDuration = 500;\n\n    @Output() onShortPress: EventEmitter = new EventEmitter();\n    @Output() onLongPress: EventEmitter = new EventEmitter();\n    @Output() onLongPressing: EventEmitter = new EventEmitter();\n    @Output() onLongPressEnd: EventEmitter = new EventEmitter();\n\n    private pressing: boolean;\n    private longPressing: boolean;\n    private timeout: any;\n    private mouseX: number;\n    private mouseY: number;\n\n    @HostBinding('class.press')\n    get press() { return this.pressing; }\n\n    @HostBinding('class.longpress')\n    get longPress() { return this.longPressing; }\n\n    @HostListener('mousedown', ['$event'])\n    @HostListener('touchstart', ['$event'])\n    onMouseDown(event: MouseEvent | TouchEvent) {\n\n        // don't do right/middle clicks\n        if (event instanceof MouseEvent && event.button !== 0) { return; }\n\n        if (event instanceof MouseEvent) {\n            this.mouseX = event.clientX;\n            this.mouseY = event.clientY;\n        } else if (event instanceof TouchEvent) {\n            this.mouseX = event.touches[0].clientX;\n            this.mouseY = event.touches[0].clientY;\n        }\n\n        this.pressing = true;\n        this.longPressing = false;\n\n        this.timeout = setTimeout(() => {\n            this.longPressing = true;\n            this.onLongPress.emit(event);\n            this.loop(event);\n            event.preventDefault();\n        }, this.pressDuration);\n\n        this.loop(event);\n    }\n\n    loop(event) {\n        if (this.longPressing) {\n            this.timeout = setTimeout(() => {\n                this.onLongPressing.emit(event);\n                this.loop(event);\n            }, 50);\n        }\n    }\n\n    dismiss() {\n        clearTimeout(this.timeout);\n        this.longPressing = false;\n        this.pressing = false;\n    }\n\n    endPress() {\n        clearTimeout(this.timeout);\n\n        if (!this.longPressing) {\n            this.onShortPress.emit();\n        }\n\n        this.longPressing = false;\n        this.pressing = false;\n        this.onLongPressEnd.emit(true);\n    }\n\n    @HostListener('mouseup', ['$event'])\n    @HostListener('touchend', ['$event'])\n    onMouseUp(event: MouseEvent | TouchEvent) {\n\n        // don't do right/middle clicks\n        if ((event as MouseEvent).button !== 0) { return; }\n\n        this.endPress();\n    }\n\n    @HostListener('mousemove', ['$event'])\n    @HostListener('touchmove', ['$event'])\n    onMouseMove(event: MouseEvent | TouchEvent) {\n\n        if (this.pressing && !this.longPressing) {\n            let xThres = false;\n            let yThres = false;\n\n            if (event instanceof MouseEvent) {\n                xThres = (event.clientX - this.mouseX) > 10;\n                yThres = (event.clientY - this.mouseY) > 10;\n            } else if (event instanceof TouchEvent) {\n                xThres = (event.touches[0].clientX - this.mouseX) > 10;\n                yThres = (event.touches[0].clientY - this.mouseY) > 10;\n            }\n\n            if (xThres || yThres) {\n                this.dismiss();\n            }\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/map/map.service.ts\n        \n\n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                checkLatLog\n                            \n                            \n                                cutPrecision\n                            \n                            \n                                distancePoints\n                            \n                            \n                                getCurrentPosition\n                            \n                            \n                                middlePoint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkLatLog\n                        \n                        \n                    \n                \n            \n            \n                \ncheckLatLog(lat: number, lng: number)\n                \n            \n\n\n            \n                \n                    Definido en src/map/map.service.ts:44\n                \n            \n\n\n            \n                \n                    Verifica si la latitud y longitud son válidas\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    lat\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Latitud\n\n                                    \n                                \n                                \n                                    lng\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Longitud\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cutPrecision\n                        \n                        \n                    \n                \n            \n            \n                \ncutPrecision(obj: any, precision: number)\n                \n            \n\n\n            \n                \n                    Definido en src/map/map.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            distancePoints\n                        \n                        \n                    \n                \n            \n            \n                \ndistancePoints(options: LatLng2LatLngOptions)\n                \n            \n\n\n            \n                \n                    Definido en src/map/map.service.ts:52\n                \n            \n\n\n            \n                \n                    Obtiene la distancia en km entre dos puntos LatLng\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                LatLng2LatLngOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentPosition()\n                \n            \n\n\n            \n                \n                    Definido en src/map/map.service.ts:22\n                \n            \n\n\n            \n                \n                    Metodo para obtener la posisión GPS actual usando Observable\n\n\n                    \n                        Ejemplo :\n                        \n                            this.mapService.getCurrentPosition().pipe(take(1)).subscribe({\nnext(position) {\nconsole.log(&#39;Current Position: &#39;, position);\n},\nerror(msg) {\nconsole.log(&#39;Error Getting Location: &#39;, msg);\n}\n});\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            middlePoint\n                        \n                        \n                    \n                \n            \n            \n                \nmiddlePoint(options: LatLng2LatLngOptions)\n                \n            \n\n\n            \n                \n                    Definido en src/map/map.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                LatLng2LatLngOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     false | { longitude: any; Latitude: any; angle: number; distance: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LatLng2LatLngOptions } from './types';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MapService {\n\n    /**\n     * Metodo para obtener la posisión GPS actual usando Observable\n     * @example\n     * this.mapService.getCurrentPosition().pipe(take(1)).subscribe({\n     *      next(position) {\n     *        console.log('Current Position: ', position);\n     *      },\n     *      error(msg) {\n     *        console.log('Error Getting Location: ', msg);\n     *      }\n     *   });\n     */\n    getCurrentPosition(): Observable {\n\n        return new Observable((observer) => {\n\n            // Simple geolocation API check provides values to publish\n            if ('geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition((position: Position) => {\n                    observer.next(position);\n                }, (error: PositionError) => {\n                    observer.error(error);\n                });\n            } else {\n                observer.error('Geolocation not available');\n            }\n        });\n    }\n\n    /**\n     * Verifica si la latitud y longitud son válidas\n     * @param lat Latitud\n     * @param lng Longitud\n     */\n    checkLatLog(lat: number, lng: number) {\n        return (-90 = lat) && (-180 = lng);\n    }\n\n    /**\n     * Obtiene la distancia en km entre dos puntos LatLng\n     * @param lon1 Latitud\n     */\n    distancePoints(options: LatLng2LatLngOptions) {\n        // tslint:disable-next-line: max-line-length\n        const a = Math.sin(((options.to.lat - options.from.lat) * Math.PI / 180) / 2) * Math.sin(((options.to.lat - options.from.lat) * Math.PI / 180) / 2) + Math.cos(options.from.lat * Math.PI / 180) * Math.cos(options.to.lat * Math.PI / 180) * Math.sin(((options.to.lng - options.from.lng) * Math.PI / 180) / 2) * Math.sin(((options.to.lng - options.from.lng) * Math.PI / 180) / 2);\n        return (6371 * (2 * Math.asin(Math.sqrt(a)))) * 1.60934;\n    }\n\n    cutPrecision(obj: any, precision: number) {\n        if ('number' === typeof obj[0]) {\n            for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/OpenIdClient.html":{"url":"interfaces/OpenIdClient.html","title":"interface - OpenIdClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenIdClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/open-id/Iopen-id-client.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        credential_id\n                                \n                                \n                                        id\n                                \n                                \n                                            Opcional\n                                        scopes\n                                \n                                \n                                        secret\n                                \n                                \n                                            Opcional\n                                        third_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        credential_id\n                                    \n                                \n                                \n                                    \n                                        credential_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes\n                                    \n                                \n                                \n                                    \n                                        scopes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        third_id\n                                    \n                                \n                                \n                                    \n                                        third_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OpenIdClient {\n    id: string;\n    third_id?: string;\n    credential_id?: string;\n    secret: string;\n    scopes?: string;\n}\n\n/**\n * @description\n * Interface que representa al objeto OpenIdData usado para contener los permisos del usuario\n */\nexport interface OpenIdData {\n  claims: string[];\n  isSuperUser: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/OpenIdData.html":{"url":"interfaces/OpenIdData.html","title":"interface - OpenIdData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenIdData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/open-id/Iopen-id-client.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        claims\n                                \n                                \n                                        isSuperUser\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        claims\n                                    \n                                \n                                \n                                    \n                                        claims:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuperUser\n                                    \n                                \n                                \n                                    \n                                        isSuperUser:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OpenIdClient {\n    id: string;\n    third_id?: string;\n    credential_id?: string;\n    secret: string;\n    scopes?: string;\n}\n\n/**\n * @description\n * Interface que representa al objeto OpenIdData usado para contener los permisos del usuario\n */\nexport interface OpenIdData {\n  claims: string[];\n  isSuperUser: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/PinInputComponent.html":{"url":"components/PinInputComponent.html","title":"component - PinInputComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  PinInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/form/pin/pin-input.component.ts\n\n\n\n\n    \n        Implementa\n    \n    \n                    AfterViewInit\n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => PinInputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                pin-input\n            \n\n\n\n\n            \n                templateUrl\n                ./pin-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                codeInputs\n                            \n                            \n                                    Private\n                                inputs\n                            \n                            \n                                inputsList\n                            \n                            \n                                isDisabled\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canInputValue\n                            \n                            \n                                generateValue\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                onClick\n                            \n                            \n                                onInput\n                            \n                            \n                                    Async\n                                onKeydown\n                            \n                            \n                                onTouch\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Opcional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                codeLength\n                            \n                            \n                                isCodeHidden\n                            \n                            \n                                onlyNumber\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Fijaciones de Host\n                    \n                \n                \n                    \n                        \n                            \n                                class.show\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        codeLength\n                    \n                \n                \n                    \n                        Valor por defecto : 4\n                    \n                \n                        \n                            \n                                    Definido en src/form/pin/pin-input.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isCodeHidden\n                    \n                \n                \n                    \n                        Valor por defecto : false\n                    \n                \n                        \n                            \n                                    Definido en src/form/pin/pin-input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyNumber\n                    \n                \n                \n                    \n                        Valor por defecto : true\n                    \n                \n                        \n                            \n                                    Definido en src/form/pin/pin-input.component.ts:25\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.show\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : false\n                        \n                    \n                        \n                            \n                                    Definido en src/form/pin/pin-input.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            canInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canInputValue(value: any)\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateValue\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateValue()\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :     string | number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(_: any)\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick(e: any)\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInput\n                        \n                        \n                    \n                \n            \n            \n                \nonInput(e: any, i: number)\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onKeydown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onKeydown(e: KeyboardEvent, i: number)\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTouch\n                        \n                        \n                    \n                \n            \n            \n                \nonTouch()\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Opcional\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Definido en src/form/pin/pin-input.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     any[]\n\n                        \n                    \n                        \n                            \n                                    Definido en src/form/pin/pin-input.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     HTMLInputElement[]\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/form/pin/pin-input.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decoradores : \n                            \n                            \n                                @ViewChildren('input')\n                            \n                        \n                    \n                        \n                            \n                                    Definido en src/form/pin/pin-input.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : false\n                        \n                    \n                        \n                            \n                                    Definido en src/form/pin/pin-input.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                        \n                            \n                                    Definido en src/form/pin/pin-input.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/form/pin/pin-input.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, forwardRef, HostBinding, Input, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { hasValue } from '../../utils/check';\n\n@Component({\n    selector: 'pin-input',\n    templateUrl: './pin-input.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => PinInputComponent),\n            multi: true\n        }\n    ]\n})\nexport class PinInputComponent implements AfterViewInit, OnInit, ControlValueAccessor {\n\n    @ViewChildren('input') inputsList: QueryList;\n    @HostBinding('class.show') show = false;\n\n    private inputs: HTMLInputElement[] = [];\n\n    @Input() codeLength = 4;\n    @Input() onlyNumber = true;\n    @Input() isCodeHidden = false;\n\n    codeInputs: any[];\n    value = [];\n    type: string;\n    isDisabled = false;\n\n    writeValue(obj: any) {\n        if (hasValue(obj)) {\n            this.value = obj.toString().split('');\n        }\n    }\n\n    ngOnInit() {\n        this.type = (this.isCodeHidden) ? 'password' : 'text';\n        this.codeInputs = Array(this.codeLength);\n    }\n\n    ngAfterViewInit() {\n        this.inputsList.forEach((item, i) => {\n\n            if (hasValue(this.value[i])) {\n                (item.nativeElement as HTMLInputElement).value = this.value[i];\n            }\n\n            this.inputs.push(item.nativeElement);\n        });\n    }\n\n    private canInputValue(value: any): boolean {\n        if (!hasValue(value)) {\n            return true;\n        }\n\n        if (this.onlyNumber) {\n            return /^[0-9]+$/.test(value.toString());\n        } else {\n            return /^[0-9a-zA-Z]+$/.test(value.toString());\n        }\n    }\n\n    generateValue(): string | number {\n        const values: string[] = [];\n\n        this.inputs.forEach((input) => {\n\n            if (hasValue(input.value)) {\n                values.push(input.value.trim());\n            }\n\n        });\n\n        if (values.length === this.codeLength) {\n            return values.join('');\n        } else {\n            return null;\n        }\n\n    }\n\n    onInput(e: any, i: number) {\n        const next = i + 1;\n        const target = e.target;\n        const value = e.data || target.value;\n\n        this.onTouch();\n\n        if (!this.canInputValue(value)) {\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n\n        if (next = 0) {\n\n                setTimeout(() => {\n                    this.inputs[prev].focus();\n                });\n            }\n\n            return;\n\n        }\n\n        if (!this.canInputValue(e.key.toLowerCase())) {\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n\n        if (hasValue(value)) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (next \n    \n\n    \n        \n\n    \n\n     -->\n\n\n\n    \n\n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         -->'\n    var COMPONENTS = [{'name': 'AddressColComponent', 'selector': 'address-col-input'},{'name': 'PinInputComponent', 'selector': 'pin-input'},{'name': 'SerFilterComponent', 'selector': 'ser-filter'},{'name': 'SerFormElementComponent', 'selector': 'ser-form-element'},{'name': 'SerSelectComponent', 'selector': 'ser-select'},{'name': 'VirtualScrollerComponent', 'selector': 'virtual-scroller,[virtualScroller]'}];\n    var DIRECTIVES = [{'name': 'BgImageDirective', 'selector': '[bgImage]'},{'name': 'CopyToClipboardDirective', 'selector': '[copyToClipboard]'},{'name': 'FinishTypingDirective', 'selector': '[finishTyping]'},{'name': 'GrowOnInputDirective', 'selector': '[growOnInput]'},{'name': 'LongPressDirective', 'selector': '[longPress]'},{'name': 'SDBadgeDirective', 'selector': '[sd-badge]'},{'name': 'SDBadgeItemDirective', 'selector': '[sd-badge-item]'},{'name': 'SDItemDirective', 'selector': '[sd-item]'},{'name': 'SerControlDirective', 'selector': '[serControl]'},{'name': 'SerErrorDirective', 'selector': '[serError]'},{'name': 'SerErrorsDirective', 'selector': '[serErrors]'},{'name': 'ToggleClassDirective', 'selector': '[toggleClass]'},{'name': 'WhenScrolledDirective', 'selector': '[whenScrolled]'}];\n    var ACTUAL_COMPONENT = {'name': 'PinInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/PrefersColorSchemeService.html":{"url":"injectables/PrefersColorSchemeService.html","title":"injectable - PrefersColorSchemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  PrefersColorSchemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/prefers-color-scheme/prefers-color-scheme.service.ts\n        \n\n\n\n            \n                Ejemplo\n            \n            \n                        \n                            constructor(prefersColorSchemeService: PrefersColorSchemeService) { }\n\nthis.prefersColorSchemeService.init(); // Setea el esquema inicial\nthis.prefersColorSchemeService.watch(); // Observa cambio de esquema en OS\n                        \n            \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _Scheme\n                            \n                            \n                                    Private\n                                _SchemeDarkClassName\n                            \n                            \n                                    Private\n                                _SchemeLightClassName\n                            \n                            \n                                dark\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                enableDark\n                            \n                            \n                                enableLight\n                            \n                            \n                                get\n                            \n                            \n                                init\n                            \n                            \n                                toggle\n                            \n                            \n                                watch\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accesorios\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Scheme\n                                \n                                \n                                    SchemeLightClassName\n                                \n                                \n                                    SchemeDarkClassName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:40\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableDark\n                        \n                        \n                    \n                \n            \n            \n                \nenableDark()\n                \n            \n\n\n            \n                \n                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableLight\n                        \n                        \n                    \n                \n            \n            \n                \nenableLight()\n                \n            \n\n\n            \n                \n                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        Esquema de color\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            watch\n                        \n                        \n                    \n                \n            \n            \n                \nwatch()\n                \n            \n\n\n            \n                \n                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _Scheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     MediaQueryList\n\n                        \n                    \n                        \n                            \n                                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _SchemeDarkClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 'scheme-dark'\n                        \n                    \n                        \n                            \n                                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _SchemeLightClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 'scheme-light'\n                        \n                    \n                        \n                            \n                                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dark\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : false\n                        \n                    \n                        \n                            \n                                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accesorios\n    \n        \n            \n                \n                    \n                        \n                        Scheme\n                    \n                \n\n                \n                    \n                        getScheme()\n                    \n                \n                            \n                                \n                                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:17\n                                \n                            \n\n                \n                    \n                        setScheme(value)\n                    \n                \n                            \n                                \n                                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        SchemeLightClassName\n                    \n                \n\n                \n                    \n                        getSchemeLightClassName()\n                    \n                \n                            \n                                \n                                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:25\n                                \n                            \n\n                \n                    \n                        setSchemeLightClassName(value)\n                    \n                \n                            \n                                \n                                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        SchemeDarkClassName\n                    \n                \n\n                \n                    \n                        getSchemeDarkClassName()\n                    \n                \n                            \n                                \n                                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:33\n                                \n                            \n\n                \n                    \n                        setSchemeDarkClassName(value)\n                    \n                \n                            \n                                \n                                    Definido en src/prefers-color-scheme/prefers-color-scheme.service.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * @description\n * Clase para obtener, observar y cambiar el esquema de color claro/oscuro\n * @example\n * constructor(prefersColorSchemeService: PrefersColorSchemeService) { }\n *\n * this.prefersColorSchemeService.init(); // Setea el esquema inicial\n * this.prefersColorSchemeService.watch(); // Observa cambio de esquema en OS\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class PrefersColorSchemeService {\n    private _Scheme: MediaQueryList;\n    public get Scheme(): MediaQueryList {\n        return this._Scheme;\n    }\n    public set Scheme(value: MediaQueryList) {\n        this._Scheme = value;\n    }\n\n    private _SchemeLightClassName = 'scheme-light';\n    public get SchemeLightClassName() {\n        return this._SchemeLightClassName;\n    }\n    public set SchemeLightClassName(value) {\n        this._SchemeLightClassName = value;\n    }\n\n    private _SchemeDarkClassName = 'scheme-dark';\n    public get SchemeDarkClassName() {\n        return this._SchemeDarkClassName;\n    }\n    public set SchemeDarkClassName(value) {\n        this._SchemeDarkClassName = value;\n    }\n\n    dark = false;\n\n    constructor() {\n        this.Scheme = window.matchMedia('(prefers-color-scheme: dark)');\n    }\n\n    /**\n     * @description\n     * Inicializar el esquema de color\n     * @usageNotes\n     * Usarse unicamente si se desea aplicar el esquema de color acorde al esquema de color del sistema operativo\n     */\n    init() {\n        if (this.Scheme.matches) {\n            this.enableDark();\n        } else {\n            this.enableLight();\n        }\n    }\n\n    /**\n     * @description\n     * Obtener el esquema de color actual del SO\n     * @returns {string} Esquema de color\n     */\n    get(): string {\n        if (this.Scheme.matches) {\n            return 'dark';\n        } else {\n            return 'light';\n        }\n    }\n\n    /**\n     * @description\n     * Agrega SchemeDarkClassName y remueve SchemeLightClassName a la etiqueta body\n     */\n    enableDark() {\n        const body = document.getElementsByTagName('body')[0];\n\n        if (body.classList.contains(this.SchemeLightClassName)) {\n            body.classList.remove(this.SchemeLightClassName);\n        }\n\n        body.classList.add(this.SchemeDarkClassName);\n\n        this.dark = true;\n    }\n\n    /**\n     * @description\n     * Agrega SchemeLightClassName y remueve SchemeDarkClassName a la etiqueta body\n     */\n    enableLight() {\n        const body = document.getElementsByTagName('body')[0];\n\n        if (body.classList.contains(this.SchemeDarkClassName)) {\n            body.classList.remove(this.SchemeDarkClassName);\n        }\n\n        body.classList.add(this.SchemeLightClassName);\n\n        this.dark = false;\n    }\n\n    /**\n     * @description\n     * Alternar entre tema oscuro ó claro\n     * @usageNotes\n     * Usarse unicamente si se desea aplicar el esquema de color acorde al esquema de color del sistema operativo\n     */\n    toggle() {\n        if (this.dark) {\n            this.enableLight();\n        } else {\n            this.enableDark();\n        }\n    }\n\n    /**\n     * @description\n     * Habilita el cambio automatico de esquema de color según el cambio de esquema de color del SO\n     */\n    watch() {\n\n        const setScheme = (ev: MediaQueryListEvent) => {\n            if (ev.matches) {\n                console.log('Changed to dark mode');\n                this.enableDark();\n            } else {\n                console.log('Changed to light mode');\n                this.enableLight();\n            }\n        };\n\n        if (typeof this.Scheme.onchange === 'function') {\n\n            this.Scheme.onchange = setScheme;\n\n        } else if (typeof this.Scheme.addEventListener === 'function') {\n\n            this.Scheme.addEventListener('change', setScheme);\n\n            // tslint:disable-next-line: deprecation\n        } else if (typeof this.Scheme.addListener === 'function') {\n\n            // tslint:disable-next-line: deprecation\n            this.Scheme.addListener(setScheme);\n\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/RandomPasswordOps.html":{"url":"interfaces/RandomPasswordOps.html","title":"interface - RandomPasswordOps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RandomPasswordOps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/utils/random.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        length\n                                \n                                \n                                            Opcional\n                                        lettersLowerCase\n                                \n                                \n                                            Opcional\n                                        lettersUpperCase\n                                \n                                \n                                            Opcional\n                                        numbers\n                                \n                                \n                                            Opcional\n                                        specialChars\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tamaño de la contraseña\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lettersLowerCase\n                                    \n                                \n                                \n                                    \n                                        lettersLowerCase:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Habilita si se incluyen letras en minúsculas\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lettersUpperCase\n                                    \n                                \n                                \n                                    \n                                        lettersUpperCase:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Habilita si se incluyen letras en mayúsculas\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numbers\n                                    \n                                \n                                \n                                    \n                                        numbers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    *\nHabilita si se incluyen números\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        specialChars\n                                    \n                                \n                                \n                                    \n                                        specialChars:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Habilita si se incluyen caracteres especiales\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { mergeObjs } from './object';\n\n/**\n * @description\n * Función para generar un código GUID aleatorio\n * @returns {string}\n */\nexport function guid(): string {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\n/**\n * @description\n * Función para generar un código alfanúmerico único\n * @returns {string}\n */\nexport function uniqueId(): string {\n  const today = new Date();\n  return s4() + s4() + s4() + s4() + s4() + s4() + s4() + s4() + Math.floor((today.getTime() * Math.random()));\n}\n\nfunction s4(): string {\n  return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n}\n\n/**\n * @description\n * Función para obtener un número aleatorio\n * @param {number} min Número mínimo\n * @param {number} max Número máximo\n * @returns {number}\n */\nexport function getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\nexport interface RandomPasswordOps {\n    /**\n     * Tamaño de la contraseña\n     */\n    length?: number;\n\n    /***\n     * Habilita si se incluyen números\n     */\n    numbers?: boolean;\n\n    /**\n     * Habilita si se incluyen caracteres especiales\n     */\n    specialChars?: boolean;\n\n    /**\n     * Habilita si se incluyen letras en mayúsculas\n     */\n    lettersUpperCase?: boolean;\n\n    /**\n     * Habilita si se incluyen letras en minúsculas\n     */\n    lettersLowerCase?: boolean;\n}\n\n/**\n * Función para generar contraseñas aleatorias\n * @param options Parametros de contraseña\n */\nexport function generatePassword(options?: RandomPasswordOps) {\n\n    const defaultOptions: RandomPasswordOps = {\n        length: 8,\n        numbers: true,\n        specialChars: false,\n        lettersLowerCase: true,\n        lettersUpperCase: true\n    };\n\n    mergeObjs(defaultOptions, options);\n\n    let charset = '';\n\n    if (defaultOptions?.numbers) {\n        charset += '0123456789';\n    }\n\n    if (defaultOptions?.lettersLowerCase) {\n        charset += 'abcdefghijklmnopqrstuvwxyz';\n    }\n\n    if (defaultOptions?.lettersUpperCase) {\n        charset += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    }\n\n    if (defaultOptions?.specialChars) {\n        charset += '!#$%&\\()*+,-./:;?@^[\\\\]^_`{|}~';\n    }\n\n    let retVal = '';\n\n    for (let i = 0, n = charset.length; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/S3.html":{"url":"interfaces/S3.html","title":"interface - S3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  S3\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/aws/Iaws.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucket\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AwsData {\n  s3: S3;\n}\n\nexport interface S3 {\n  bucket: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/SDBadgeDirective.html":{"url":"directives/SDBadgeDirective.html","title":"directive - SDBadgeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  SDBadgeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/select/ser-select-menu-item.directive.ts\n        \n\n\n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [sd-badge]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Definido en src/form/select/ser-select-menu-item.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Definido en src/form/select/ser-select-menu-item.directive.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { TemplateRef, Directive } from '@angular/core';\n\n@Directive({\n  selector: '[sd-item]'\n})\nexport class SDItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge]'\n})\nexport class SDBadgeDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge-item]'\n})\nexport class SDBadgeItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/SDBadgeItemDirective.html":{"url":"directives/SDBadgeItemDirective.html","title":"directive - SDBadgeItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  SDBadgeItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/select/ser-select-menu-item.directive.ts\n        \n\n\n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [sd-badge-item]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Definido en src/form/select/ser-select-menu-item.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Definido en src/form/select/ser-select-menu-item.directive.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { TemplateRef, Directive } from '@angular/core';\n\n@Directive({\n  selector: '[sd-item]'\n})\nexport class SDItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge]'\n})\nexport class SDBadgeDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge-item]'\n})\nexport class SDBadgeItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/SDItemDirective.html":{"url":"directives/SDItemDirective.html","title":"directive - SDItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  SDItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/select/ser-select-menu-item.directive.ts\n        \n\n\n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [sd-item]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Definido en src/form/select/ser-select-menu-item.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Definido en src/form/select/ser-select-menu-item.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { TemplateRef, Directive } from '@angular/core';\n\n@Directive({\n  selector: '[sd-item]'\n})\nexport class SDItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge]'\n})\nexport class SDBadgeDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n@Directive({\n  selector: '[sd-badge-item]'\n})\nexport class SDBadgeItemDirective {\n    constructor(public template: TemplateRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/SerControlDirective.html":{"url":"directives/SerControlDirective.html","title":"directive - SerControlDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  SerControlDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/ser-form-element/ser-control.directive.ts\n        \n\n\n            \n                Implementa\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [serControl]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                dirty\n                            \n                            \n                                disabled\n                            \n                            \n                                focus\n                            \n                            \n                                hasValue\n                            \n                            \n                                invalid\n                            \n                            \n                                observer\n                            \n                            \n                                pending\n                            \n                            \n                                valid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        Escuchadores de Host\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Definido en src/form/ser-form-element/ser-control.directive.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            blur\n                        \n                        \n                    \n                \n            \n            \n                \nblur()\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-form-element/ser-control.directive.ts:28\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-form-element/ser-control.directive.ts:23\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-form-element/ser-control.directive.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-form-element/ser-control.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeValue\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeValue(value: any)\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-form-element/ser-control.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dirty\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : false\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-control.directive.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : false\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-control.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : false\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-control.directive.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : false\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-control.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalid\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : false\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-control.directive.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-control.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : false\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-control.directive.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valid\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : false\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-control.directive.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, OnInit, OnDestroy } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { hasValue } from '../../utils/check';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[serControl]'\n})\nexport class SerControlDirective implements OnInit, OnDestroy {\n    disabled = false;\n    focus = false;\n    dirty = false;\n    valid = false;\n    invalid = false;\n    pending = false;\n    hasValue = false;\n    observer: Subscription;\n\n    constructor(private _ngControl: NgControl) { }\n\n    @HostListener('focus')\n    onFocus() {\n        this.focus = true;\n    }\n\n    @HostListener('blur')\n    onBlur() {\n        this.focus = false;\n    }\n\n    onChangeValue(value: any) {\n        this.hasValue = hasValue(value);\n        this.valid = this._ngControl?.control?.valid;\n        this.invalid = this._ngControl?.control?.invalid;\n        this.dirty = this._ngControl?.control?.dirty;\n        this.disabled = this._ngControl?.control?.disabled;\n        this.pending = this._ngControl?.control?.pending;\n    }\n\n    ngOnInit() {\n        this.onChangeValue(this._ngControl?.control?.value);\n\n        this.observer = this._ngControl?.control?.valueChanges.subscribe((value: any) => {\n            this.onChangeValue(value);\n        });\n    }\n\n    ngOnDestroy() {\n        this.observer?.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/SerErrorDirective.html":{"url":"directives/SerErrorDirective.html","title":"directive - SerErrorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  SerErrorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/ser-errors/ser-error.directive.ts\n        \n\n\n            \n                Implementa\n            \n            \n                            OnInit\n                            OnDestroy\n                            DoCheck\n            \n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [serError]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                _states\n                            \n                            \n                                errorNames\n                            \n                            \n                                rules\n                            \n                            \n                                states\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                serError\n                            \n                            \n                                when\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Fijaciones de Host\n                    \n                \n                \n                    \n                        \n                            \n                                hidden\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accesorios\n                        \n                    \n                    \n                        \n                            \n                                \n                                    serError\n                                \n                                \n                                    when\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_serErrors: SerErrorsDirective)\n                    \n                \n                        \n                            \n                                Definido en src/form/ser-errors/ser-error.directive.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        _serErrors\n                                                  \n                                                        \n                                                                    SerErrorsDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Entradas\n        \n            \n                \n                    \n                        \n                        serError\n                    \n                \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-error.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        when\n                    \n                \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-error.directive.ts:24\n                            \n                        \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : true\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-error.directive.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngDoCheck\n                        \n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-errors/ser-error.directive.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-errors/ser-error.directive.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-errors/ser-error.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _states\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     Subject\n\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-error.directive.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     string[]\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-error.directive.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rules\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     string[]\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-error.directive.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     Observable\n\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-error.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-error.directive.ts:33\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accesorios\n    \n        \n            \n                \n                    \n                        \n                        serError\n                    \n                \n\n\n                \n                    \n                        setserError(value)\n                    \n                \n                            \n                                \n                                    Definido en src/form/ser-errors/ser-error.directive.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        when\n                    \n                \n\n\n                \n                    \n                        setwhen(value)\n                    \n                \n                            \n                                \n                                    Definido en src/form/ser-errors/ser-error.directive.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parámetros :\n                                        \n                                            \n                                                \n                                                    Nombre\n                                                    Opcional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Devuelve :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, OnInit, OnDestroy, DoCheck, Inject, HostBinding, forwardRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/observable/combineLatest';\nimport { ErrorOptions } from './ser-errors';\nimport { SerErrorsDirective } from './ser-errors.directive';\nimport { toArray } from '../../utils/array';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[serError]'\n})\nexport class SerErrorDirective implements OnInit, OnDestroy, DoCheck {\n\n    @Input() set serError(value: ErrorOptions) {\n        this.errorNames = toArray(value);\n    }\n\n    @Input() set when(value: ErrorOptions) {\n        this.rules = toArray(value);\n    }\n\n    @HostBinding('hidden')\n    hidden = true;\n\n    rules: string[] = [];\n    errorNames: string[] = [];\n    subscription: Subscription;\n    _states: Subject;\n    states: Observable;\n\n    constructor(@Inject(forwardRef(() => SerErrorsDirective)) private _serErrors: SerErrorsDirective) { }\n\n    ngOnInit() {\n\n        this._states = new Subject();\n        this.states = this._states.asObservable().distinctUntilChanged();\n\n        const errors = this._serErrors.subject\n            .filter(Boolean)\n            .filter((obj: any) => !!~this.errorNames.indexOf(obj.errorName));\n\n        const states = this.states\n            .map(states => this.rules.every(rule => !!~states.indexOf(rule)));\n\n        this.subscription = Observable.combineLatest([states, errors])\n            .subscribe(([states, errors]) => {\n                this.hidden = !(states && errors.control.hasError(errors.errorName));\n            });\n\n    }\n\n    ngDoCheck() {\n        this._states.next(\n            this.rules.filter((rule) => (this._serErrors.control as any)[rule])\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/SerErrorsDirective.html":{"url":"directives/SerErrorsDirective.html","title":"directive - SerErrorsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  SerErrorsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/ser-errors/ser-errors.directive.ts\n        \n\n\n            \n                Implementa\n            \n            \n                            OnChanges\n                            OnDestroy\n                            AfterViewInit\n            \n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [serErrors]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                ready\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkPropState\n                            \n                            \n                                    Private\n                                checkStatus\n                            \n                            \n                                getError\n                            \n                            \n                                hasError\n                            \n                            \n                                isValid\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                serErrors\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accesorios\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                                \n                                    hasErrors\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_form: FormGroupDirective)\n                    \n                \n                        \n                            \n                                Definido en src/form/ser-errors/ser-errors.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        _form\n                                                  \n                                                        \n                                                                        FormGroupDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Entradas\n        \n            \n                \n                    \n                        \n                        serErrors\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-errors.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkPropState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPropState(prop: string, name: string, conditions: ErrorOptions)\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-errors/ser-errors.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    prop\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                ErrorOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkStatus()\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-errors/ser-errors.directive.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError(name: string)\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-errors/ser-errors.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasError\n                        \n                        \n                    \n                \n            \n            \n                \nhasError(name: string, conditions: ErrorOptions)\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-errors/ser-errors.directive.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                ErrorOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValid\n                        \n                        \n                    \n                \n            \n            \n                \nisValid(name: string, conditions: ErrorOptions)\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-errors/ser-errors.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                ErrorOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-errors/ser-errors.directive.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-errors/ser-errors.directive.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Definido en src/form/ser-errors/ser-errors.directive.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-errors.directive.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : false\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-errors.directive.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-errors/ser-errors.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accesorios\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Definido en src/form/ser-errors/ser-errors.directive.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasErrors\n                    \n                \n\n                \n                    \n                        gethasErrors()\n                    \n                \n                            \n                                \n                                    Definido en src/form/ser-errors/ser-errors.directive.ts:29\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, OnChanges, OnDestroy, AfterViewInit, HostBinding } from '@angular/core';\nimport { FormGroupDirective, AbstractControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ErrorDetails, ErrorOptions } from './ser-errors';\nimport { toArray } from '../../utils/array';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[serErrors]',\n    exportAs: 'serErrors'\n})\nexport class SerErrorsDirective implements OnChanges, OnDestroy, AfterViewInit {\n\n    // tslint:disable-next-line: no-input-rename\n    @Input('serErrors')\n    controlName: string;\n\n    subject = new BehaviorSubject(null);\n    control: AbstractControl;\n    ready = false;\n\n    constructor(private _form: FormGroupDirective) { }\n\n    get errors() {\n        if (!this.ready) { return; }\n        return this.control.errors;\n    }\n\n    get hasErrors() {\n        return !!this.errors;\n    }\n\n    hasError(name: string, conditions: ErrorOptions): boolean {\n        return this.checkPropState('invalid', name, conditions);\n    }\n\n    isValid(name: string, conditions: ErrorOptions): boolean {\n        return this.checkPropState('valid', name, conditions);\n    }\n\n    getError(name: string) {\n        if (!this.ready) { return; }\n        return this.control.getError(name);\n    }\n\n    private checkPropState(prop: string, name: string, conditions: ErrorOptions): boolean {\n\n        if (!this.ready) { return; }\n        const controlPropsState = (\n            !conditions || toArray(conditions).every((condition: string) => this.control[condition])\n        );\n\n        if (name.charAt(0) === '*') {\n            return this.control[prop] && controlPropsState;\n        }\n\n        return (\n            prop === 'valid' ? !this.control.hasError(name) : this.control.hasError(name) && controlPropsState\n        );\n    }\n\n    private checkStatus() {\n        const control = this.control;\n        const errors = control.errors;\n        this.ready = true;\n\n        if (!errors) {\n            return;\n        }\n\n        for (const errorName in errors) {\n            if (this.errors.hasOwnProperty(errorName)) {\n                this.subject.next({ control, errorName });\n            }\n        }\n    }\n\n    ngOnChanges() {\n        this.control = this._form.control.get(this.controlName);\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.checkStatus();\n            this.control.statusChanges.subscribe(this.checkStatus.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.subject.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/SerFilterModule.html":{"url":"modules/SerFilterModule.html","title":"module - SerFilterModule","body":"\n                   \n\n\n\n\n    Módulos\n    SerFilterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SerFilterModule\n\n\n\ncluster_SerFilterModule_declarations\n\n\n\ncluster_SerFilterModule_exports\n\n\n\n\nAddressColComponent\n\nAddressColComponent\n\n\n\nSerFilterModule\n\nSerFilterModule\n\nSerFilterModule -->\n\nAddressColComponent->SerFilterModule\n\n\n\n\n\nGrowOnInputDirective\n\nGrowOnInputDirective\n\nSerFilterModule -->\n\nGrowOnInputDirective->SerFilterModule\n\n\n\n\n\nPinInputComponent\n\nPinInputComponent\n\nSerFilterModule -->\n\nPinInputComponent->SerFilterModule\n\n\n\n\n\nSerControlDirective\n\nSerControlDirective\n\nSerFilterModule -->\n\nSerControlDirective->SerFilterModule\n\n\n\n\n\nSerErrorDirective\n\nSerErrorDirective\n\nSerFilterModule -->\n\nSerErrorDirective->SerFilterModule\n\n\n\n\n\nSerErrorsDirective\n\nSerErrorsDirective\n\nSerFilterModule -->\n\nSerErrorsDirective->SerFilterModule\n\n\n\n\n\nSerFormElementComponent\n\nSerFormElementComponent\n\nSerFilterModule -->\n\nSerFormElementComponent->SerFilterModule\n\n\n\n\n\nAddressColComponent \n\nAddressColComponent \n\nAddressColComponent  -->\n\nSerFilterModule->AddressColComponent \n\n\n\n\n\nGrowOnInputDirective \n\nGrowOnInputDirective \n\nGrowOnInputDirective  -->\n\nSerFilterModule->GrowOnInputDirective \n\n\n\n\n\nPinInputComponent \n\nPinInputComponent \n\nPinInputComponent  -->\n\nSerFilterModule->PinInputComponent \n\n\n\n\n\nSerControlDirective \n\nSerControlDirective \n\nSerControlDirective  -->\n\nSerFilterModule->SerControlDirective \n\n\n\n\n\nSerErrorDirective \n\nSerErrorDirective \n\nSerErrorDirective  -->\n\nSerFilterModule->SerErrorDirective \n\n\n\n\n\nSerErrorsDirective \n\nSerErrorsDirective \n\nSerErrorsDirective  -->\n\nSerFilterModule->SerErrorsDirective \n\n\n\n\n\nSerFormElementComponent \n\nSerFormElementComponent \n\nSerFormElementComponent  -->\n\nSerFilterModule->SerFormElementComponent \n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/form/filter/ser-filter.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n                \n                    Exporta\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ReactiveFormsModule } from '@angular/forms';\n// tslint:disable: max-line-length\n\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SerFilterComponent } from './ser-filter.component';\n\nconst dependencies = [\n    SerFilterComponent\n];\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule],\n    declarations: [...dependencies],\n    exports: [...dependencies],\n    providers: []\n})\nexport class SerFilterModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/SerFormElementComponent.html":{"url":"components/SerFormElementComponent.html","title":"component - SerFormElementComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  SerFormElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/form/ser-form-element/ser-form-element.component.ts\n\n\n\n\n\n\n\n    Meta datos\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ser-form-element\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                formElement\n                            \n                            \n                                observer\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        Fijaciones de Host\n                    \n                \n                \n                    \n                        \n                            \n                                class.active\n                            \n                            \n                                class.dirty\n                            \n                            \n                                class.disabled\n                            \n                            \n                                class.focus\n                            \n                            \n                                class.invalid\n                            \n                            \n                                class.pending\n                            \n                            \n                                class.valid\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.active\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-form-element.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.dirty\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-form-element.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.disabled\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-form-element.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.focus\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-form-element.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.invalid\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-form-element.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.pending\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-form-element.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.valid\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-form-element.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     SerControlDirective\n\n                        \n                    \n                    \n                        \n                            Decoradores : \n                            \n                            \n                                @ContentChild(SerControlDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-form-element.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Definido en src/form/ser-form-element/ser-form-element.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Subscription } from 'rxjs';\nimport { Component, ContentChild, ViewEncapsulation, HostBinding } from '@angular/core';\nimport { SerControlDirective } from './ser-control.directive';\n\n@Component({\n    selector: 'ser-form-element',\n    template: '',\n    encapsulation: ViewEncapsulation.None\n})\nexport class SerFormElementComponent {\n\n    @ContentChild(SerControlDirective) formElement: SerControlDirective;\n    observer: Subscription;\n\n    @HostBinding('class.disabled')\n    get disabled() {\n        return this.formElement?.disabled;\n    }\n\n    @HostBinding('class.focus')\n    get focus() {\n        return this.formElement?.focus;\n    }\n\n    @HostBinding('class.active')\n    get active() {\n        return this.formElement?.hasValue;\n    }\n\n    @HostBinding('class.dirty')\n    get dirty() {\n        return this.formElement?.dirty;\n    }\n\n    @HostBinding('class.valid')\n    get valid() {\n        return this.formElement?.valid;\n    }\n\n    @HostBinding('class.invalid')\n    get invalid() {\n        return this.formElement?.invalid;\n    }\n\n    @HostBinding('class.pending')\n    get pending() {\n        return this.formElement?.pending;\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddressColComponent', 'selector': 'address-col-input'},{'name': 'PinInputComponent', 'selector': 'pin-input'},{'name': 'SerFilterComponent', 'selector': 'ser-filter'},{'name': 'SerFormElementComponent', 'selector': 'ser-form-element'},{'name': 'SerSelectComponent', 'selector': 'ser-select'},{'name': 'VirtualScrollerComponent', 'selector': 'virtual-scroller,[virtualScroller]'}];\n    var DIRECTIVES = [{'name': 'BgImageDirective', 'selector': '[bgImage]'},{'name': 'CopyToClipboardDirective', 'selector': '[copyToClipboard]'},{'name': 'FinishTypingDirective', 'selector': '[finishTyping]'},{'name': 'GrowOnInputDirective', 'selector': '[growOnInput]'},{'name': 'LongPressDirective', 'selector': '[longPress]'},{'name': 'SDBadgeDirective', 'selector': '[sd-badge]'},{'name': 'SDBadgeItemDirective', 'selector': '[sd-badge-item]'},{'name': 'SDItemDirective', 'selector': '[sd-item]'},{'name': 'SerControlDirective', 'selector': '[serControl]'},{'name': 'SerErrorDirective', 'selector': '[serError]'},{'name': 'SerErrorsDirective', 'selector': '[serErrors]'},{'name': 'ToggleClassDirective', 'selector': '[toggleClass]'},{'name': 'WhenScrolledDirective', 'selector': '[whenScrolled]'}];\n    var ACTUAL_COMPONENT = {'name': 'SerFormElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/SerFormModule.html":{"url":"modules/SerFormModule.html","title":"module - SerFormModule","body":"\n                   \n\n\n\n\n    Módulos\n    SerFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SerFormModule\n\n\n\ncluster_SerFormModule_exports\n\n\n\ncluster_SerFormModule_declarations\n\n\n\n\nAddressColComponent\n\nAddressColComponent\n\n\n\nSerFormModule\n\nSerFormModule\n\nSerFormModule -->\n\nAddressColComponent->SerFormModule\n\n\n\n\n\nGrowOnInputDirective\n\nGrowOnInputDirective\n\nSerFormModule -->\n\nGrowOnInputDirective->SerFormModule\n\n\n\n\n\nPinInputComponent\n\nPinInputComponent\n\nSerFormModule -->\n\nPinInputComponent->SerFormModule\n\n\n\n\n\nSerControlDirective\n\nSerControlDirective\n\nSerFormModule -->\n\nSerControlDirective->SerFormModule\n\n\n\n\n\nSerErrorDirective\n\nSerErrorDirective\n\nSerFormModule -->\n\nSerErrorDirective->SerFormModule\n\n\n\n\n\nSerErrorsDirective\n\nSerErrorsDirective\n\nSerFormModule -->\n\nSerErrorsDirective->SerFormModule\n\n\n\n\n\nSerFormElementComponent\n\nSerFormElementComponent\n\nSerFormModule -->\n\nSerFormElementComponent->SerFormModule\n\n\n\n\n\nAddressColComponent \n\nAddressColComponent \n\nAddressColComponent  -->\n\nSerFormModule->AddressColComponent \n\n\n\n\n\nGrowOnInputDirective \n\nGrowOnInputDirective \n\nGrowOnInputDirective  -->\n\nSerFormModule->GrowOnInputDirective \n\n\n\n\n\nPinInputComponent \n\nPinInputComponent \n\nPinInputComponent  -->\n\nSerFormModule->PinInputComponent \n\n\n\n\n\nSerControlDirective \n\nSerControlDirective \n\nSerControlDirective  -->\n\nSerFormModule->SerControlDirective \n\n\n\n\n\nSerErrorDirective \n\nSerErrorDirective \n\nSerErrorDirective  -->\n\nSerFormModule->SerErrorDirective \n\n\n\n\n\nSerErrorsDirective \n\nSerErrorsDirective \n\nSerErrorsDirective  -->\n\nSerFormModule->SerErrorsDirective \n\n\n\n\n\nSerFilterModule \n\nSerFilterModule \n\nSerFilterModule  -->\n\nSerFormModule->SerFilterModule \n\n\n\n\n\nSerFormElementComponent \n\nSerFormElementComponent \n\nSerFormElementComponent  -->\n\nSerFormModule->SerFormElementComponent \n\n\n\n\n\nSerSelectModule \n\nSerSelectModule \n\nSerSelectModule  -->\n\nSerFormModule->SerSelectModule \n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/form/ser-form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n                \n                    Exporta\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFilterModule\n                        \n                        \n                            SerFormElementComponent\n                        \n                        \n                            SerSelectModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SerFormElementComponent } from './ser-form-element/ser-form-element.component';\nimport { SerControlDirective } from './ser-form-element/ser-control.directive';\nimport { SerErrorDirective } from './ser-errors/ser-error.directive';\nimport { SerErrorsDirective } from './ser-errors/ser-errors.directive';\nimport { PinInputComponent } from './pin/pin-input.component';\nimport { SerSelectModule } from './select/ser-select.module';\nimport { AddressColComponent } from './address/address-col/address-col.component';\nimport { SerFilterModule } from './filter/ser-filter.module';\nimport { GrowOnInputDirective } from './grow-on-input.directive';\n\nconst dependencies = [\n    SerFormElementComponent,\n    SerControlDirective,\n    SerErrorsDirective,\n    SerErrorDirective,\n    PinInputComponent,\n    AddressColComponent,\n    GrowOnInputDirective\n];\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule],\n    declarations: [...dependencies],\n    exports: [...dependencies, SerSelectModule, SerFilterModule]\n})\nexport class SerFormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/SerSelectModule.html":{"url":"modules/SerSelectModule.html","title":"module - SerSelectModule","body":"\n                   \n\n\n\n\n    Módulos\n    SerSelectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SerSelectModule\n\n\n\ncluster_SerSelectModule_declarations\n\n\n\ncluster_SerSelectModule_imports\n\n\n\ncluster_SerSelectModule_providers\n\n\n\ncluster_SerSelectModule_exports\n\n\n\n\nAddressColComponent\n\nAddressColComponent\n\n\n\nSerSelectModule\n\nSerSelectModule\n\nSerSelectModule -->\n\nAddressColComponent->SerSelectModule\n\n\n\n\n\nGrowOnInputDirective\n\nGrowOnInputDirective\n\nSerSelectModule -->\n\nGrowOnInputDirective->SerSelectModule\n\n\n\n\n\nPinInputComponent\n\nPinInputComponent\n\nSerSelectModule -->\n\nPinInputComponent->SerSelectModule\n\n\n\n\n\nSerControlDirective\n\nSerControlDirective\n\nSerSelectModule -->\n\nSerControlDirective->SerSelectModule\n\n\n\n\n\nSerErrorDirective\n\nSerErrorDirective\n\nSerSelectModule -->\n\nSerErrorDirective->SerSelectModule\n\n\n\n\n\nSerErrorsDirective\n\nSerErrorsDirective\n\nSerSelectModule -->\n\nSerErrorsDirective->SerSelectModule\n\n\n\n\n\nSerFormElementComponent\n\nSerFormElementComponent\n\nSerSelectModule -->\n\nSerFormElementComponent->SerSelectModule\n\n\n\n\n\nAddressColComponent \n\nAddressColComponent \n\nAddressColComponent  -->\n\nSerSelectModule->AddressColComponent \n\n\n\n\n\nGrowOnInputDirective \n\nGrowOnInputDirective \n\nGrowOnInputDirective  -->\n\nSerSelectModule->GrowOnInputDirective \n\n\n\n\n\nPinInputComponent \n\nPinInputComponent \n\nPinInputComponent  -->\n\nSerSelectModule->PinInputComponent \n\n\n\n\n\nSerControlDirective \n\nSerControlDirective \n\nSerControlDirective  -->\n\nSerSelectModule->SerControlDirective \n\n\n\n\n\nSerErrorDirective \n\nSerErrorDirective \n\nSerErrorDirective  -->\n\nSerSelectModule->SerErrorDirective \n\n\n\n\n\nSerErrorsDirective \n\nSerErrorsDirective \n\nSerErrorsDirective  -->\n\nSerSelectModule->SerErrorsDirective \n\n\n\n\n\nSerFormElementComponent \n\nSerFormElementComponent \n\nSerFormElementComponent  -->\n\nSerSelectModule->SerFormElementComponent \n\n\n\n\n\nVirtualScrollerModule\n\nVirtualScrollerModule\n\nSerSelectModule -->\n\nVirtualScrollerModule->SerSelectModule\n\n\n\n\n\nDataService\n\nDataService\n\nSerSelectModule -->\n\nDataService->SerSelectModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/form/select/ser-select.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n                \n                    Proveedores\n                    \n                        \n                            DataService\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            VirtualScrollerModule\n                        \n                    \n                \n                \n                    Exporta\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ReactiveFormsModule } from '@angular/forms';\n// tslint:disable: max-line-length\n\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SDBadgeDirective, SDBadgeItemDirective, SDItemDirective } from './ser-select-menu-item.directive';\nimport { SerSelectComponent } from './ser-select.component';\nimport { DataService } from './ser-select.service';\nimport { VirtualScrollerModule } from './virtual-scroll/virtual-scroll';\n\nconst dependencies = [\n    SerSelectComponent,\n    SDItemDirective,\n    SDBadgeDirective,\n    SDBadgeItemDirective\n];\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, VirtualScrollerModule],\n    declarations: [...dependencies],\n    exports: [...dependencies],\n    providers: [DataService]\n})\nexport class SerSelectModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/SerUiModule.html":{"url":"modules/SerUiModule.html","title":"module - SerUiModule","body":"\n                   \n\n\n\n\n    Módulos\n    SerUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SerUiModule\n\n\n\ncluster_SerUiModule_declarations\n\n\n\ncluster_SerUiModule_exports\n\n\n\n\nAddressColComponent\n\nAddressColComponent\n\n\n\nSerUiModule\n\nSerUiModule\n\nSerUiModule -->\n\nAddressColComponent->SerUiModule\n\n\n\n\n\nGrowOnInputDirective\n\nGrowOnInputDirective\n\nSerUiModule -->\n\nGrowOnInputDirective->SerUiModule\n\n\n\n\n\nPinInputComponent\n\nPinInputComponent\n\nSerUiModule -->\n\nPinInputComponent->SerUiModule\n\n\n\n\n\nSerControlDirective\n\nSerControlDirective\n\nSerUiModule -->\n\nSerControlDirective->SerUiModule\n\n\n\n\n\nSerErrorDirective\n\nSerErrorDirective\n\nSerUiModule -->\n\nSerErrorDirective->SerUiModule\n\n\n\n\n\nSerErrorsDirective\n\nSerErrorsDirective\n\nSerUiModule -->\n\nSerErrorsDirective->SerUiModule\n\n\n\n\n\nSerFormElementComponent\n\nSerFormElementComponent\n\nSerUiModule -->\n\nSerFormElementComponent->SerUiModule\n\n\n\n\n\nAddressColComponent \n\nAddressColComponent \n\nAddressColComponent  -->\n\nSerUiModule->AddressColComponent \n\n\n\n\n\nGrowOnInputDirective \n\nGrowOnInputDirective \n\nGrowOnInputDirective  -->\n\nSerUiModule->GrowOnInputDirective \n\n\n\n\n\nPinInputComponent \n\nPinInputComponent \n\nPinInputComponent  -->\n\nSerUiModule->PinInputComponent \n\n\n\n\n\nSerControlDirective \n\nSerControlDirective \n\nSerControlDirective  -->\n\nSerUiModule->SerControlDirective \n\n\n\n\n\nSerErrorDirective \n\nSerErrorDirective \n\nSerErrorDirective  -->\n\nSerUiModule->SerErrorDirective \n\n\n\n\n\nSerErrorsDirective \n\nSerErrorsDirective \n\nSerErrorsDirective  -->\n\nSerUiModule->SerErrorsDirective \n\n\n\n\n\nSerFormElementComponent \n\nSerFormElementComponent \n\nSerFormElementComponent  -->\n\nSerUiModule->SerFormElementComponent \n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/ui/ser-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n                \n                    Exporta\n                    \n                        \n                            AddressColComponent\n                        \n                        \n                            GrowOnInputDirective\n                        \n                        \n                            PinInputComponent\n                        \n                        \n                            SerControlDirective\n                        \n                        \n                            SerErrorDirective\n                        \n                        \n                            SerErrorsDirective\n                        \n                        \n                            SerFormElementComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { WhenScrolledDirective } from './when-scrolled.directive';\nimport { FinishTypingDirective } from './finish-typing.directive';\nimport { BgImageDirective } from './bg-image.directive';\nimport { CopyToClipboardDirective } from './copy-to-clipboard.directive';\nimport { ToggleClassDirective } from './toggle-class.directive';\nimport { LongPressDirective } from './long-press.directive';\n\nconst dependencies = [\n  WhenScrolledDirective,\n  FinishTypingDirective,\n  BgImageDirective,\n  CopyToClipboardDirective,\n  ToggleClassDirective,\n  LongPressDirective\n];\n\n@NgModule({\n  declarations: [...dependencies],\n  exports: [...dependencies]\n})\nexport class SerUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/SnackbarOpts.html":{"url":"interfaces/SnackbarOpts.html","title":"interface - SnackbarOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SnackbarOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/ui/snackbar.service.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        duration\n                                \n                                \n                                            Opcional\n                                        iconClass\n                                \n                                \n                                            Opcional\n                                        iconName\n                                \n                                \n                                        msj\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconClass\n                                    \n                                \n                                \n                                    \n                                        iconClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconName\n                                    \n                                \n                                \n                                    \n                                        iconName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msj\n                                    \n                                \n                                \n                                    \n                                        msj:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { mergeObjs } from '../utils/object';\nimport { timer } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nexport interface SnackbarOpts {\n    msj: string;\n    iconClass?: string;\n    iconName?: string;\n    duration?: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SnackbarService {\n\n    open(opts: SnackbarOpts) {\n\n        let _html = document.createElement('div');\n        _html.className = 'snackbar';\n\n        const defaultOpts: SnackbarOpts = mergeObjs({\n            iconClass: 'green',\n            iconName: 'done',\n            duration: 4000\n        }, opts);\n\n        _html.innerHTML = `\n        \n            ${defaultOpts.iconName}\n        \n        ${opts.msj}`;\n\n        document.body.append(_html);\n\n        timer(1000)\n        .pipe(take(1)).subscribe(() => {\n            _html.className = 'snackbar show-text';\n\n            setTimeout(() => {\n                setTimeout(() => {\n                    _html.className = 'snackbar hide';\n\n                    setTimeout(() => {\n                        document.body.removeChild(_html);\n                        _html = null;\n                    }, 1000);\n                }, 1500);\n            }, defaultOpts.duration);\n        });\n\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/ui/snackbar.service.ts\n        \n\n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(opts: SnackbarOpts)\n                \n            \n\n\n            \n                \n                    Definido en src/ui/snackbar.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                SnackbarOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { mergeObjs } from '../utils/object';\nimport { timer } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nexport interface SnackbarOpts {\n    msj: string;\n    iconClass?: string;\n    iconName?: string;\n    duration?: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SnackbarService {\n\n    open(opts: SnackbarOpts) {\n\n        let _html = document.createElement('div');\n        _html.className = 'snackbar';\n\n        const defaultOpts: SnackbarOpts = mergeObjs({\n            iconClass: 'green',\n            iconName: 'done',\n            duration: 4000\n        }, opts);\n\n        _html.innerHTML = `\n        \n            ${defaultOpts.iconName}\n        \n        ${opts.msj}`;\n\n        document.body.append(_html);\n\n        timer(1000)\n        .pipe(take(1)).subscribe(() => {\n            _html.className = 'snackbar show-text';\n\n            setTimeout(() => {\n                setTimeout(() => {\n                    _html.className = 'snackbar hide';\n\n                    setTimeout(() => {\n                        document.body.removeChild(_html);\n                        _html = null;\n                    }, 1000);\n                }, 1500);\n            }, defaultOpts.duration);\n        });\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/String.html":{"url":"interfaces/String.html","title":"interface - String","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  String\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/interfaces/string.extensions.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Métodos\n                        \n                    \n                    \n                        \n                            \n                                \n                                    toCapitalize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toCapitalize\n                        \n                        \n                    \n                \n            \n            \n                \ntoCapitalize(...args: string[])\n                \n            \n\n\n            \n                \n                    Definido en src/interfaces/string.extensions.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export declare module String {\n    interface String {\n        toCapitalize(...args: string[]): string;\n    }\n}\n\n/**\n * Función para convertir un string en letra capital\n * @param value String a convertir\n */\n/* String.prototype.toCapitalize = function (...args: string[]) {\n\n    const value = this;\n    const values = value.split(' ').map(val => val.charAt(0).toUpperCase() + val.slice(1));\n\n    return values.join(' ');\n\n}; */\n\n\n/* declare module '@angular/forms/src/model' {\n    interface FormGroup {\n        setValueAndErrors(this: FormGroup, state: any, memberErrors: any): void;\n    }\n}\n\nFormGroup.prototype.setValueAndErrors = function (this: FormGroup, state: any, memberErrors: any): void {\n    this.setValue(state);\n} */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/ToggleClassDirective.html":{"url":"directives/ToggleClassDirective.html","title":"directive - ToggleClassDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  ToggleClassDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/ui/toggle-class.directive.ts\n        \n\n\n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [toggleClass]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n\n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                toggleClass\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Escuchadores de Host\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Definido en src/ui/toggle-class.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Entradas\n        \n            \n                \n                    \n                        \n                        toggleClass\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definido en src/ui/toggle-class.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Definido en src/ui/toggle-class.directive.ts:10\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Renderer2, ElementRef, Input } from '@angular/core';\n\n@Directive({\n    selector: '[toggleClass]'\n})\nexport class ToggleClassDirective {\n\n    @Input() toggleClass: string;\n\n    @HostListener('click') onClick() {\n        (this.el.nativeElement as HTMLElement).classList.toggle(this.toggleClass);\n    }\n\n    constructor(private el: ElementRef, private renderer: Renderer2) {\n\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/VirtualScrollerDefaultOptions.html":{"url":"interfaces/VirtualScrollerDefaultOptions.html","title":"interface - VirtualScrollerDefaultOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VirtualScrollerDefaultOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/select/virtual-scroll/defaultoptions.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        checkResizeInterval\n                                \n                                \n                                        modifyOverflowStyleOfParentScroll\n                                \n                                \n                                        resizeBypassRefreshThreshold\n                                \n                                \n                                        scrollAnimationTime\n                                \n                                \n                                            Opcional\n                                        scrollbarHeight\n                                \n                                \n                                            Opcional\n                                        scrollbarWidth\n                                \n                                \n                                        scrollDebounceTime\n                                \n                                \n                                        scrollThrottlingTime\n                                \n                                \n                                        stripedTable\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        checkResizeInterval\n                                    \n                                \n                                \n                                    \n                                        checkResizeInterval:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modifyOverflowStyleOfParentScroll\n                                    \n                                \n                                \n                                    \n                                        modifyOverflowStyleOfParentScroll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeBypassRefreshThreshold\n                                    \n                                \n                                \n                                    \n                                        resizeBypassRefreshThreshold:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollAnimationTime\n                                    \n                                \n                                \n                                    \n                                        scrollAnimationTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollbarHeight\n                                    \n                                \n                                \n                                    \n                                        scrollbarHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollbarWidth\n                                    \n                                \n                                \n                                    \n                                        scrollbarWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollDebounceTime\n                                    \n                                \n                                \n                                    \n                                        scrollDebounceTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollThrottlingTime\n                                    \n                                \n                                \n                                    \n                                        scrollThrottlingTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stripedTable\n                                    \n                                \n                                \n                                    \n                                        stripedTable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface VirtualScrollerDefaultOptions {\n\tscrollThrottlingTime: number;\n\tscrollDebounceTime: number;\n\tscrollAnimationTime: number;\n\tscrollbarWidth?: number;\n\tscrollbarHeight?: number;\n\tcheckResizeInterval: number\n\tresizeBypassRefreshThreshold: number,\n\tmodifyOverflowStyleOfParentScroll: boolean,\n\tstripedTable: boolean\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/VirtualScrollerModule.html":{"url":"modules/VirtualScrollerModule.html","title":"module - VirtualScrollerModule","body":"\n                   \n\n\n\n\n    Módulos\n    VirtualScrollerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VirtualScrollerModule\n\n\n\ncluster_VirtualScrollerModule_exports\n\n\n\ncluster_VirtualScrollerModule_declarations\n\n\n\n\nVirtualScrollerComponent\n\nVirtualScrollerComponent\n\n\n\nVirtualScrollerModule\n\nVirtualScrollerModule\n\nVirtualScrollerModule -->\n\nVirtualScrollerComponent->VirtualScrollerModule\n\n\n\n\n\nVirtualScrollerComponent \n\nVirtualScrollerComponent \n\nVirtualScrollerComponent  -->\n\nVirtualScrollerModule->VirtualScrollerComponent \n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/form/select/virtual-scroll/virtual-scroll.ts\n        \n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            VirtualScrollerComponent\n                        \n                    \n                \n                \n                    Exporta\n                    \n                        \n                            VirtualScrollerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // tslint:disable: member-ordering\nimport {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Optional,\n    Input,\n    NgModule,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewChild,\n    ChangeDetectorRef,\n    InjectionToken\n} from '@angular/core';\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { CommonModule } from '@angular/common';\n\nimport * as tween from '@tweenjs/tween.js';\nimport { VirtualScrollerDefaultOptions } from './defaultoptions';\nimport { IPageInfo } from './ipageinfo';\nimport { IViewport } from './iviewport';\n\nimport { WrapGroupDimensions } from './wrapgroupdimensions';\nimport { WrapGroupDimension } from './wrapgroupdimension';\n\nimport { IDimensions } from './idimension';\n\n\n\n\n\nexport function VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY(): VirtualScrollerDefaultOptions {\n    return {\n        scrollThrottlingTime: 0,\n        scrollDebounceTime: 0,\n        scrollAnimationTime: 750,\n        checkResizeInterval: 1000,\n        resizeBypassRefreshThreshold: 5,\n        modifyOverflowStyleOfParentScroll: true,\n        stripedTable: false\n    };\n}\n\n@Component({\n    selector: 'virtual-scroller,[virtualScroller]',\n    exportAs: 'virtualScroller',\n    template: `\n    \n    \n      \n    \n  `,\n    // tslint:disable-next-line: no-host-metadata-property\n    host: {\n        '[class.horizontal]': 'horizontal',\n        '[class.vertical]': '!horizontal',\n        '[class.selfScroll]': '!parentScroll'\n    },\n    styles: [`\n    :host {\n      position: relative;\n\t  display: block;\n      -webkit-overflow-scrolling: touch;\n    }\n\n\t:host.horizontal.selfScroll {\n      overflow-y: visible;\n      overflow-x: auto;\n\t}\n\t:host.vertical.selfScroll {\n      overflow-y: auto;\n      overflow-x: visible;\n\t}\n\n    .scrollable-content {\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      max-width: 100vw;\n      max-height: 100vh;\n      position: absolute;\n    }\n\n\t.scrollable-content ::ng-deep > * {\n\t\tbox-sizing: border-box;\n\t}\n\n\t:host.horizontal {\n\t\twhite-space: nowrap;\n\t}\n\n\t:host.horizontal .scrollable-content {\n\t\tdisplay: flex;\n\t}\n\n\t:host.horizontal .scrollable-content ::ng-deep > * {\n\t\tflex-shrink: 0;\n\t\tflex-grow: 0;\n\t\twhite-space: initial;\n\t}\n\n    .total-padding {\n      width: 1px;\n      opacity: 0;\n    }\n\n    :host.horizontal .total-padding {\n      height: 100%;\n    }\n  `]\n})\nexport class VirtualScrollerComponent implements OnInit, OnChanges, OnDestroy {\n    public viewPortItems: any[];\n    public window = window;\n\n    public get viewPortInfo(): IPageInfo {\n        const pageInfo: IViewport = this.previousViewPort || {};\n        return {\n            startIndex: pageInfo.startIndex || 0,\n            endIndex: pageInfo.endIndex || 0,\n            scrollStartPosition: pageInfo.scrollStartPosition || 0,\n            scrollEndPosition: pageInfo.scrollEndPosition || 0,\n            maxScrollPosition: pageInfo.maxScrollPosition || 0,\n            startIndexWithBuffer: pageInfo.startIndexWithBuffer || 0,\n            endIndexWithBuffer: pageInfo.endIndexWithBuffer || 0\n        };\n    }\n\n    @Input()\n    public executeRefreshOutsideAngularZone = false;\n\n    protected _enableUnequalChildrenSizes = false;\n    @Input()\n    public get enableUnequalChildrenSizes(): boolean {\n        return this._enableUnequalChildrenSizes;\n    }\n    public set enableUnequalChildrenSizes(value: boolean) {\n        if (this._enableUnequalChildrenSizes === value) {\n            return;\n        }\n\n        this._enableUnequalChildrenSizes = value;\n        this.minMeasuredChildWidth = undefined;\n        this.minMeasuredChildHeight = undefined;\n    }\n\n    @Input()\n    public useMarginInsteadOfTranslate = false;\n\n    @Input()\n    public modifyOverflowStyleOfParentScroll: boolean;\n\n    @Input()\n    public stripedTable: boolean;\n\n    @Input()\n    public scrollbarWidth: number;\n\n    @Input()\n    public scrollbarHeight: number;\n\n    @Input()\n    public childWidth: number;\n\n    @Input()\n    public childHeight: number;\n\n    @Input()\n    public ssrChildWidth: number;\n\n    @Input()\n    public ssrChildHeight: number;\n\n    @Input()\n    public ssrViewportWidth = 1920;\n\n    @Input()\n    public ssrViewportHeight = 1080;\n\n    protected _bufferAmount = 0;\n    @Input()\n    public get bufferAmount(): number {\n        if (typeof (this._bufferAmount) === 'number' && this._bufferAmount >= 0) {\n            return this._bufferAmount;\n        } else {\n            return this.enableUnequalChildrenSizes ? 5 : 0;\n        }\n    }\n    public set bufferAmount(value: number) {\n        this._bufferAmount = value;\n    }\n\n    @Input()\n    public scrollAnimationTime: number;\n\n    @Input()\n    public resizeBypassRefreshThreshold: number;\n\n    protected _scrollThrottlingTime: number;\n    @Input()\n    public get scrollThrottlingTime(): number {\n        return this._scrollThrottlingTime;\n    }\n    public set scrollThrottlingTime(value: number) {\n        this._scrollThrottlingTime = value;\n        this.updateOnScrollFunction();\n    }\n\n    protected _scrollDebounceTime: number;\n    @Input()\n    public get scrollDebounceTime(): number {\n        return this._scrollDebounceTime;\n    }\n    public set scrollDebounceTime(value: number) {\n        this._scrollDebounceTime = value;\n        this.updateOnScrollFunction();\n    }\n\n    protected onScroll: () => void;\n    protected updateOnScrollFunction(): void {\n        if (this.scrollDebounceTime) {\n            this.onScroll = this.debounce(() => {\n                this.refresh_internal(false);\n            }, this.scrollDebounceTime);\n        } else if (this.scrollThrottlingTime) {\n            this.onScroll = this.throttleTrailing(() => {\n                this.refresh_internal(false);\n            }, this.scrollThrottlingTime);\n        } else {\n            this.onScroll = () => {\n                this.refresh_internal(false);\n            };\n        }\n    }\n\n    protected checkScrollElementResizedTimer: number;\n    protected _checkResizeInterval: number;\n    @Input()\n    public get checkResizeInterval(): number {\n        return this._checkResizeInterval;\n    }\n    public set checkResizeInterval(value: number) {\n        if (this._checkResizeInterval === value) {\n            return;\n        }\n\n        this._checkResizeInterval = value;\n        this.addScrollEventHandlers();\n    }\n\n    protected _items: any[] = [];\n    @Input()\n    public get items(): any[] {\n        return this._items;\n    }\n    public set items(value: any[]) {\n        if (value === this._items) {\n            return;\n        }\n\n        this._items = value || [];\n        this.refresh_internal(true);\n    }\n\n    @Input()\n    public compareItems: (item1: any, item2: any) => boolean = (item1: any, item2: any) => item1 === item2;\n\n    protected _horizontal: boolean;\n    @Input()\n    public get horizontal(): boolean {\n        return this._horizontal;\n    }\n    public set horizontal(value: boolean) {\n        this._horizontal = value;\n        this.updateDirection();\n    }\n\n    protected revertParentOverscroll(): void {\n        const scrollElement = this.getScrollElement();\n        if (scrollElement && this.oldParentScrollOverflow) {\n            scrollElement.style['overflow-y'] = this.oldParentScrollOverflow.y;\n            scrollElement.style['overflow-x'] = this.oldParentScrollOverflow.x;\n        }\n\n        this.oldParentScrollOverflow = undefined;\n    }\n\n    protected oldParentScrollOverflow: { x: string, y: string };\n    protected _parentScroll: Element | Window;\n    @Input()\n    public get parentScroll(): Element | Window {\n        return this._parentScroll;\n    }\n    public set parentScroll(value: Element | Window) {\n        if (this._parentScroll === value) {\n            return;\n        }\n\n        this.revertParentOverscroll();\n        this._parentScroll = value;\n        this.addScrollEventHandlers();\n\n        const scrollElement = this.getScrollElement();\n        if (this.modifyOverflowStyleOfParentScroll && scrollElement !== this.element.nativeElement) {\n            this.oldParentScrollOverflow = { x: scrollElement.style['overflow-x'], y: scrollElement.style['overflow-y'] };\n            scrollElement.style['overflow-y'] = this.horizontal ? 'visible' : 'auto';\n            scrollElement.style['overflow-x'] = this.horizontal ? 'auto' : 'visible';\n        }\n    }\n\n    @Output()\n    public vsUpdate: EventEmitter = new EventEmitter();\n\n    @Output()\n    public vsChange: EventEmitter = new EventEmitter();\n\n    @Output()\n    public vsStart: EventEmitter = new EventEmitter();\n\n    @Output()\n    public vsEnd: EventEmitter = new EventEmitter();\n\n    @ViewChild('content', { read: ElementRef, static: false })\n    protected contentElementRef: ElementRef;\n\n    @ViewChild('invisiblePadding', { read: ElementRef, static: false })\n    protected invisiblePaddingElementRef: ElementRef;\n\n    @ContentChild('header', { read: ElementRef, static: false })\n    protected headerElementRef: ElementRef;\n\n    @ContentChild('container', { read: ElementRef, static: false })\n    protected containerElementRef: ElementRef;\n\n    public ngOnInit(): void {\n        this.addScrollEventHandlers();\n    }\n\n    public ngOnDestroy(): void {\n        this.removeScrollEventHandlers();\n        this.revertParentOverscroll();\n    }\n\n    public ngOnChanges(changes: any): void {\n        const indexLengthChanged = this.cachedItemsLength !== this.items.length;\n        this.cachedItemsLength = this.items.length;\n\n        const firstRun: boolean = !changes.items || !changes.items.previousValue || changes.items.previousValue.length === 0;\n        this.refresh_internal(indexLengthChanged || firstRun);\n    }\n\n\n    public ngDoCheck(): void {\n        if (this.cachedItemsLength !== this.items.length) {\n            this.cachedItemsLength = this.items.length;\n            this.refresh_internal(true);\n            return;\n        }\n\n        if (this.previousViewPort && this.viewPortItems && this.viewPortItems.length > 0) {\n            let itemsArrayChanged = false;\n            for (let i = 0; i = 0) {\n                this.invalidateCachedMeasurementAtIndex(index);\n            }\n        } else {\n            this.minMeasuredChildWidth = undefined;\n            this.minMeasuredChildHeight = undefined;\n        }\n\n        this.refresh_internal(false);\n    }\n\n    public invalidateCachedMeasurementAtIndex(index: number): void {\n        if (this.enableUnequalChildrenSizes) {\n            const cachedMeasurement = this.wrapGroupDimensions.maxChildSizePerWrapGroup[index];\n            if (cachedMeasurement) {\n                this.wrapGroupDimensions.maxChildSizePerWrapGroup[index] = undefined;\n                --this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n                this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= cachedMeasurement.childWidth || 0;\n                this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= cachedMeasurement.childHeight || 0;\n            }\n        } else {\n            this.minMeasuredChildWidth = undefined;\n            this.minMeasuredChildHeight = undefined;\n        }\n\n        this.refresh_internal(false);\n    }\n\n    public scrollInto(item: any, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n        const index: number = this.items.indexOf(item);\n        if (index === -1) {\n            return;\n        }\n\n        this.scrollToIndex(index, alignToBeginning, additionalOffset, animationMilliseconds, animationCompletedCallback);\n    }\n\n    public scrollToIndex(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n        let maxRetries = 5;\n\n        const retryIfNeeded = () => {\n            --maxRetries;\n            if (maxRetries  void = undefined): void {\n        animationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n\n        const dimensions = this.calculateDimensions();\n        let scroll = this.calculatePadding(index, dimensions) + additionalOffset;\n        if (!alignToBeginning) {\n            scroll -= dimensions.wrapGroupsPerPage * dimensions[this._childScrollDim];\n        }\n\n        this.scrollToPosition(scroll, animationMilliseconds, animationCompletedCallback);\n    }\n\n    public scrollToPosition(scrollPosition: number, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n        scrollPosition += this.getElementsOffset();\n\n        animationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n\n        const scrollElement = this.getScrollElement();\n\n        let animationRequest: number;\n\n        if (this.currentTween) {\n            this.currentTween.stop();\n            this.currentTween = undefined;\n        }\n\n        if (!animationMilliseconds) {\n            this.renderer.setProperty(scrollElement, this._scrollType, scrollPosition);\n            this.refresh_internal(false, animationCompletedCallback);\n            return;\n        }\n\n        const tweenConfigObj = { scrollPosition: scrollElement[this._scrollType] };\n\n        const newTween = new tween.Tween(tweenConfigObj)\n            .to({ scrollPosition }, animationMilliseconds)\n            .easing(tween.Easing.Quadratic.Out)\n            .onUpdate((data) => {\n                if (isNaN(data.scrollPosition)) {\n                    return;\n                }\n                this.renderer.setProperty(scrollElement, this._scrollType, data.scrollPosition);\n                this.refresh_internal(false);\n            })\n            .onStop(() => {\n                cancelAnimationFrame(animationRequest);\n            })\n            .start();\n\n        const animate = (time?: number) => {\n            if (!newTween['isPlaying']()) {\n                return;\n            }\n\n            newTween.update(time);\n            if (tweenConfigObj.scrollPosition === scrollPosition) {\n                this.refresh_internal(false, animationCompletedCallback);\n                return;\n            }\n\n            this.zone.runOutsideAngular(() => {\n                animationRequest = requestAnimationFrame(animate);\n            });\n        };\n\n        animate();\n        this.currentTween = newTween;\n    }\n\n    protected isAngularUniversalSSR: boolean;\n\n    constructor(protected readonly element: ElementRef,\n        protected readonly renderer: Renderer2,\n        protected readonly zone: NgZone,\n        protected changeDetectorRef: ChangeDetectorRef,\n        @Inject(PLATFORM_ID) platformId: Object,\n        @Optional() @Inject('virtual-scroller-default-options')\n        options: VirtualScrollerDefaultOptions) {\n\n        this.isAngularUniversalSSR = isPlatformServer(platformId);\n\n        this.scrollThrottlingTime = options.scrollThrottlingTime;\n        this.scrollDebounceTime = options.scrollDebounceTime;\n        this.scrollAnimationTime = options.scrollAnimationTime;\n        this.scrollbarWidth = options.scrollbarWidth;\n        this.scrollbarHeight = options.scrollbarHeight;\n        this.checkResizeInterval = options.checkResizeInterval;\n        this.resizeBypassRefreshThreshold = options.resizeBypassRefreshThreshold;\n        this.modifyOverflowStyleOfParentScroll = options.modifyOverflowStyleOfParentScroll;\n        this.stripedTable = options.stripedTable;\n\n        this.horizontal = false;\n        this.resetWrapGroupDimensions();\n    }\n\n    protected getElementSize(element: HTMLElement): ClientRect {\n        const result = element.getBoundingClientRect();\n        const styles = getComputedStyle(element);\n        const marginTop = parseInt(styles['margin-top'], 10) || 0;\n        const marginBottom = parseInt(styles['margin-bottom'], 10) || 0;\n        const marginLeft = parseInt(styles['margin-left'], 10) || 0;\n        const marginRight = parseInt(styles['margin-right'], 10) || 0;\n\n        return {\n            top: result.top + marginTop,\n            bottom: result.bottom + marginBottom,\n            left: result.left + marginLeft,\n            right: result.right + marginRight,\n            width: result.width + marginLeft + marginRight,\n            height: result.height + marginTop + marginBottom\n        };\n    }\n\n    protected previousScrollBoundingRect: ClientRect;\n    protected checkScrollElementResized(): void {\n        const boundingRect = this.getElementSize(this.getScrollElement());\n\n        let sizeChanged: boolean;\n        if (!this.previousScrollBoundingRect) {\n            sizeChanged = true;\n        } else {\n            const widthChange = Math.abs(boundingRect.width - this.previousScrollBoundingRect.width);\n            const heightChange = Math.abs(boundingRect.height - this.previousScrollBoundingRect.height);\n            sizeChanged = widthChange > this.resizeBypassRefreshThreshold || heightChange > this.resizeBypassRefreshThreshold;\n        }\n\n        if (sizeChanged) {\n            this.previousScrollBoundingRect = boundingRect;\n            if (boundingRect.width > 0 && boundingRect.height > 0) {\n                this.refresh_internal(false);\n            }\n        }\n    }\n\n    protected _invisiblePaddingProperty;\n    protected _offsetType;\n    protected _scrollType;\n    protected _pageOffsetType;\n    protected _childScrollDim;\n    protected _translateDir;\n    protected _marginDir;\n    protected updateDirection(): void {\n        if (this.horizontal) {\n            this._invisiblePaddingProperty = 'width';\n            this._offsetType = 'offsetLeft';\n            this._pageOffsetType = 'pageXOffset';\n            this._childScrollDim = 'childWidth';\n            this._marginDir = 'margin-left';\n            this._translateDir = 'translateX';\n            this._scrollType = 'scrollLeft';\n        } else {\n            this._invisiblePaddingProperty = 'height';\n            this._offsetType = 'offsetTop';\n            this._pageOffsetType = 'pageYOffset';\n            this._childScrollDim = 'childHeight';\n            this._marginDir = 'margin-top';\n            this._translateDir = 'translateY';\n            this._scrollType = 'scrollTop';\n        }\n    }\n\n    protected debounce(func: Function, wait: number): Function {\n        const throttled = this.throttleTrailing(func, wait);\n        const result = function () {\n            throttled['cancel']();\n            throttled.apply(this, arguments);\n        };\n        result['cancel'] = function () {\n            throttled['cancel']();\n        };\n\n        return result;\n    }\n\n    protected throttleTrailing(func: Function, wait: number): Function {\n        let timeout;\n        let _arguments = arguments;\n        const result = function () {\n            const _this = this;\n            _arguments = arguments;\n\n            if (timeout) {\n                return;\n            }\n\n            if (wait {};\n    protected currentTween: tween.Tween;\n    protected cachedItemsLength: number;\n\n    protected disposeScrollHandler: () => void | undefined;\n    protected disposeResizeHandler: () => void | undefined;\n\n    protected refresh_internal(itemsArrayModified: boolean, refreshCompletedCallback: () => void = undefined, maxRunTimes: number = 2): void {\n        // note: maxRunTimes is to force it to keep recalculating if the previous iteration caused a re-render (different sliced items in viewport or scrollPosition changed).\n        // The default of 2x max will probably be accurate enough without causing too large a performance bottleneck\n        // The code would typically quit out on the 2nd iteration anyways. The main time it'd think more than 2 runs would be necessary would be for vastly different sized child items or if this is the 1st time the items array was initialized.\n        // Without maxRunTimes, If the user is actively scrolling this code would become an infinite loop until they stopped scrolling. This would be okay, except each scroll event would start an additional infinte loop. We want to short-circuit it to prevent this.\n\n        if (itemsArrayModified && this.previousViewPort && this.previousViewPort.scrollStartPosition > 0) {\n            // if items were prepended, scroll forward to keep same items visible\n            const oldViewPort = this.previousViewPort;\n            const oldViewPortItems = this.viewPortItems;\n\n            const oldRefreshCompletedCallback = refreshCompletedCallback;\n            refreshCompletedCallback = () => {\n                const scrollLengthDelta = this.previousViewPort.scrollLength - oldViewPort.scrollLength;\n                if (scrollLengthDelta > 0 && this.viewPortItems) {\n                    const oldStartItem = oldViewPortItems[0];\n                    const oldStartItemIndex = this.items.findIndex(x => this.compareItems(oldStartItem, x));\n                    if (oldStartItemIndex > this.previousViewPort.startIndexWithBuffer) {\n                        let itemOrderChanged = false;\n                        for (let i = 1; i  {\n            requestAnimationFrame(() => {\n\n                if (itemsArrayModified) {\n                    this.resetWrapGroupDimensions();\n                }\n                const viewport = this.calculateViewport();\n\n                const startChanged = itemsArrayModified || viewport.startIndex !== this.previousViewPort.startIndex;\n                const endChanged = itemsArrayModified || viewport.endIndex !== this.previousViewPort.endIndex;\n                const scrollLengthChanged = viewport.scrollLength !== this.previousViewPort.scrollLength;\n                const paddingChanged = viewport.padding !== this.previousViewPort.padding;\n                const scrollPositionChanged = viewport.scrollStartPosition !== this.previousViewPort.scrollStartPosition || viewport.scrollEndPosition !== this.previousViewPort.scrollEndPosition || viewport.maxScrollPosition !== this.previousViewPort.maxScrollPosition;\n\n                this.previousViewPort = viewport;\n\n                if (scrollLengthChanged) {\n                    this.renderer.setStyle(this.invisiblePaddingElementRef.nativeElement, this._invisiblePaddingProperty, `${viewport.scrollLength}px`);\n                }\n\n                if (paddingChanged) {\n                    if (this.useMarginInsteadOfTranslate) {\n                        this.renderer.setStyle(this.contentElementRef.nativeElement, this._marginDir, `${viewport.padding}px`);\n                    } else {\n                        this.renderer.setStyle(this.contentElementRef.nativeElement, 'transform', `${this._translateDir}(${viewport.padding}px)`);\n                        this.renderer.setStyle(this.contentElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${viewport.padding}px)`);\n                    }\n                }\n\n                if (this.headerElementRef) {\n                    const scrollPosition = this.getScrollElement()[this._scrollType];\n                    const containerOffset = this.getElementsOffset();\n                    const offset = Math.max(scrollPosition - viewport.padding - containerOffset + this.headerElementRef.nativeElement.clientHeight, 0);\n                    this.renderer.setStyle(this.headerElementRef.nativeElement, 'transform', `${this._translateDir}(${offset}px)`);\n                    this.renderer.setStyle(this.headerElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${offset}px)`);\n                }\n\n                const changeEventArg: IPageInfo = (startChanged || endChanged) ? {\n                    startIndex: viewport.startIndex,\n                    endIndex: viewport.endIndex,\n                    scrollStartPosition: viewport.scrollStartPosition,\n                    scrollEndPosition: viewport.scrollEndPosition,\n                    startIndexWithBuffer: viewport.startIndexWithBuffer,\n                    endIndexWithBuffer: viewport.endIndexWithBuffer,\n                    maxScrollPosition: viewport.maxScrollPosition\n                } : undefined;\n\n\n                if (startChanged || endChanged || scrollPositionChanged) {\n                    const handleChanged = () => {\n                        // update the scroll list to trigger re-render of components in viewport\n                        this.viewPortItems = viewport.startIndexWithBuffer >= 0 && viewport.endIndexWithBuffer >= 0 ? this.items.slice(viewport.startIndexWithBuffer, viewport.endIndexWithBuffer + 1) : [];\n                        this.vsUpdate.emit(this.viewPortItems);\n\n                        if (startChanged) {\n                            this.vsStart.emit(changeEventArg);\n                        }\n\n                        if (endChanged) {\n                            this.vsEnd.emit(changeEventArg);\n                        }\n\n                        if (startChanged || endChanged) {\n                            this.changeDetectorRef.markForCheck();\n                            this.vsChange.emit(changeEventArg);\n                        }\n\n                        if (maxRunTimes > 0) {\n                            this.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n                            return;\n                        }\n\n                        if (refreshCompletedCallback) {\n                            refreshCompletedCallback();\n                        }\n                    };\n\n\n                    if (this.executeRefreshOutsideAngularZone) {\n                        handleChanged();\n                    } else {\n                        this.zone.run(handleChanged);\n                    }\n                } else {\n                    if (maxRunTimes > 0 && (scrollLengthChanged || paddingChanged)) {\n                        this.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n                        return;\n                    }\n\n                    if (refreshCompletedCallback) {\n                        refreshCompletedCallback();\n                    }\n                }\n            });\n        });\n    }\n\n    protected getScrollElement(): HTMLElement {\n        return this.parentScroll instanceof Window ? document.scrollingElement || document.documentElement || document.body : this.parentScroll || this.element.nativeElement;\n    }\n\n    protected addScrollEventHandlers(): void {\n        if (this.isAngularUniversalSSR) {\n            return;\n        }\n\n        const scrollElement = this.getScrollElement();\n\n        this.removeScrollEventHandlers();\n\n        this.zone.runOutsideAngular(() => {\n            if (this.parentScroll instanceof Window) {\n                this.disposeScrollHandler = this.renderer.listen('window', 'scroll', this.onScroll);\n                this.disposeResizeHandler = this.renderer.listen('window', 'resize', this.onScroll);\n            } else {\n                this.disposeScrollHandler = this.renderer.listen(scrollElement, 'scroll', this.onScroll);\n                if (this._checkResizeInterval > 0) {\n                    this.checkScrollElementResizedTimer = setInterval(() => { this.checkScrollElementResized(); }, this._checkResizeInterval);\n                }\n            }\n        });\n    }\n\n    protected removeScrollEventHandlers(): void {\n        if (this.checkScrollElementResizedTimer) {\n            clearInterval(this.checkScrollElementResizedTimer);\n        }\n\n        if (this.disposeScrollHandler) {\n            this.disposeScrollHandler();\n            this.disposeScrollHandler = undefined;\n        }\n\n        if (this.disposeResizeHandler) {\n            this.disposeResizeHandler();\n            this.disposeResizeHandler = undefined;\n        }\n    }\n\n    protected getElementsOffset(): number {\n        if (this.isAngularUniversalSSR) {\n            return 0;\n        }\n\n        let offset = 0;\n\n        if (this.containerElementRef && this.containerElementRef.nativeElement) {\n            offset += this.containerElementRef.nativeElement[this._offsetType];\n        }\n\n        if (this.parentScroll) {\n            const scrollElement = this.getScrollElement();\n            const elementClientRect = this.getElementSize(this.element.nativeElement);\n            const scrollClientRect = this.getElementSize(scrollElement);\n            if (this.horizontal) {\n                offset += elementClientRect.left - scrollClientRect.left;\n            } else {\n                offset += elementClientRect.top - scrollClientRect.top;\n            }\n\n            if (!(this.parentScroll instanceof Window)) {\n                offset += scrollElement[this._scrollType];\n            }\n        }\n\n        return offset;\n    }\n\n    protected countItemsPerWrapGroup(): number {\n        if (this.isAngularUniversalSSR) {\n            return Math.round(this.horizontal ? this.ssrViewportHeight / this.ssrChildHeight : this.ssrViewportWidth / this.ssrChildWidth);\n        }\n\n        const propertyName = this.horizontal ? 'offsetLeft' : 'offsetTop';\n        const children = ((this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement).children;\n\n        const childrenLength = children ? children.length : 0;\n        if (childrenLength === 0) {\n            return 1;\n        }\n\n        const firstOffset = children[0][propertyName];\n        let result = 1;\n        while (result  0) {\n                if (!this.childWidth || !this.childHeight) {\n                    if (!this.minMeasuredChildWidth && viewportWidth > 0) {\n                        this.minMeasuredChildWidth = viewportWidth;\n                    }\n                    if (!this.minMeasuredChildHeight && viewportHeight > 0) {\n                        this.minMeasuredChildHeight = viewportHeight;\n                    }\n                }\n\n                const child = content.children[0];\n                const clientRect = this.getElementSize(child);\n                this.minMeasuredChildWidth = Math.min(this.minMeasuredChildWidth, clientRect.width);\n                this.minMeasuredChildHeight = Math.min(this.minMeasuredChildHeight, clientRect.height);\n            }\n\n            defaultChildWidth = this.childWidth || this.minMeasuredChildWidth || viewportWidth;\n            defaultChildHeight = this.childHeight || this.minMeasuredChildHeight || viewportHeight;\n            const itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\n            const itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\n            wrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\n        } else {\n            let scrollOffset = scrollElement[this._scrollType] - (this.previousViewPort ? this.previousViewPort.padding : 0);\n\n            let arrayStartIndex = this.previousViewPort.startIndexWithBuffer || 0;\n            let wrapGroupIndex = Math.ceil(arrayStartIndex / itemsPerWrapGroup);\n\n            let maxWidthForWrapGroup = 0;\n            let maxHeightForWrapGroup = 0;\n            let sumOfVisibleMaxWidths = 0;\n            let sumOfVisibleMaxHeights = 0;\n            wrapGroupsPerPage = 0;\n\n            for (let i = 0; i  0) {\n                            const scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleWidthForWrapGroup);\n                            maxVisibleWidthForWrapGroup -= scrollOffsetToRemove;\n                            scrollOffset -= scrollOffsetToRemove;\n                        }\n\n                        sumOfVisibleMaxWidths += maxVisibleWidthForWrapGroup;\n                        if (maxVisibleWidthForWrapGroup > 0 && viewportWidth >= sumOfVisibleMaxWidths) {\n                            ++wrapGroupsPerPage;\n                        }\n                    } else {\n                        let maxVisibleHeightForWrapGroup = Math.min(maxHeightForWrapGroup, Math.max(viewportHeight - sumOfVisibleMaxHeights, 0));\n                        if (scrollOffset > 0) {\n                            const scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleHeightForWrapGroup);\n                            maxVisibleHeightForWrapGroup -= scrollOffsetToRemove;\n                            scrollOffset -= scrollOffsetToRemove;\n                        }\n\n                        sumOfVisibleMaxHeights += maxVisibleHeightForWrapGroup;\n                        if (maxVisibleHeightForWrapGroup > 0 && viewportHeight >= sumOfVisibleMaxHeights) {\n                            ++wrapGroupsPerPage;\n                        }\n                    }\n\n                    ++wrapGroupIndex;\n\n                    maxWidthForWrapGroup = 0;\n                    maxHeightForWrapGroup = 0;\n                }\n            }\n\n            const averageChildWidth = this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n            const averageChildHeight = this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n            defaultChildWidth = this.childWidth || averageChildWidth || viewportWidth;\n            defaultChildHeight = this.childHeight || averageChildHeight || viewportHeight;\n\n            if (this.horizontal) {\n                if (viewportWidth > sumOfVisibleMaxWidths) {\n                    wrapGroupsPerPage += Math.ceil((viewportWidth - sumOfVisibleMaxWidths) / defaultChildWidth);\n                }\n            } else {\n                if (viewportHeight > sumOfVisibleMaxHeights) {\n                    wrapGroupsPerPage += Math.ceil((viewportHeight - sumOfVisibleMaxHeights) / defaultChildHeight);\n                }\n            }\n        }\n\n        const itemCount = this.items.length;\n        const itemsPerPage = itemsPerWrapGroup * wrapGroupsPerPage;\n        const pageCount_fractional = itemCount / itemsPerPage;\n        const numberOfWrapGroups = Math.ceil(itemCount / itemsPerWrapGroup);\n\n        let scrollLength = 0;\n\n        const defaultScrollLengthPerWrapGroup = this.horizontal ? defaultChildWidth : defaultChildHeight;\n        if (this.enableUnequalChildrenSizes) {\n            let numUnknownChildSizes = 0;\n            for (let i = 0; i  0) {\n            arrayEndIndex += dimensions.itemsPerWrapGroup - endIndexWithinWrapGroup; // round up to end of wrapGroup\n        }\n\n        if (isNaN(arrayStartIndex)) {\n            arrayStartIndex = 0;\n        }\n        if (isNaN(arrayEndIndex)) {\n            arrayEndIndex = 0;\n        }\n\n        arrayStartIndex = Math.min(Math.max(arrayStartIndex, 0), dimensions.itemCount - 1);\n        arrayEndIndex = Math.min(Math.max(arrayEndIndex, 0), dimensions.itemCount - 1);\n\n        const bufferSize = this.bufferAmount * dimensions.itemsPerWrapGroup;\n        const startIndexWithBuffer = Math.min(Math.max(arrayStartIndex - bufferSize, 0), dimensions.itemCount - 1);\n        const endIndexWithBuffer = Math.min(Math.max(arrayEndIndex + bufferSize, 0), dimensions.itemCount - 1);\n\n        return {\n            startIndex: arrayStartIndex,\n            endIndex: arrayEndIndex,\n            startIndexWithBuffer: startIndexWithBuffer,\n            endIndexWithBuffer: endIndexWithBuffer,\n            scrollStartPosition: scrollPosition,\n            scrollEndPosition: scrollPosition + dimensions.viewportLength,\n            maxScrollPosition: dimensions.maxScrollPosition\n        };\n    }\n\n    protected calculateViewport(): IViewport {\n        const dimensions = this.calculateDimensions();\n        const offset = this.getElementsOffset();\n\n        let scrollStartPosition = this.getScrollStartPosition();\n        if (scrollStartPosition > (dimensions.scrollLength + offset) && !(this.parentScroll instanceof Window)) {\n            scrollStartPosition = dimensions.scrollLength;\n        } else {\n            scrollStartPosition -= offset;\n        }\n        scrollStartPosition = Math.max(0, scrollStartPosition);\n\n        const pageInfo = this.calculatePageInfo(scrollStartPosition, dimensions);\n        const newPadding = this.calculatePadding(pageInfo.startIndexWithBuffer, dimensions);\n        const newScrollLength = dimensions.scrollLength;\n\n        return {\n            startIndex: pageInfo.startIndex,\n            endIndex: pageInfo.endIndex,\n            startIndexWithBuffer: pageInfo.startIndexWithBuffer,\n            endIndexWithBuffer: pageInfo.endIndexWithBuffer,\n            padding: Math.round(newPadding),\n            scrollLength: Math.round(newScrollLength),\n            scrollStartPosition: pageInfo.scrollStartPosition,\n            scrollEndPosition: pageInfo.scrollEndPosition,\n            maxScrollPosition: pageInfo.maxScrollPosition\n        };\n    }\n}\n\n@NgModule({\n    exports: [VirtualScrollerComponent],\n    declarations: [VirtualScrollerComponent],\n    imports: [CommonModule],\n    providers: [\n        {\n            provide: 'virtual-scroller-default-options',\n            useFactory: VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY\n        }\n    ]\n})\nexport class VirtualScrollerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"directives/WhenScrolledDirective.html":{"url":"directives/WhenScrolledDirective.html","title":"directive - WhenScrolledDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directivas\n  WhenScrolledDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/ui/when-scrolled.directive.ts\n        \n\n\n            \n                Implementa\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Meta datos\n            \n                \n\n                    \n                        Selector\n                        [whenScrolled]\n                    \n\n                \n            \n        \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                listener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Salidas\n                    \n                \n                \n                    \n                        \n                            \n                                callback\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, rendered: Renderer2)\n                    \n                \n                        \n                            \n                                Definido en src/ui/when-scrolled.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendered\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Salidas\n        \n            \n                \n                    \n                        \n                        callback\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definido en src/ui/when-scrolled.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Definido en src/ui/when-scrolled.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listener\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/ui/when-scrolled.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, OnDestroy, Output, EventEmitter, Renderer2 } from '@angular/core';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[whenScrolled]'\n})\nexport class WhenScrolledDirective implements OnDestroy {\n\n    @Output() callback: EventEmitter = new EventEmitter();\n    listener: any;\n\n    constructor(private _elementRef: ElementRef, rendered: Renderer2) {\n        this.listener = rendered.listen(this._elementRef.nativeElement, 'scroll', (ev: any) => {\n            if (Math.round(ev.target.scrollTop + ev.target.clientHeight) >= ev.target.scrollHeight) {\n                this.callback.emit();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.listener();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/WrapGroupDimension.html":{"url":"interfaces/WrapGroupDimension.html","title":"interface - WrapGroupDimension","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WrapGroupDimension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/select/virtual-scroll/wrapgroupdimension.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        childHeight\n                                \n                                \n                                        childWidth\n                                \n                                \n                                        items\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        childHeight\n                                    \n                                \n                                \n                                    \n                                        childHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        childWidth\n                                    \n                                \n                                \n                                    \n                                        childWidth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WrapGroupDimension {\n\tchildWidth: number;\n\tchildHeight: number;\n\titems: any[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/WrapGroupDimensions.html":{"url":"interfaces/WrapGroupDimensions.html","title":"interface - WrapGroupDimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WrapGroupDimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/form/select/virtual-scroll/wrapgroupdimensions.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        maxChildSizePerWrapGroup\n                                \n                                \n                                        numberOfKnownWrapGroupChildSizes\n                                \n                                \n                                        sumOfKnownWrapGroupChildHeights\n                                \n                                \n                                        sumOfKnownWrapGroupChildWidths\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        maxChildSizePerWrapGroup\n                                    \n                                \n                                \n                                    \n                                        maxChildSizePerWrapGroup:         WrapGroupDimension[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         WrapGroupDimension[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfKnownWrapGroupChildSizes\n                                    \n                                \n                                \n                                    \n                                        numberOfKnownWrapGroupChildSizes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sumOfKnownWrapGroupChildHeights\n                                    \n                                \n                                \n                                    \n                                        sumOfKnownWrapGroupChildHeights:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sumOfKnownWrapGroupChildWidths\n                                    \n                                \n                                \n                                    \n                                        sumOfKnownWrapGroupChildWidths:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WrapGroupDimension } from './wrapgroupdimension';\n\nexport interface WrapGroupDimensions {\n\tnumberOfKnownWrapGroupChildSizes: number;\n\tsumOfKnownWrapGroupChildWidths: number;\n\tsumOfKnownWrapGroupChildHeights: number;\n\tmaxChildSizePerWrapGroup: WrapGroupDimension[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Cobertura de la documentación\n\n\n\n    \n\n\n\n    \n        \n            Fichero\n            Tipo\n            Identificador\n            Declaraciones\n        \n    \n    \n        \n            \n                \n                src/aws/Iaws.ts\n            \n            interface\n            AwsData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/aws/Iaws.ts\n            \n            interface\n            S3\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/aws/aws.service.ts\n            \n            injectable\n            AwsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/aws/aws.service.ts\n            \n            variable\n            AWS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cookie/cookies.service.ts\n            \n            injectable\n            CookiesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/external-script/external-script.service.ts\n            \n            injectable\n            ExternalScriptService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/facebook/IFacebook.ts\n            \n            interface\n            FacebookUserProfile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/facebook/config/facebook-sdk.config.ts\n            \n            class\n            FacebookSDKConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/facebook/facebook-sdk.service.ts\n            \n            injectable\n            FacebookSDKService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/facebook/facebook-sdk.service.ts\n            \n            variable\n            NG_FSDK_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/file/read.ts\n            \n            function\n            getFileType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/file/read.ts\n            \n            function\n            readAsArrayBuffer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/file/read.ts\n            \n            function\n            readAsDataURL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/form/address/address-col/address-col.component.ts\n            \n            component\n            AddressColComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                src/form/filter/ser-filter.component.ts\n            \n            component\n            SerFilterComponent\n            \n                0 %\n                (0/84)\n            \n        \n        \n            \n                \n                src/form/filter/ser-filter.component.ts\n            \n            variable\n            noop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/filter/ser-filter.interface.ts\n            \n            interface\n            FilterSettings\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/form/filter/ser-filter.module.ts\n            \n            variable\n            dependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/grow-on-input.directive.ts\n            \n            directive\n            GrowOnInputDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/form/pin/pin-input.component.ts\n            \n            component\n            PinInputComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/form/select/ser-select-menu-item.directive.ts\n            \n            directive\n            SDBadgeDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/select/ser-select-menu-item.directive.ts\n            \n            directive\n            SDBadgeItemDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/select/ser-select-menu-item.directive.ts\n            \n            directive\n            SDItemDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/select/ser-select.component.ts\n            \n            component\n            SerSelectComponent\n            \n                0 %\n                (0/103)\n            \n        \n        \n            \n                \n                src/form/select/ser-select.component.ts\n            \n            variable\n            noop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/select/ser-select.interface.ts\n            \n            interface\n            DropdownSettings\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/form/select/ser-select.module.ts\n            \n            variable\n            dependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/select/ser-select.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/defaultoptions.ts\n            \n            interface\n            VirtualScrollerDefaultOptions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/idimension.ts\n            \n            interface\n            IDimensions\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/ipageinfo.ts\n            \n            interface\n            IPageInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/iviewport.ts\n            \n            interface\n            IViewport\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/virtual-scroll.ts\n            \n            component\n            VirtualScrollerComponent\n            \n                0 %\n                (0/99)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/virtual-scroll.ts\n            \n            function\n            VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/wrapgroupdimension.ts\n            \n            interface\n            WrapGroupDimension\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/form/select/virtual-scroll/wrapgroupdimensions.ts\n            \n            interface\n            WrapGroupDimensions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/form/ser-errors/ser-error.directive.ts\n            \n            directive\n            SerErrorDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/form/ser-errors/ser-errors.directive.ts\n            \n            directive\n            SerErrorsDirective\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/form/ser-errors/ser-errors.ts\n            \n            interface\n            ErrorDetails\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/ser-form-element/ser-control.directive.ts\n            \n            directive\n            SerControlDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/form/ser-form-element/ser-form-element.component.ts\n            \n            component\n            SerFormElementComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/form/ser-form.module.ts\n            \n            variable\n            dependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/comparison.ts\n            \n            function\n            greaterOrEqualThan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/comparison.ts\n            \n            function\n            greaterThan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/comparison.ts\n            \n            function\n            lowerOrEqualThan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/comparison.ts\n            \n            function\n            lowerThan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/custom-validators.ts\n            \n            class\n            CustomValidators\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/form/validations/file.ts\n            \n            function\n            maxFileSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/file.ts\n            \n            function\n            minFileSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/file.ts\n            \n            function\n            requiredFileType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/match.ts\n            \n            function\n            match\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/match.ts\n            \n            function\n            verifyNIT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/validations/remote.ts\n            \n            interface\n            BaseValidationModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/form/validations/remote.ts\n            \n            function\n            alreadyExist\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fullscreen/fullscreen-interface.ts\n            \n            interface\n            FsDocument\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/fullscreen/fullscreen-interface.ts\n            \n            interface\n            FsDocumentElement\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/fullscreen/fullscreen.service.ts\n            \n            injectable\n            FullscreenService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/google/IGoogle.ts\n            \n            class\n            GoogleClientConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/google/IGoogle.ts\n            \n            interface\n            GoogleUserProfile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/google/config/google-sdk.config.ts\n            \n            class\n            GoogleSDKConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/google/google-sdk.service.ts\n            \n            injectable\n            GoogleSDKService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/google/google-sdk.service.ts\n            \n            variable\n            NG_GAPI_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql/utils.ts\n            \n            function\n            objectToGraphParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/string.extensions.ts\n            \n            interface\n            String\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/map/leaflet/main.ts\n            \n            class\n            LeafletMap\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/map/leaflet/providers.ts\n            \n            variable\n            LEAFLET_MAP_LAYERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/map/leaflet/types.ts\n            \n            interface\n            LeafletMapOptions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/map/leaflet/types.ts\n            \n            interface\n            LeafletPadding\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/map/map.service.ts\n            \n            injectable\n            MapService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/map/types.ts\n            \n            interface\n            CenterPoint\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/map/types.ts\n            \n            interface\n            LatLng\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/map/types.ts\n            \n            interface\n            LatLng2LatLngOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/open-id/Iopen-id-client.ts\n            \n            interface\n            OpenIdClient\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/open-id/Iopen-id-client.ts\n            \n            interface\n            OpenIdData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/open-id/claims.service.ts\n            \n            injectable\n            ClaimsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prefers-color-scheme/prefers-color-scheme.service.ts\n            \n            injectable\n            PrefersColorSchemeService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ui/bg-image.directive.ts\n            \n            directive\n            BgImageDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/ui/bg-image.directive.ts\n            \n            interface\n            BgImage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ui/copy-to-clipboard.directive.ts\n            \n            directive\n            CopyToClipboardDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/ui/download.service.ts\n            \n            injectable\n            DownloadService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/ui/finish-typing.directive.ts\n            \n            directive\n            FinishTypingDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/ui/long-press.directive.ts\n            \n            directive\n            LongPressDirective\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/ui/ser-ui.module.ts\n            \n            variable\n            dependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ui/snackbar.service.ts\n            \n            injectable\n            SnackbarService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/ui/snackbar.service.ts\n            \n            interface\n            SnackbarOpts\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/ui/toggle-class.directive.ts\n            \n            directive\n            ToggleClassDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/ui/when-scrolled.directive.ts\n            \n            directive\n            WhenScrolledDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            function\n            arrayGroupBy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            function\n            getObjectByValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            function\n            getObjIndexByValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            function\n            inArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            function\n            notInArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/array.ts\n            \n            variable\n            toArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/avatar.ts\n            \n            class\n            Color\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/utils/avatar.ts\n            \n            function\n            generateDefaultImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/bowser.ts\n            \n            function\n            setBowserClasses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/check.ts\n            \n            function\n            hasValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/check.ts\n            \n            function\n            objHasValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/keyboard-keys.ts\n            \n            variable\n            KEYBOARD_KEYS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/navigator.ts\n            \n            function\n            browserWidth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/navigator.ts\n            \n            function\n            getStyles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/navigator.ts\n            \n            function\n            hasPdfViewer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/object.ts\n            \n            function\n            mergeObjs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            CC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            DOMAIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            EMAIL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            IMAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/patterns.ts\n            \n            variable\n            PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            interface\n            RandomPasswordOps\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            function\n            generatePassword\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            function\n            getRandomInt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            function\n            guid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            function\n            s4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/random.ts\n            \n            function\n            uniqueId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/rx-utils.ts\n            \n            function\n            fromIntersectionObserver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/rx-utils.ts\n            \n            function\n            fromMutationObserver\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencias\n    \n    \n        \n            @angular/animations : ^9.0.6\n        \n            @angular/common : ^9.0.6\n        \n            @angular/compiler : ^9.0.6\n        \n            @angular/core : ^9.0.6\n        \n            @angular/forms : ^9.0.6\n        \n            @angular/platform-browser : ^9.0.6\n        \n            @angular/platform-browser-dynamic : ^9.0.6\n        \n            @angular/router : ^9.0.6\n        \n            @sersol/leaflet-plugins : 0.1.0\n        \n            @types/facebook-js-sdk : ^3.3.0\n        \n            @types/gapi : 0.0.39\n        \n            @types/gapi.auth2 : 0.0.51\n        \n            @tweenjs/tween.js : ^17.4.0\n        \n            angular-cli-ghpages : ^0.6.2\n        \n            bowser : ^2.9.0\n        \n            highlight.js : ^9.18.1\n        \n            leaflet : ^1.6.0\n        \n            leaflet.markercluster : ^1.4.1\n        \n            ngx-highlightjs : ^3.0.3\n        \n            rxjs : ^6.5.4\n        \n            rxjs-compat : ^6.5.4\n        \n            tooltipster : ^4.2.7\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNGX-UI\nLibrería Angular (v9+) orientado al montaje de interfaces rápidas e intuitivas\n\nDemostraciones: Clic aquí\nDocumentación: Clic aquí\n\nInstala via npm\nnpm install --save @sersol/ngx\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2014-2019 SER Soluciones\nCopyright (c) 2014-2019 Andres Gambadeveloper@sersoluciones.com\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Módulos\n\n\n    \n            \n                \n                    \n                        AwsModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        FacebookSDKModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        GoogleSDKModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        SerFilterModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        SerFormModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        SerSelectModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        SerUiModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        VirtualScrollerModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Descripción general\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SerFilterModule\n\n\n\ncluster_SerFilterModule_declarations\n\n\n\ncluster_SerFilterModule_exports\n\n\n\ncluster_SerFormModule\n\n\n\ncluster_SerFormModule_exports\n\n\n\ncluster_SerSelectModule\n\n\n\ncluster_SerSelectModule_imports\n\n\n\ncluster_SerSelectModule_providers\n\n\n\ncluster_SerUiModule\n\n\n\ncluster_VirtualScrollerModule\n\n\n\ncluster_VirtualScrollerModule_declarations\n\n\n\ncluster_VirtualScrollerModule_exports\n\n\n\n\nAddressColComponent\n\nAddressColComponent\n\n\n\nSerFilterModule\n\nSerFilterModule\n\nSerFilterModule -->\n\nAddressColComponent->SerFilterModule\n\n\n\n\n\nSerFormModule\n\nSerFormModule\n\nSerFormModule -->\n\nAddressColComponent->SerFormModule\n\n\n\n\n\nSerSelectModule\n\nSerSelectModule\n\nSerSelectModule -->\n\nAddressColComponent->SerSelectModule\n\n\n\n\n\nSerUiModule\n\nSerUiModule\n\nSerUiModule -->\n\nAddressColComponent->SerUiModule\n\n\n\n\n\nGrowOnInputDirective\n\nGrowOnInputDirective\n\nSerFilterModule -->\n\nGrowOnInputDirective->SerFilterModule\n\n\n\nSerFormModule -->\n\nGrowOnInputDirective->SerFormModule\n\n\n\nSerSelectModule -->\n\nGrowOnInputDirective->SerSelectModule\n\n\n\nSerUiModule -->\n\nGrowOnInputDirective->SerUiModule\n\n\n\n\n\nPinInputComponent\n\nPinInputComponent\n\nSerFilterModule -->\n\nPinInputComponent->SerFilterModule\n\n\n\nSerFormModule -->\n\nPinInputComponent->SerFormModule\n\n\n\nSerSelectModule -->\n\nPinInputComponent->SerSelectModule\n\n\n\nSerUiModule -->\n\nPinInputComponent->SerUiModule\n\n\n\n\n\nSerControlDirective\n\nSerControlDirective\n\nSerFilterModule -->\n\nSerControlDirective->SerFilterModule\n\n\n\nSerFormModule -->\n\nSerControlDirective->SerFormModule\n\n\n\nSerSelectModule -->\n\nSerControlDirective->SerSelectModule\n\n\n\nSerUiModule -->\n\nSerControlDirective->SerUiModule\n\n\n\n\n\nSerErrorDirective\n\nSerErrorDirective\n\nSerFilterModule -->\n\nSerErrorDirective->SerFilterModule\n\n\n\nSerFormModule -->\n\nSerErrorDirective->SerFormModule\n\n\n\nSerSelectModule -->\n\nSerErrorDirective->SerSelectModule\n\n\n\nSerUiModule -->\n\nSerErrorDirective->SerUiModule\n\n\n\n\n\nSerErrorsDirective\n\nSerErrorsDirective\n\nSerFilterModule -->\n\nSerErrorsDirective->SerFilterModule\n\n\n\nSerFormModule -->\n\nSerErrorsDirective->SerFormModule\n\n\n\nSerSelectModule -->\n\nSerErrorsDirective->SerSelectModule\n\n\n\nSerUiModule -->\n\nSerErrorsDirective->SerUiModule\n\n\n\n\n\nSerFormElementComponent\n\nSerFormElementComponent\n\nSerFilterModule -->\n\nSerFormElementComponent->SerFilterModule\n\n\n\nSerFormModule -->\n\nSerFormElementComponent->SerFormModule\n\n\n\nSerSelectModule -->\n\nSerFormElementComponent->SerSelectModule\n\n\n\nSerUiModule -->\n\nSerFormElementComponent->SerUiModule\n\n\n\n\n\nAddressColComponent \n\nAddressColComponent \n\nAddressColComponent  -->\n\nSerFilterModule->AddressColComponent \n\n\n\n\n\nGrowOnInputDirective \n\nGrowOnInputDirective \n\nGrowOnInputDirective  -->\n\nSerFilterModule->GrowOnInputDirective \n\n\n\n\n\nPinInputComponent \n\nPinInputComponent \n\nPinInputComponent  -->\n\nSerFilterModule->PinInputComponent \n\n\n\n\n\nSerControlDirective \n\nSerControlDirective \n\nSerControlDirective  -->\n\nSerFilterModule->SerControlDirective \n\n\n\n\n\nSerErrorDirective \n\nSerErrorDirective \n\nSerErrorDirective  -->\n\nSerFilterModule->SerErrorDirective \n\n\n\n\n\nSerErrorsDirective \n\nSerErrorsDirective \n\nSerErrorsDirective  -->\n\nSerFilterModule->SerErrorsDirective \n\n\n\n\n\nSerFormElementComponent \n\nSerFormElementComponent \n\nSerFormElementComponent  -->\n\nSerFilterModule->SerFormElementComponent \n\n\n\nAddressColComponent  -->\n\nSerFormModule->AddressColComponent \n\n\n\nGrowOnInputDirective  -->\n\nSerFormModule->GrowOnInputDirective \n\n\n\nPinInputComponent  -->\n\nSerFormModule->PinInputComponent \n\n\n\nSerControlDirective  -->\n\nSerFormModule->SerControlDirective \n\n\n\nSerErrorDirective  -->\n\nSerFormModule->SerErrorDirective \n\n\n\nSerErrorsDirective  -->\n\nSerFormModule->SerErrorsDirective \n\n\n\nSerFormElementComponent  -->\n\nSerFormModule->SerFormElementComponent \n\n\n\n\n\nSerFilterModule \n\nSerFilterModule \n\nSerFilterModule  -->\n\nSerFormModule->SerFilterModule \n\n\n\n\n\nSerSelectModule \n\nSerSelectModule \n\nSerSelectModule  -->\n\nSerFormModule->SerSelectModule \n\n\n\nAddressColComponent  -->\n\nSerSelectModule->AddressColComponent \n\n\n\nGrowOnInputDirective  -->\n\nSerSelectModule->GrowOnInputDirective \n\n\n\nPinInputComponent  -->\n\nSerSelectModule->PinInputComponent \n\n\n\nSerControlDirective  -->\n\nSerSelectModule->SerControlDirective \n\n\n\nSerErrorDirective  -->\n\nSerSelectModule->SerErrorDirective \n\n\n\nSerErrorsDirective  -->\n\nSerSelectModule->SerErrorsDirective \n\n\n\nSerFormElementComponent  -->\n\nSerSelectModule->SerFormElementComponent \n\n\n\n\n\nVirtualScrollerModule\n\nVirtualScrollerModule\n\nSerSelectModule -->\n\nVirtualScrollerModule->SerSelectModule\n\n\n\n\n\nVirtualScrollerComponent \n\nVirtualScrollerComponent \n\nVirtualScrollerComponent  -->\n\nVirtualScrollerModule->VirtualScrollerComponent \n\n\n\n\n\nDataService\n\nDataService\n\nSerSelectModule -->\n\nDataService->SerSelectModule\n\n\n\nAddressColComponent  -->\n\nSerUiModule->AddressColComponent \n\n\n\nGrowOnInputDirective  -->\n\nSerUiModule->GrowOnInputDirective \n\n\n\nPinInputComponent  -->\n\nSerUiModule->PinInputComponent \n\n\n\nSerControlDirective  -->\n\nSerUiModule->SerControlDirective \n\n\n\nSerErrorDirective  -->\n\nSerUiModule->SerErrorDirective \n\n\n\nSerErrorsDirective  -->\n\nSerUiModule->SerErrorsDirective \n\n\n\nSerFormElementComponent  -->\n\nSerUiModule->SerFormElementComponent \n\n\n\n\n\nVirtualScrollerComponent\n\nVirtualScrollerComponent\n\nVirtualScrollerModule -->\n\nVirtualScrollerComponent->VirtualScrollerModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Módulos\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Componentes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Directivas\n                \n            \n        \n        \n            \n                \n                    \n                    12 Inyectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Clases\n                \n            \n        \n        \n            \n                \n                    \n                    27 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscelánea\n  Alias de tipo\n\n\n\n    Índice\n    \n        \n            \n                \n                    \n                        \n                            ErrorOptions   (src/.../ser-errors.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/form/ser-errors/ser-errors.ts\n    \n    \n        \n            \n                \n                    \n                    ErrorOptions\n                \n            \n            \n                \n                        string | string[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscelánea\n  Variables\n\n\n\n    Índice\n    \n        \n            \n                \n                    \n                        \n                            AWS_CONFIG   (src/.../aws.service.ts)\n                        \n                        \n                            CC   (src/.../patterns.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            dependencies   (src/.../ser-form.module.ts)\n                        \n                        \n                            dependencies   (src/.../ser-ui.module.ts)\n                        \n                        \n                            dependencies   (src/.../ser-filter.module.ts)\n                        \n                        \n                            dependencies   (src/.../ser-select.module.ts)\n                        \n                        \n                            DOMAIN   (src/.../patterns.ts)\n                        \n                        \n                            EMAIL   (src/.../patterns.ts)\n                        \n                        \n                            IMAGE   (src/.../patterns.ts)\n                        \n                        \n                            KEYBOARD_KEYS   (src/.../keyboard-keys.ts)\n                        \n                        \n                            LEAFLET_MAP_LAYERS   (src/.../providers.ts)\n                        \n                        \n                            NG_FSDK_CONFIG   (src/.../facebook-sdk.service.ts)\n                        \n                        \n                            NG_GAPI_CONFIG   (src/.../google-sdk.service.ts)\n                        \n                        \n                            noop   (src/.../ser-filter.component.ts)\n                        \n                        \n                            noop   (src/.../ser-select.component.ts)\n                        \n                        \n                            NUMBER   (src/.../patterns.ts)\n                        \n                        \n                            PASSWORD   (src/.../patterns.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            toArray   (src/.../array.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/aws/aws.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AWS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         InjectionToken\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : new InjectionToken('aws.config')\n                        \n                    \n\n\n            \n        \n\n    src/utils/patterns.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CC\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : /((\\d{8})|(\\d{10})|(\\d{11})|(\\d{6}-\\d{5}))?/g\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DOMAIN\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : /^([a-zA-Z0-9\\_\\-\\.]{2,63})\\.([a-zA-Z0-9]{2,})$/\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EMAIL\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IMAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : /^image\\/([a-zA-Z].*)$/\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUMBER\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : /[-]{0,1}[0-9]*[.]{0,1}[0-9]+/g\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PASSWORD\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : /^((?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])).{6,}$/\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/form/ser-form.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\n    SerFormElementComponent,\n    SerControlDirective,\n    SerErrorsDirective,\n    SerErrorDirective,\n    PinInputComponent,\n    AddressColComponent,\n    GrowOnInputDirective\n]\n                        \n                    \n\n\n            \n        \n\n    src/ui/ser-ui.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\n  WhenScrolledDirective,\n  FinishTypingDirective,\n  BgImageDirective,\n  CopyToClipboardDirective,\n  ToggleClassDirective,\n  LongPressDirective\n]\n                        \n                    \n\n\n            \n        \n\n    src/form/filter/ser-filter.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\n    SerFilterComponent\n]\n                        \n                    \n\n\n            \n        \n\n    src/form/select/ser-select.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\n    SerSelectComponent,\n    SDItemDirective,\n    SDBadgeDirective,\n    SDBadgeItemDirective\n]\n                        \n                    \n\n\n            \n        \n\n    src/utils/keyboard-keys.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            KEYBOARD_KEYS\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         object\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : {\n  up: 38,\n  down: 40,\n  left: 37,\n  right: 39,\n  escape: 27,\n  enter: 13,\n  backspace: 8,\n  delete: 46,\n  shift: 16,\n  leftCmd: 91,\n  rightCmd: 93,\n  ctrl: 17,\n  alt: 18,\n  tab: 9\n}\n                        \n                    \n\n\n            \n        \n\n    src/map/leaflet/providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LEAFLET_MAP_LAYERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         object\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : {\n    'OpenStreetMap Street': L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n    }),\n    'Mapbox Street': L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n        attribution: 'Map data &copy; OpenStreetMap contributors, CC-BY-SA, Imagery © Mapbox',\n        maxZoom: 18,\n        id: 'mapbox/streets-v11',\n        tileSize: 512,\n        zoomOffset: -1,\n        accessToken: (window as any).mapbox_access_token\n    })\n}\n                        \n                    \n\n\n            \n        \n\n    src/facebook/facebook-sdk.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NG_FSDK_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     InjectionToken\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : new InjectionToken('facebook.config')\n                        \n                    \n\n\n            \n        \n\n    src/google/google-sdk.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NG_GAPI_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         InjectionToken\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : new InjectionToken('google.config')\n                        \n                    \n\n\n            \n        \n\n    src/form/filter/ser-filter.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            noop\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : () => {\n}\n                        \n                    \n\n\n            \n        \n\n    src/form/select/ser-select.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            noop\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : () => {\n}\n                        \n                    \n\n\n            \n        \n\n    src/utils/array.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : (value: any): string[] => Array.isArray(value) ? value : [value]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"}}
}
